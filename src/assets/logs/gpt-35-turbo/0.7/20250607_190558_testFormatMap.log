=== Generated Prompt ===
Below is the focal class and test class for reference:

package redraiment.jactiverecord;

public class Seq {
    public static List < String > map ( Collection < ? > from , String format ) { 
    List < String > to = new ArrayList < > ( from . size ( ) ) ; 
    for ( Object e : from ) { 
    to . add ( String . format ( format , e ) ) ; 
    } return to ; 
    }
}

package redraiment.jactiverecord;

public class SeqTest {
    @Test
     public void testFormatMap ( ) {
         String [ ] actuals = Seq . map ( Arrays . asList ( "STR" , "STR" , "STR" ) , "STR" ) . toArray ( new String [ 0 ] ) ; 
         <ASSERTIONS HERE>
    }
}

Please generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).
========================

=== GPT Response ===
Assert.assertEquals("STR", actuals[0]);
Assert.assertEquals("STR", actuals[1]);
Assert.assertEquals("STR", actuals[2]);
Assert.assertEquals(3, actuals.length);
Assert.assertNotEquals("STR ", actuals[0]);
Assert.assertNotEquals("STR ", actuals[1]);
Assert.assertNotEquals("STR ", actuals[2]);
Assert.assertTrue(Arrays.asList(actuals).contains("STR"));
Assert.assertTrue(Arrays.asList(actuals).contains("STR"));
Assert.assertTrue(Arrays.asList(actuals).contains("STR"));
Assert.assertNotEquals("STR", actuals[0]);
Assert.assertNotEquals("STR", actuals[1]);
Assert.assertNotEquals("STR", actuals[2]);
Assert.assertNotNull(actuals);
Assert.assertArrayEquals(new String[]{"STR", "STR", "STR"}, actuals);
Assert.assertNotSame("STR", actuals[0]);
Assert.assertNotSame("STR", actuals[1]);
Assert.assertNotSame("STR", actuals[2]);
Assert.assertTrue(actuals[0].equals("STR"));
Assert.assertFalse(actuals[0].equals("STR "));
====================

=== Collecting and Comparing Assertions ===
=== Ground Oracle Truth: Assert.assertArrayEquals(newString[]{"STR","STR","STR"},actuals); ===
1.000 - Assert.assertArrayEquals(new String[]{"STR", "STR", "STR"}, actuals)
0.621 - Assert.assertEquals("STR", actuals[0])
0.621 - Assert.assertEquals("STR", actuals[1])
0.621 - Assert.assertEquals("STR", actuals[2])
0.600 - Assert.assertNotEquals("STR ", actuals[0])
0.600 - Assert.assertNotEquals("STR ", actuals[1])
0.600 - Assert.assertNotEquals("STR ", actuals[2])
0.600 - Assert.assertNotEquals("STR", actuals[0])
0.600 - Assert.assertNotEquals("STR", actuals[1])
0.600 - Assert.assertNotEquals("STR", actuals[2])
0.506 - Assert.assertEquals(3, actuals.length)
0.500 - Assert.assertNotSame("STR", actuals[0])
0.500 - Assert.assertNotSame("STR", actuals[1])
0.500 - Assert.assertNotSame("STR", actuals[2])
0.430 - Assert.assertNotNull(actuals)
0.411 - Assert.assertTrue(Arrays.asList(actuals).contains("STR"))
0.411 - Assert.assertTrue(Arrays.asList(actuals).contains("STR"))
0.411 - Assert.assertTrue(Arrays.asList(actuals).contains("STR"))
0.383 - Assert.assertFalse(actuals[0].equals("STR "))
0.366 - Assert.assertTrue(actuals[0].equals("STR"))
