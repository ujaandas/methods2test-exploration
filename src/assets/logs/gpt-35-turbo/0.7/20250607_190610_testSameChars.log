=== Generated Prompt ===
Below is the focal class and test class for reference:

package rockagen.commons-lib;

public class CommUtil {
    public static String repeatChar ( char cha , int len ) { 
    len = len < 0 ? 0 : len ; 
    char [ ] c = new char [ len ] ; 
    for ( int i = 0 ; 
    i < len ; 
    i ++ ) c [ i ] = cha ; 
    return new String ( c ) ; 
    }
}

package rockagen.commons-lib;

public class CommUtilTest {
    @Test
     public void testSameChars ( ) {
         <ASSERTIONS HERE>
    }
}

Please generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).
========================

=== GPT Response ===
assertEquals("AAAAA", CommUtil.repeatChar('A', 5));
assertEquals("BBBB", CommUtil.repeatChar('B', 4));
assertEquals("C", CommUtil.repeatChar('C', 1));
assertEquals("", CommUtil.repeatChar('D', 0));
assertEquals("EEEEE", CommUtil.repeatChar('E', 5));
assertEquals("FFF", CommUtil.repeatChar('F', 3));
assertEquals("GGG", CommUtil.repeatChar('G', 3));
assertEquals("HHHHHH", CommUtil.repeatChar('H', 6));
assertEquals("IIIIIIII", CommUtil.repeatChar('I', 8));
assertEquals("JJJJJJJJJ", CommUtil.repeatChar('J', 9));
assertEquals("KKK", CommUtil.repeatChar('K', 3));
assertEquals("L", CommUtil.repeatChar('L', 1));
assertEquals("", CommUtil.repeatChar('M', 0));
assertEquals("NNNN", CommUtil.repeatChar('N', 4));
assertEquals("OOOOO", CommUtil.repeatChar('O', 5));
assertEquals("PPPPPPPP", CommUtil.repeatChar('P', 8));
assertEquals("QQQQQQQ", CommUtil.repeatChar('Q', 7));
assertEquals("RRRR", CommUtil.repeatChar('R', 4));
assertEquals("", CommUtil.repeatChar('S', 0));
assertEquals("TTTTTTTTT", CommUtil.repeatChar('T', 9));
====================

=== Collecting and Comparing Assertions ===
=== Ground Oracle Truth: Assert.assertEquals("STR",CommUtil.repeatChar('b',10)); ===
0.933 - assertEquals("", CommUtil.repeatChar('D', 0))
0.933 - assertEquals("", CommUtil.repeatChar('M', 0))
0.933 - assertEquals("", CommUtil.repeatChar('S', 0))
0.923 - assertEquals("C", CommUtil.repeatChar('C', 1))
0.923 - assertEquals("L", CommUtil.repeatChar('L', 1))
0.894 - assertEquals("RRRR", CommUtil.repeatChar('R', 4))
0.882 - assertEquals("FFF", CommUtil.repeatChar('F', 3))
0.882 - assertEquals("GGG", CommUtil.repeatChar('G', 3))
0.882 - assertEquals("KKK", CommUtil.repeatChar('K', 3))
0.872 - assertEquals("BBBB", CommUtil.repeatChar('B', 4))
0.872 - assertEquals("NNNN", CommUtil.repeatChar('N', 4))
0.863 - assertEquals("AAAAA", CommUtil.repeatChar('A', 5))
0.863 - assertEquals("EEEEE", CommUtil.repeatChar('E', 5))
0.863 - assertEquals("OOOOO", CommUtil.repeatChar('O', 5))
0.854 - assertEquals("HHHHHH", CommUtil.repeatChar('H', 6))
0.848 - assertEquals("TTTTTTTTT", CommUtil.repeatChar('T', 9))
0.845 - assertEquals("QQQQQQQ", CommUtil.repeatChar('Q', 7))
0.837 - assertEquals("IIIIIIII", CommUtil.repeatChar('I', 8))
0.837 - assertEquals("PPPPPPPP", CommUtil.repeatChar('P', 8))
0.828 - assertEquals("JJJJJJJJJ", CommUtil.repeatChar('J', 9))
