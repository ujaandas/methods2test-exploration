=== Generated Prompt ===
Below is the focal class and test class for reference:

package redraiment.jactiverecord;

public class Seq {
    public static String join ( Collection < ? > list , String delimiter ) { 
    if ( list == null || list . isEmpty ( ) ) { 
    return "STR" ; 
    } if ( delimiter == null ) { 
    delimiter = "STR" ; 
    } StringBuilder s = new StringBuilder ( ) ; 
    boolean first = true ; 
    for ( Object e : list ) { 
    if ( first ) { 
    first = false ; 
    } else { 
    s . append ( delimiter ) ; 
    } s . append ( e ) ; 
    } return s . toString ( ) ; 
    }
}

package redraiment.jactiverecord;

public class SeqTest {
    @Test
     public void testJoinListNull ( ) {
         <ASSERTIONS HERE>
    }
}

Please generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).
========================

=== GPT Response ===
Assert.assertEquals("STR", Seq.join(null, ","));

Assert.assertEquals("STR", Seq.join(Collections.emptyList(), ","));

Assert.assertEquals("1", Seq.join(Collections.singletonList(1), ","));

Assert.assertEquals("1,2,3", Seq.join(Arrays.asList(1, 2, 3), ","));

Assert.assertEquals("a,b,c", Seq.join(Arrays.asList("a", "b", "c"), ","));

Assert.assertEquals("true,false,true", Seq.join(Arrays.asList(true, false, true), ","));

Assert.assertEquals("1.0,2.0,3.0", Seq.join(Arrays.asList(1.0, 2.0, 3.0), ","));

Assert.assertEquals("1,2,3", Seq.join(Arrays.asList(1, 2, 3), null));

Assert.assertEquals("a-b-c", Seq.join(Arrays.asList("a", "b", "c"), "-"));

Assert.assertEquals("true false true", Seq.join(Arrays.asList(true, false, true), " "));

Assert.assertEquals("", Seq.join(Collections.emptyList(), null));

Assert.assertEquals("1", Seq.join(Collections.singletonList(1), null));

Assert.assertEquals("a", Seq.join(Collections.singletonList("a"), null));

Assert.assertEquals("true", Seq.join(Collections.singletonList(true), null));

Assert.assertEquals("1.0", Seq.join(Collections.singletonList(1.0), null));

Assert.assertEquals("STR", Seq.join(Collections.emptyList(), null));

Assert.assertEquals("STR", Seq.join(null, null));

Assert.assertEquals("STR", Seq.join(Collections.emptyList(), ""));

Assert.assertEquals("STR", Seq.join(null, ""));
====================

=== Collecting and Comparing Assertions ===
=== Ground Oracle Truth: Assert.assertEquals("STR",Seq.join(null,"STR")); ===
0.961 - Assert.assertEquals("STR", Seq.join(null, ""))
0.949 - Assert.assertEquals("STR", Seq.join(null, ","))
0.886 - Assert.assertEquals("STR", Seq.join(null, null))
0.729 - Assert.assertEquals("STR", Seq.join(Collections.emptyList(), ""))
0.722 - Assert.assertEquals("STR", Seq.join(Collections.emptyList(), ","))
0.694 - Assert.assertEquals("STR", Seq.join(Collections.emptyList(), null))
0.653 - Assert.assertEquals("", Seq.join(Collections.emptyList(), null))
0.640 - Assert.assertEquals("1", Seq.join(Collections.singletonList(1), ","))
0.639 - Assert.assertEquals("1,2,3", Seq.join(Arrays.asList(1, 2, 3), null))
0.625 - Assert.assertEquals("1,2,3", Seq.join(Arrays.asList(1, 2, 3), ","))
0.614 - Assert.assertEquals("1", Seq.join(Collections.singletonList(1), null))
0.602 - Assert.assertEquals("a", Seq.join(Collections.singletonList("a"), null))
0.590 - Assert.assertEquals("1.0", Seq.join(Collections.singletonList(1.0), null))
0.588 - Assert.assertEquals("a,b,c", Seq.join(Arrays.asList("a", "b", "c"), ","))
0.588 - Assert.assertEquals("a-b-c", Seq.join(Arrays.asList("a", "b", "c"), "-"))
0.579 - Assert.assertEquals("true", Seq.join(Collections.singletonList(true), null))
0.566 - Assert.assertEquals("true false true", Seq.join(Arrays.asList(true, false, true), " "))
0.556 - Assert.assertEquals("1.0,2.0,3.0", Seq.join(Arrays.asList(1.0, 2.0, 3.0), ","))
0.552 - Assert.assertEquals("true,false,true", Seq.join(Arrays.asList(true, false, true), ","))
