=== Generated Prompt ===
Below is the focal class and test class for reference:

package hazelcast.hazelcast-simulator.simulator;

public class PropertyBindingSupport_bind0_Numerical {
    static boolean bind0 ( Object object , String property , String value ) { 
    value = value . trim ( ) ; 
    String [ ] path = property . split ( "STR" ) ; 
    object = findTargetObject ( object , property , path ) ; 
    if ( object == null ) { 
    return false ; 
    } Field field = findField ( object . getClass ( ) , path [ path . length - 1 ] ) ; 
    if ( field == null || isProbeField ( field ) ) { 
    return false ; 
    } try { 
    setField ( field , object , value ) ; 
    return true ; 
    } catch ( Exception e ) { 
    throw new BindException ( format ( "STR" , value , object . getClass ( ) . getName ( ) , property , field . getType ( ) ) , e ) ; 
    } }
}

package hazelcast.hazelcast-simulator.simulator;

public class PropertyBindingSupport_bind0_NumericalTest {
    @Test
     public void bind_short_whitespace ( ) {
         <ASSERTIONS HERE>
    }
}

Please generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).
========================

=== GPT Response ===
Assert.assertTrue(PropertyBindingSupport_bind0_Numerical.bind0(object, "property", "value"));
Assert.assertFalse(PropertyBindingSupport_bind0_Numerical.bind0(null, "property", "value"));
Assert.assertFalse(PropertyBindingSupport_bind0_Numerical.bind0(object, "probeProperty", "value"));
Assert.assertFalse(PropertyBindingSupport_bind0_Numerical.bind0(object, "property", "probeValue"));
Assert.assertTrue(PropertyBindingSupport_bind0_Numerical.bind0(object, "property", "123"));
Assert.assertTrue(PropertyBindingSupport_bind0_Numerical.bind0(object, "nested.property", "123"));
Assert.assertFalse(PropertyBindingSupport_bind0_Numerical.bind0(object, "nested.probeProperty", "123"));
Assert.assertFalse(PropertyBindingSupport_bind0_Numerical.bind0(object, "nested.property", "probeValue"));
Assert.assertTrue(PropertyBindingSupport_bind0_Numerical.bind0(object, "property", "-123"));
Assert.assertTrue(PropertyBindingSupport_bind0_Numerical.bind0(object, "property", "0"));
Assert.assertFalse(PropertyBindingSupport_bind0_Numerical.bind0(object, "property", ""));
Assert.assertFalse(PropertyBindingSupport_bind0_Numerical.bind0(object, "property", "abc"));
Assert.assertTrue(PropertyBindingSupport_bind0_Numerical.bind0(object, "property", "3.14"));
Assert.assertTrue(PropertyBindingSupport_bind0_Numerical.bind0(object, "property", "-3.14"));
Assert.assertTrue(PropertyBindingSupport_bind0_Numerical.bind0(object, "property", "1.23E6"));
Assert.assertTrue(PropertyBindingSupport_bind0_Numerical.bind0(object, "property", "-1.23E6"));
Assert.assertTrue(PropertyBindingSupport_bind0_Numerical.bind0(object, "property", "1.23E-6"));
Assert.assertTrue(PropertyBindingSupport_bind0_Numerical.bind0(object, "property", "-1.23E-6"));
Assert.assertFalse(PropertyBindingSupport_bind0_Numerical.bind0(object, "property", "1.23E"));
====================

=== Collecting and Comparing Assertions ===
=== Ground Oracle Truth: assertTrue(bind0(testObject,"STR","STR")); ===
0.500 - Assert.assertTrue(PropertyBindingSupport_bind0_Numerical.bind0(object, "property", "0"))
0.492 - Assert.assertTrue(PropertyBindingSupport_bind0_Numerical.bind0(object, "property", "123"))
0.488 - Assert.assertTrue(PropertyBindingSupport_bind0_Numerical.bind0(object, "property", "-123"))
0.488 - Assert.assertTrue(PropertyBindingSupport_bind0_Numerical.bind0(object, "property", "3.14"))
0.484 - Assert.assertTrue(PropertyBindingSupport_bind0_Numerical.bind0(object, "property", "value"))
0.484 - Assert.assertTrue(PropertyBindingSupport_bind0_Numerical.bind0(object, "property", "-3.14"))
0.480 - Assert.assertTrue(PropertyBindingSupport_bind0_Numerical.bind0(object, "property", "1.23E6"))
0.476 - Assert.assertTrue(PropertyBindingSupport_bind0_Numerical.bind0(object, "property", "-1.23E6"))
0.476 - Assert.assertTrue(PropertyBindingSupport_bind0_Numerical.bind0(object, "property", "1.23E-6"))
0.472 - Assert.assertTrue(PropertyBindingSupport_bind0_Numerical.bind0(object, "property", "-1.23E-6"))
0.465 - Assert.assertTrue(PropertyBindingSupport_bind0_Numerical.bind0(object, "nested.property", "123"))
0.450 - Assert.assertFalse(PropertyBindingSupport_bind0_Numerical.bind0(object, "property", ""))
0.439 - Assert.assertFalse(PropertyBindingSupport_bind0_Numerical.bind0(object, "property", "abc"))
0.432 - Assert.assertFalse(PropertyBindingSupport_bind0_Numerical.bind0(object, "property", "1.23E"))
0.415 - Assert.assertFalse(PropertyBindingSupport_bind0_Numerical.bind0(object, "probeProperty", "value"))
0.415 - Assert.assertFalse(PropertyBindingSupport_bind0_Numerical.bind0(object, "property", "probeValue"))
0.400 - Assert.assertFalse(PropertyBindingSupport_bind0_Numerical.bind0(object, "nested.probeProperty", "123"))
0.394 - Assert.assertFalse(PropertyBindingSupport_bind0_Numerical.bind0(object, "nested.property", "probeValue"))
0.358 - Assert.assertFalse(PropertyBindingSupport_bind0_Numerical.bind0(null, "property", "value"))
