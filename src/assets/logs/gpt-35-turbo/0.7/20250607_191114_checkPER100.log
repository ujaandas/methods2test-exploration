=== Generated Prompt ===
Below is the focal class and test class for reference:

package javadev.moneytostr-russian;

public class MoneyToStr {
    public String convert ( Double theMoney ) { 
    if ( theMoney == null ) { 
    throw new IllegalArgumentException ( "STR" ) ; 
    } Long intPart = theMoney . longValue ( ) ; 
    Long fractPart = Math . round ( ( theMoney - intPart ) * NUM100 ) ; 
    if ( currency == Currency . PER1000 ) { 
    fractPart = Math . round ( ( theMoney - intPart ) * NUM1000 ) ; 
    } return convert ( intPart , fractPart ) ; 
    }
}

package javadev.moneytostr-russian;

public class MoneyToStrTest {
    @Test
     public void checkPER100 ( ) {
         <ASSERTIONS HERE>
    }
}

Please generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).
========================

=== GPT Response ===
assertEquals("сто двадцать три рубля 45 копеек", moneyToStr.convert(123.45));
assertEquals("двести рублей 0 копеек", moneyToStr.convert(200.0));
assertEquals("триста сорок рублей 10 копеек", moneyToStr.convert(340.10));
assertEquals("пятьсот двадцать два рубля 99 копеек", moneyToStr.convert(522.99));
assertEquals("шестьсот рублей 50 копеек", moneyToStr.convert(600.50));
assertEquals("восемьсот семьдесят шесть рублей 78 копеек", moneyToStr.convert(876.78));
assertEquals("тысяча рублей 0 копеек", moneyToStr.convert(1000.0));
assertEquals("две тысячи рублей 30 копеек", moneyToStr.convert(2000.30));
assertEquals("три тысячи рублей 15 копеек", moneyToStr.convert(3000.15));
assertEquals("четыре тысячи пятьсот рублей 99 копеек", moneyToStr.convert(4500.99));
assertEquals("пять тысяч рублей 50 копеек", moneyToStr.convert(5000.50));
assertEquals("шесть тысяч сорок рублей 60 копеек", moneyToStr.convert(6040.60));
assertEquals("семь тысяч восемьсот рублей 70 копеек", moneyToStr.convert(7800.70));
assertEquals("девять тысяч девятьсот девяносто девять рублей 99 копеек", moneyToStr.convert(9999.99));
assertEquals("десять тысяч рублей 0 копеек", moneyToStr.convert(10000.0));
assertEquals("пятнадцать тысяч пятьсот рублей 25 копеек", moneyToStr.convert(15500.25));
assertEquals("двадцать
====================

=== Collecting and Comparing Assertions ===
=== Ground Oracle Truth: assertEquals("STR",moneyToStrPER100.convert(V_1_01D)); ===
0.678 - assertEquals("тысяча рублей 0 копеек", moneyToStr.convert(1000.0))
0.667 - assertEquals("двести рублей 0 копеек", moneyToStr.convert(200.0))
0.645 - assertEquals("триста сорок рублей 10 копеек", moneyToStr.convert(340.10))
0.645 - assertEquals("десять тысяч рублей 0 копеек", moneyToStr.convert(10000.0))
0.644 - assertEquals("шестьсот рублей 50 копеек", moneyToStr.convert(600.50))
0.633 - assertEquals("две тысячи рублей 30 копеек", moneyToStr.convert(2000.30))
0.633 - assertEquals("три тысячи рублей 15 копеек", moneyToStr.convert(3000.15))
0.633 - assertEquals("пять тысяч рублей 50 копеек", moneyToStr.convert(5000.50))
0.618 - assertEquals("сто двадцать три рубля 45 копеек", moneyToStr.convert(123.45))
0.603 - assertEquals("шесть тысяч сорок рублей 60 копеек", moneyToStr.convert(6040.60))
0.589 - assertEquals("семь тысяч восемьсот рублей 70 копеек", moneyToStr.convert(7800.70))
0.585 - assertEquals("четыре тысячи пятьсот рублей 99 копеек", moneyToStr.convert(4500.99))
0.583 - assertEquals("пятьсот двадцать два рубля 99 копеек", moneyToStr.convert(522.99))
0.582 - assertEquals("пятнадцать тысяч пятьсот рублей 25 копеек", moneyToStr.convert(15500.25))
0.556 - assertEquals("восемьсот семьдесят шесть рублей 78 копеек", moneyToStr.convert(876.78))
0.507 - assertEquals("девять тысяч девятьсот девяносто девять рублей 99 копеек", moneyToStr.convert(9999.99))
0.373 - assertEquals("двадцать
