=== Generated Prompt ===
Below is the focal class and test class for reference:

package hazelcast.hazelcast-simulator.simulator;

public class PerformanceStats {
    public long getOperationCount ( ) { 
    return operationCount ; 
    }
}

package hazelcast.hazelcast-simulator.simulator;

public class PerformanceStatsTest {
    @Test
     public void testAdd_withoutAddOperationCountAndThroughput_toEmptyState ( ) {
         PerformanceStats addState = new PerformanceStats ( ) ; 
         addState . add ( new PerformanceStats ( 100 , 5.0 , 10.0 , 450.0d , 400 , 500 ) , false ) ; 
         <ASSERTIONS HERE>
    }
}

Please generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).
========================

=== GPT Response ===
assertEquals(100, addState.getOperationCount());
assertEquals(5.0, addState.getThroughput(), 0.001);
assertEquals(10.0, addState.getLatencyAvg(), 0.001);
assertEquals(450.0, addState.getLatency50(), 0.001);
assertEquals(400, addState.getLatency95());
assertEquals(500, addState.getLatency99());
assertEquals(0, addState.getErrorCount());
assertEquals(0, addState.getThroughputInterval());
assertEquals(0, addState.getLatencyAvgInterval());
assertEquals(0, addState.getLatency50Interval());
assertEquals(0, addState.getLatency95Interval());
assertEquals(0, addState.getLatency99Interval());
assertEquals(0, addState.getErrorCountInterval());
assertEquals(100, addState.getOperationCountTotal());
assertEquals(5.0, addState.getThroughputTotal(), 0.001);
assertEquals(10.0, addState.getLatencyAvgTotal(), 0.001);
assertEquals(450.0, addState.getLatency50Total(), 0.001);
assertEquals(400, addState.getLatency95Total());
assertEquals(500, addState.getLatency99Total());
assertEquals(0, addState.getErrorCountTotal());
====================

=== Collecting and Comparing Assertions ===
=== Ground Oracle Truth: assertEquals(100,addState.getOperationCount()); ===
1.000 - assertEquals(100, addState.getOperationCount())
0.948 - assertEquals(100, addState.getOperationCountTotal())
0.860 - assertEquals(0, addState.getErrorCount())
0.813 - assertEquals(0, addState.getErrorCountTotal())
0.787 - assertEquals(0, addState.getErrorCountInterval())
0.782 - assertEquals(400, addState.getLatency95())
0.782 - assertEquals(500, addState.getLatency99())
0.761 - assertEquals(400, addState.getLatency95Total())
0.761 - assertEquals(500, addState.getLatency99Total())
0.737 - assertEquals(10.0, addState.getLatencyAvg(), 0.001)
0.723 - assertEquals(5.0, addState.getThroughput(), 0.001)
0.723 - assertEquals(0, addState.getThroughputInterval())
0.720 - assertEquals(10.0, addState.getLatencyAvgTotal(), 0.001)
0.716 - assertEquals(450.0, addState.getLatency50(), 0.001)
0.710 - assertEquals(0, addState.getLatency50Interval())
0.710 - assertEquals(0, addState.getLatency95Interval())
0.710 - assertEquals(0, addState.getLatency99Interval())
0.702 - assertEquals(0, addState.getLatencyAvgInterval())
0.700 - assertEquals(450.0, addState.getLatency50Total(), 0.001)
0.687 - assertEquals(5.0, addState.getThroughputTotal(), 0.001)
