=== Generated Prompt ===
Below is the focal class and test class for reference:

package redraiment.jactiverecord;

public class Seq {
    public static List < String > map ( Collection < ? > from , String format ) { 
    List < String > to = new ArrayList < > ( from . size ( ) ) ; 
    for ( Object e : from ) { 
    to . add ( String . format ( format , e ) ) ; 
    } return to ; 
    }
}

package redraiment.jactiverecord;

public class SeqTest {
    @Test
     public void testFormatMap ( ) {
         String [ ] actuals = Seq . map ( Arrays . asList ( "STR" , "STR" , "STR" ) , "STR" ) . toArray ( new String [ 0 ] ) ; 
         <ASSERTIONS HERE>
    }
}

Please generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).
========================

=== GPT Response ===
assertEquals("STR", actuals[0]);
assertEquals("STR", actuals[1]);
assertEquals("STR", actuals[2]);
assertEquals(3, actuals.length);
assertNotEquals("str", actuals[0]);
assertNotNull(actuals);
assertArrayEquals(new String[]{"STR", "STR", "STR"}, actuals);
assertTrue(Arrays.asList(actuals).contains("STR"));
assertFalse(Arrays.asList(actuals).contains("str"));
assertSame("STR", actuals[0]);
assertNotSame("str", actuals[0]);
assertEquals("STR", actuals[0]);
assertEquals("STR", actuals[1]);
assertEquals("STR", actuals[2]);
assertEquals(3, actuals.length);
assertNotEquals("str", actuals[0]);
assertNotNull(actuals);
assertArrayEquals(new String[]{"STR", "STR", "STR"}, actuals);
assertTrue(Arrays.asList(actuals).contains("STR"));
assertFalse(Arrays.asList(actuals).contains("str"));
assertSame("STR", actuals[0]);
assertNotSame("str", actuals[0]);
====================

=== Collecting and Comparing Assertions ===
=== Ground Oracle Truth: Assert.assertArrayEquals(newString[]{"STR","STR","STR"},actuals); ===
1.000 - assertArrayEquals(new String[]{"STR", "STR", "STR"}, actuals)
1.000 - assertArrayEquals(new String[]{"STR", "STR", "STR"}, actuals)
0.621 - assertEquals("STR", actuals[0])
0.621 - assertEquals("STR", actuals[1])
0.621 - assertEquals("STR", actuals[2])
0.621 - assertEquals("STR", actuals[0])
0.621 - assertEquals("STR", actuals[1])
0.621 - assertEquals("STR", actuals[2])
0.556 - assertNotEquals("str", actuals[0])
0.556 - assertNotEquals("str", actuals[0])
0.518 - assertSame("STR", actuals[0])
0.518 - assertSame("STR", actuals[0])
0.506 - assertEquals(3, actuals.length)
0.506 - assertEquals(3, actuals.length)
0.455 - assertNotSame("str", actuals[0])
0.455 - assertNotSame("str", actuals[0])
0.430 - assertNotNull(actuals)
0.430 - assertNotNull(actuals)
0.411 - assertTrue(Arrays.asList(actuals).contains("STR"))
0.411 - assertTrue(Arrays.asList(actuals).contains("STR"))
0.407 - assertFalse(Arrays.asList(actuals).contains("str"))
0.407 - assertFalse(Arrays.asList(actuals).contains("str"))
