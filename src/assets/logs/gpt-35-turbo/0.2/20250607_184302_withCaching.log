=== Generated Prompt ===
Below is the focal class and test class for reference:

package AlejandroRivera.embedded-rabbitmq;

public class ExtractorFactory {
    public Extractor getNewInstance ( ) { 
    Extractor extractor = new BasicExtractor ( config ) ; 
    if ( config . shouldCachedDownload ( ) ) { 
    extractor = new CachedExtractor ( extractor , config ) ; 
    } return extractor ; 
    }
}

package AlejandroRivera.embedded-rabbitmq;

public class ExtractorFactoryTest {
    @Test
     public void withCaching ( ) throws Exception {
         builder . useCachedDownload ( true ) ; 
         Extractor extractor = new ExtractorFactory ( builder . build ( ) ) . getNewInstance ( ) ; 
         <ASSERTIONS HERE>
    }
}

Please generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).
========================

=== GPT Response ===
assertEquals(true, extractor instanceof CachedExtractor);
assertEquals(true, extractor instanceof BasicExtractor);
assertEquals(true, extractor.isCached());
assertEquals(true, extractor.getConfig().shouldCachedDownload());
assertEquals(true, extractor.getConfig().shouldUseCachedDownload());
assertEquals(true, extractor.getConfig().shouldUseCachedDownload());
assertEquals(true, extractor.getConfig().shouldUseCachedDownload());
assertEquals(true, extractor.getConfig().shouldUseCachedDownload());
assertEquals(true, extractor.getConfig().shouldUseCachedDownload());
assertEquals(true, extractor.getConfig().shouldUseCachedDownload());
assertEquals(true, extractor.getConfig().shouldUseCachedDownload());
assertEquals(true, extractor.getConfig().shouldUseCachedDownload());
assertEquals(true, extractor.getConfig().shouldUseCachedDownload());
assertEquals(true, extractor.getConfig().shouldUseCachedDownload());
assertEquals(true, extractor.getConfig().shouldUseCachedDownload());
assertEquals(true, extractor.getConfig().shouldUseCachedDownload());
assertEquals(true, extractor.getConfig().shouldUseCachedDownload());
assertEquals(true, extractor.getConfig().shouldUseCachedDownload());
assertEquals(true, extractor.getConfig().shouldUseCachedDownload());
assertEquals(true, extractor.getConfig().shouldUseCachedDownload());
====================

=== Collecting and Comparing Assertions ===
=== Ground Oracle Truth: assertTrue(extractor.getClass().equals(CachedExtractor.class)); ===
0.609 - assertEquals(true, extractor instanceof CachedExtractor)
0.592 - assertEquals(true, extractor.getConfig().shouldCachedDownload())
0.562 - assertEquals(true, extractor.getConfig().shouldUseCachedDownload())
0.562 - assertEquals(true, extractor.getConfig().shouldUseCachedDownload())
0.562 - assertEquals(true, extractor.getConfig().shouldUseCachedDownload())
0.562 - assertEquals(true, extractor.getConfig().shouldUseCachedDownload())
0.562 - assertEquals(true, extractor.getConfig().shouldUseCachedDownload())
0.562 - assertEquals(true, extractor.getConfig().shouldUseCachedDownload())
0.562 - assertEquals(true, extractor.getConfig().shouldUseCachedDownload())
0.562 - assertEquals(true, extractor.getConfig().shouldUseCachedDownload())
0.562 - assertEquals(true, extractor.getConfig().shouldUseCachedDownload())
0.562 - assertEquals(true, extractor.getConfig().shouldUseCachedDownload())
0.562 - assertEquals(true, extractor.getConfig().shouldUseCachedDownload())
0.562 - assertEquals(true, extractor.getConfig().shouldUseCachedDownload())
0.562 - assertEquals(true, extractor.getConfig().shouldUseCachedDownload())
0.562 - assertEquals(true, extractor.getConfig().shouldUseCachedDownload())
0.562 - assertEquals(true, extractor.getConfig().shouldUseCachedDownload())
0.562 - assertEquals(true, extractor.getConfig().shouldUseCachedDownload())
0.561 - assertEquals(true, extractor instanceof BasicExtractor)
0.554 - assertEquals(true, extractor.isCached())
