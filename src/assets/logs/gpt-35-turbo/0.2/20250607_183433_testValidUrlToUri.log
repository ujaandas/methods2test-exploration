=== Generated Prompt ===
Below is the focal class and test class for reference:

package trautonen.coveralls-maven-plugin;

public class UrlUtils {
    public static URI toUri ( final URL url ) { 
    try { 
    return url . toURI ( ) ; 
    } catch ( URISyntaxException ex ) { 
    throw new IllegalArgumentException ( ex ) ; 
    } }
}

package trautonen.coveralls-maven-plugin;

public class UrlUtilsTest {
    @Test
     public void testValidUrlToUri ( ) throws Exception {
         URI uri = UrlUtils . toUri ( new URL ( "STR" ) ) ; 
         <ASSERTIONS HERE>
    }
}

Please generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).
========================

=== GPT Response ===
Assert.assertNotNull(uri);
Assert.assertEquals(new URI("STR"), uri);
Assert.assertTrue(uri.isAbsolute());
Assert.assertFalse(uri.isOpaque());
Assert.assertEquals("http", uri.getScheme());
Assert.assertEquals(-1, uri.getPort());
Assert.assertEquals("/path", uri.getPath());
Assert.assertEquals("query", uri.getQuery());
Assert.assertEquals("fragment", uri.getFragment());
Assert.assertEquals("user:pass", uri.getUserInfo());
Assert.assertEquals("host", uri.getHost());
Assert.assertEquals("http://host/path?query#fragment", uri.toString());
Assert.assertEquals(new URI("http://host/path?query#fragment"), uri.normalize());
Assert.assertEquals(new URI("http://host/path?query#fragment"), uri.resolve(""));
Assert.assertEquals(new URI("http://host/path?query#fragment"), uri.resolve("#"));
Assert.assertEquals(new URI("http://host/path?query#fragment"), uri.resolve("?"));
Assert.assertEquals(new URI("http://host/path?query#fragment"), uri.resolve("/"));
Assert.assertEquals(new URI("http://host/path?query#fragment"), uri.resolve("relative"));
Assert.assertEquals(new URI("http://host/path?query#fragment"), uri.resolve(new URI("relative")));
Assert.assertEquals(new URI("http://host/path?query#fragment"), uri.relativize(new URI("http://host/path?query#fragment")));
====================

=== Collecting and Comparing Assertions ===
=== Ground Oracle Truth: assertEquals(newURI("STR"),uri); ===
1.000 - Assert.assertEquals(new URI("STR"), uri)
0.615 - Assert.assertEquals("host", uri.getHost())
0.606 - Assert.assertEquals("/path", uri.getPath())
0.597 - Assert.assertEquals("http", uri.getScheme())
0.597 - Assert.assertEquals("query", uri.getQuery())
0.590 - Assert.assertEquals(-1, uri.getPort())
0.549 - Assert.assertEquals(new URI("http://host/path?query#fragment"), uri.normalize())
0.549 - Assert.assertEquals(new URI("http://host/path?query#fragment"), uri.resolve(""))
0.548 - Assert.assertEquals("fragment", uri.getFragment())
0.544 - Assert.assertEquals(new URI("http://host/path?query#fragment"), uri.resolve("#"))
0.544 - Assert.assertEquals(new URI("http://host/path?query#fragment"), uri.resolve("?"))
0.544 - Assert.assertEquals(new URI("http://host/path?query#fragment"), uri.resolve("/"))
0.541 - Assert.assertEquals("user:pass", uri.getUserInfo())
0.531 - Assert.assertNotNull(uri)
0.509 - Assert.assertEquals(new URI("http://host/path?query#fragment"), uri.resolve("relative"))
0.483 - Assert.assertFalse(uri.isOpaque())
0.475 - Assert.assertEquals(new URI("http://host/path?query#fragment"), uri.resolve(new URI("relative")))
0.430 - Assert.assertEquals("http://host/path?query#fragment", uri.toString())
0.407 - Assert.assertTrue(uri.isAbsolute())
0.389 - Assert.assertEquals(new URI("http://host/path?query#fragment"), uri.relativize(new URI("http://host/path?query#fragment")))
