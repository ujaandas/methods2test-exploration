=== Generated Prompt ===
Below is the focal class and test class for reference:

package hazelcast.hazelcast-simulator.simulator;

public class WorkerQuery {
    public List < WorkerData > execute ( List < WorkerData > input ) { 
    switch ( targetType ) { 
    case ALL : return select ( input , null ) ; 
    case MEMBER : return select ( input , true ) ; 
    case CLIENT : return select ( input , false ) ; 
    case PREFER_CLIENT : List < WorkerData > result = select ( input , false ) ; 
    return ! result . isEmpty ( ) ? result : select ( input , true ) ; 
    default : throw new IllegalStateException ( "STR" + targetType ) ; 
    } }
}

package hazelcast.hazelcast-simulator.simulator;

public class WorkerQueryTest {
    @Test
     public void noFilters ( ) {
         list . add ( new WorkerData ( newParameters ( agent1 , 1 , "STR" , "STR" ) ) ) ; 
         list . add ( new WorkerData ( newParameters ( agent1 , 2 , "STR" , "STR" ) ) ) ; 
         list . add ( new WorkerData ( newParameters ( agent1 , 3 , "STR" , "STR" ) ) ) ; 
         List < WorkerData > result = new WorkerQuery ( ) . execute ( list ) ; 
         <ASSERTIONS HERE>
    }
}

Please generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).
========================

=== GPT Response ===
Assert.assertEquals(3, result.size());
Assert.assertTrue(result.contains(new WorkerData(newParameters(agent1, 1, "STR", "STR"))));
Assert.assertTrue(result.contains(new WorkerData(newParameters(agent1, 2, "STR", "STR"))));
Assert.assertTrue(result.contains(new WorkerData(newParameters(agent1, 3, "STR", "STR"))));
Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 4, "STR", "STR"))));
Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 5, "STR", "STR"))));
Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 6, "STR", "STR"))));
Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 7, "STR", "STR"))));
Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 8, "STR", "STR"))));
Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 9, "STR", "STR"))));
Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 10, "STR", "STR"))));
Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 11, "STR", "STR"))));
Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 12, "STR", "STR"))));
Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 13, "STR", "STR"))));
Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 14, "STR", "STR"))));
Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 15, "STR", "STR"))));
Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 16, "STR", "STR"))));
Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 17, "STR", "STR"))));
Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 18, "STR", "STR"))));
Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 19, "STR", "STR"))));
Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 20, "STR", "STR")));
====================

=== Collecting and Comparing Assertions ===
=== Ground Oracle Truth: assertEquals(list,result); ===
0.778 - Assert.assertEquals(3, result.size())
0.324 - Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 4, "STR", "STR"))))
0.324 - Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 5, "STR", "STR"))))
0.324 - Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 6, "STR", "STR"))))
0.324 - Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 7, "STR", "STR"))))
0.324 - Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 8, "STR", "STR"))))
0.324 - Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 9, "STR", "STR"))))
0.324 - Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 20, "STR", "STR")))
0.321 - Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 10, "STR", "STR"))))
0.321 - Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 11, "STR", "STR"))))
0.321 - Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 12, "STR", "STR"))))
0.321 - Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 13, "STR", "STR"))))
0.321 - Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 14, "STR", "STR"))))
0.321 - Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 15, "STR", "STR"))))
0.321 - Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 16, "STR", "STR"))))
0.321 - Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 17, "STR", "STR"))))
0.321 - Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 18, "STR", "STR"))))
0.321 - Assert.assertFalse(result.contains(new WorkerData(newParameters(agent1, 19, "STR", "STR"))))
0.288 - Assert.assertTrue(result.contains(new WorkerData(newParameters(agent1, 1, "STR", "STR"))))
0.288 - Assert.assertTrue(result.contains(new WorkerData(newParameters(agent1, 2, "STR", "STR"))))
0.288 - Assert.assertTrue(result.contains(new WorkerData(newParameters(agent1, 3, "STR", "STR"))))
