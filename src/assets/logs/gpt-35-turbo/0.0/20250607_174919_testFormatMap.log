=== Generated Prompt ===
Below is the focal class and test class for reference:

package redraiment.jactiverecord;

public class Seq {
    public static List < String > map ( Collection < ? > from , String format ) { 
    List < String > to = new ArrayList < > ( from . size ( ) ) ; 
    for ( Object e : from ) { 
    to . add ( String . format ( format , e ) ) ; 
    } return to ; 
    }
}

package redraiment.jactiverecord;

public class SeqTest {
    @Test
     public void testFormatMap ( ) {
         String [ ] actuals = Seq . map ( Arrays . asList ( "STR" , "STR" , "STR" ) , "STR" ) . toArray ( new String [ 0 ] ) ; 
         <ASSERTIONS HERE>
    }
}

Please generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).
========================

=== GPT Response ===
assertEquals("STR", actuals[0]);
assertEquals("STR", actuals[1]);
assertEquals("STR", actuals[2]);
assertEquals(3, actuals.length);
assertNotEquals("STR ", actuals[0]);
assertNotEquals("STR ", actuals[1]);
assertNotEquals("STR ", actuals[2]);
assertNotNull(actuals[0]);
assertNotNull(actuals[1]);
assertNotNull(actuals[2]);
assertTrue(actuals[0].equals("STR"));
assertTrue(actuals[1].equals("STR"));
assertTrue(actuals[2].equals("STR"));
assertFalse(actuals[0].isEmpty());
assertFalse(actuals[1].isEmpty());
assertFalse(actuals[2].isEmpty());
assertNotSame("STR", actuals[0]);
assertNotSame("STR", actuals[1]);
assertNotSame("STR", actuals[2]);
assertSame(actuals[0], actuals[0]);
assertSame(actuals[1], actuals[1]);
assertSame(actuals[2], actuals[2]);
====================

=== Collecting and Comparing Assertions ===
=== Ground Oracle Truth: Assert.assertArrayEquals(newString[]{"STR","STR","STR"},actuals); ===
0.621 - assertEquals("STR", actuals[0])
0.621 - assertEquals("STR", actuals[1])
0.621 - assertEquals("STR", actuals[2])
0.600 - assertNotEquals("STR ", actuals[0])
0.600 - assertNotEquals("STR ", actuals[1])
0.600 - assertNotEquals("STR ", actuals[2])
0.506 - assertEquals(3, actuals.length)
0.500 - assertNotSame("STR", actuals[0])
0.500 - assertNotSame("STR", actuals[1])
0.500 - assertNotSame("STR", actuals[2])
0.489 - assertSame(actuals[0], actuals[0])
0.489 - assertSame(actuals[1], actuals[1])
0.489 - assertSame(actuals[2], actuals[2])
0.415 - assertNotNull(actuals[0])
0.415 - assertNotNull(actuals[1])
0.415 - assertNotNull(actuals[2])
0.400 - assertFalse(actuals[0].isEmpty())
0.400 - assertFalse(actuals[1].isEmpty())
0.400 - assertFalse(actuals[2].isEmpty())
0.366 - assertTrue(actuals[0].equals("STR"))
0.366 - assertTrue(actuals[1].equals("STR"))
0.366 - assertTrue(actuals[2].equals("STR"))
