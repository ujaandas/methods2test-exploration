=== Generated Prompt ===
Below is the focal class and test class for reference:

package TooTallNate.Java-WebSocket;

public class Charsetfunctions {
    public static byte [ ] asciiBytes ( String s ) { 
    return s . getBytes ( StandardCharsets . US_ASCII ) ; 
    }
}

package TooTallNate.Java-WebSocket;

public class CharsetfunctionsTest {
    @Test
     public void testAsciiBytes ( ) {
         <ASSERTIONS HERE>
    }
}

Please generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).
========================

=== GPT Response ===
assertArrayEquals(new byte[]{97, 98, 99}, Charsetfunctions.asciiBytes("abc"));
assertArrayEquals(new byte[]{49, 50, 51}, Charsetfunctions.asciiBytes("123"));
assertArrayEquals(new byte[]{65, 66, 67}, Charsetfunctions.asciiBytes("ABC"));
assertArrayEquals(new byte[]{32, 33, 34}, Charsetfunctions.asciiBytes(" !\""));
assertArrayEquals(new byte[]{126, 127, -128}, Charsetfunctions.asciiBytes("~\u007F\u0080"));
assertArrayEquals(new byte[]{0}, Charsetfunctions.asciiBytes(""));
assertArrayEquals(new byte[]{}, Charsetfunctions.asciiBytes(null));
assertArrayEquals(new byte[]{97, 98, 99, 100}, Charsetfunctions.asciiBytes("abcd"));
assertArrayEquals(new byte[]{65, 66, 67, 68}, Charsetfunctions.asciiBytes("ABCD"));
assertArrayEquals(new byte[]{32, 33, 34, 35}, Charsetfunctions.asciiBytes(" !\"#"));
assertArrayEquals(new byte[]{126, 127, -128, -127}, Charsetfunctions.asciiBytes("~\u007F\u0080\u0081"));
assertArrayEquals(new byte[]{97, 98, 99, 100, 101}, Charsetfunctions.asciiBytes("abcde"));
assertArrayEquals(new byte[]{65, 66, 67, 68, 69}, Charsetfunctions.asciiBytes("ABCDE"));
assertArrayEquals(new byte[]{32, 33, 34, 35, 36}, Charsetfunctions.asciiBytes(" !\"#$"));
assertArrayEquals(new byte[]{126, 127, -128, -127, -126}, Charsetfunctions.asciiBytes("~\u007F\u0080\u0081\u0082"));
assertArrayEquals(new byte[]{97, 98, 99, 100, 101, 102}, Charsetfunctions.asciiBytes("abcdef"));
assertArrayEquals(new byte[]{65, 66, 67, 68, 69, 70}, Charsetfunctions.asciiBytes("ABCDEF"));
assertArrayEquals(new byte[]{32, 33, 34, 35, 36, 37}, Charsetfunctions.asciiBytes(" !\"#$%"));
assertArrayEquals(new byte[]{126, 127, -128, -127, -126, -125}, Charsetfunctions.asciiBytes("~\u007F\u0080\u008
====================

=== Collecting and Comparing Assertions ===
=== Ground Oracle Truth: Assert.assertArrayEquals(newbyte[]{102,111,111},Charsetfunctions.asciiBytes("STR")); ===
0.906 - assertArrayEquals(new byte[]{0}, Charsetfunctions.asciiBytes(""))
0.872 - assertArrayEquals(new byte[]{49, 50, 51}, Charsetfunctions.asciiBytes("123"))
0.872 - assertArrayEquals(new byte[]{32, 33, 34}, Charsetfunctions.asciiBytes(" !\""))
0.859 - assertArrayEquals(new byte[]{97, 98, 99}, Charsetfunctions.asciiBytes("abc"))
0.859 - assertArrayEquals(new byte[]{65, 66, 67}, Charsetfunctions.asciiBytes("ABC"))
0.857 - assertArrayEquals(new byte[]{}, Charsetfunctions.asciiBytes(null))
0.850 - assertArrayEquals(new byte[]{32, 33, 34, 35}, Charsetfunctions.asciiBytes(" !\"#"))
0.843 - assertArrayEquals(new byte[]{97, 98, 99, 100, 101}, Charsetfunctions.asciiBytes("abcde"))
0.837 - assertArrayEquals(new byte[]{65, 66, 67, 68}, Charsetfunctions.asciiBytes("ABCD"))
0.831 - assertArrayEquals(new byte[]{97, 98, 99, 100}, Charsetfunctions.asciiBytes("abcd"))
0.828 - assertArrayEquals(new byte[]{32, 33, 34, 35, 36}, Charsetfunctions.asciiBytes(" !\"#$"))
0.822 - assertArrayEquals(new byte[]{126, 127, -128}, Charsetfunctions.asciiBytes("~\u007F\u0080"))
0.815 - assertArrayEquals(new byte[]{65, 66, 67, 68, 69}, Charsetfunctions.asciiBytes("ABCDE"))
0.807 - assertArrayEquals(new byte[]{32, 33, 34, 35, 36, 37}, Charsetfunctions.asciiBytes(" !\"#$%"))
0.793 - assertArrayEquals(new byte[]{97, 98, 99, 100, 101, 102}, Charsetfunctions.asciiBytes("abcdef"))
0.783 - assertArrayEquals(new byte[]{65, 66, 67, 68, 69, 70}, Charsetfunctions.asciiBytes("ABCDEF"))
0.782 - assertArrayEquals(new byte[]{126, 127, -128, -127}, Charsetfunctions.asciiBytes("~\u007F\u0080\u0081"))
0.757 - assertArrayEquals(new byte[]{126, 127, -128, -127, -126}, Charsetfunctions.asciiBytes("~\u007F\u0080\u0081\u0082"))
0.756 - assertArrayEquals(new byte[]{126, 127, -128, -127, -126, -125}, Charsetfunctions.asciiBytes("~\u007F\u0080\u008
