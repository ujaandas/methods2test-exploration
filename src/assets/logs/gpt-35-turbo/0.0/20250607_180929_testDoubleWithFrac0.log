=== Generated Prompt ===
Below is the focal class and test class for reference:

package arnohaase.a-foundation.a-foundation;

public class AJsonSerHelper {
    public void writeNumberLiteral ( double value , int numFracDigits ) throws IOException { 
    checkAcceptsValueAndPrefixComma ( ) ; 
    out . write ( new DecimalFormat ( PATTERNS [ numFracDigits ] , DECIMAL_FORMAT_SYMBOLS ) . format ( value ) ) ; 
    afterValueWritten ( ) ; 
    }
}

package arnohaase.a-foundation.a-foundation;

public class AJsonSerHelperTest {
    @Test
     public void testDoubleWithFrac0 ( ) throws IOException {
         final ByteArrayOutputStream baos = new ByteArrayOutputStream ( ) ; 
         final AJsonSerHelper ser = new AJsonSerHelper ( baos ) ; 
         ser . writeNumberLiteral ( 1.23 , 0 ) ; 
         final String result = new String ( baos . toByteArray ( ) , "STR" ) ; 
         <ASSERTIONS HERE>
    }
}

Please generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).
========================

=== GPT Response ===
assertEquals("1", result);
assertFalse(result.contains("."));
assertTrue(result.contains("1"));
assertTrue(result.contains("1.2"));
assertFalse(result.contains("1.23"));
assertFalse(result.contains("1.234"));
assertFalse(result.contains("1.235"));
assertFalse(result.contains("1.236"));
assertFalse(result.contains("1.237"));
assertFalse(result.contains("1.238"));
assertFalse(result.contains("1.239"));
assertFalse(result.contains("1.240"));
assertFalse(result.contains("1.241"));
assertFalse(result.contains("1.242"));
assertFalse(result.contains("1.243"));
assertFalse(result.contains("1.244"));
assertFalse(result.contains("1.245"));
assertFalse(result.contains("1.246"));
assertFalse(result.contains("1.247"));
assertFalse(result.contains("1.248"));
====================

=== Collecting and Comparing Assertions ===
=== Ground Oracle Truth: assertEquals("STR",result); ===
0.920 - assertEquals("1", result)
0.576 - assertFalse(result.contains("."))
0.548 - assertFalse(result.contains("1.23"))
0.540 - assertFalse(result.contains("1.234"))
0.540 - assertFalse(result.contains("1.235"))
0.540 - assertFalse(result.contains("1.236"))
0.540 - assertFalse(result.contains("1.237"))
0.540 - assertFalse(result.contains("1.238"))
0.540 - assertFalse(result.contains("1.239"))
0.540 - assertFalse(result.contains("1.240"))
0.540 - assertFalse(result.contains("1.241"))
0.540 - assertFalse(result.contains("1.242"))
0.540 - assertFalse(result.contains("1.243"))
0.540 - assertFalse(result.contains("1.244"))
0.540 - assertFalse(result.contains("1.245"))
0.540 - assertFalse(result.contains("1.246"))
0.540 - assertFalse(result.contains("1.247"))
0.540 - assertFalse(result.contains("1.248"))
0.517 - assertTrue(result.contains("1"))
0.500 - assertTrue(result.contains("1.2"))
