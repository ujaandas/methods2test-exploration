=== Generated Prompt ===
Below is the focal class and test class for reference:

package redraiment.jactiverecord;

public class Seq {
    public static String join ( Collection < ? > list , String delimiter ) { 
    if ( list == null || list . isEmpty ( ) ) { 
    return "STR" ; 
    } if ( delimiter == null ) { 
    delimiter = "STR" ; 
    } StringBuilder s = new StringBuilder ( ) ; 
    boolean first = true ; 
    for ( Object e : list ) { 
    if ( first ) { 
    first = false ; 
    } else { 
    s . append ( delimiter ) ; 
    } s . append ( e ) ; 
    } return s . toString ( ) ; 
    }
}

package redraiment.jactiverecord;

public class SeqTest {
    @Test
     public void testCommaList ( ) {
         <ASSERTIONS HERE>
    }
}

Please generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).
========================

=== GPT Response ===
assertEquals("", Seq.join(Collections.emptyList(), ","));

assertEquals("1", Seq.join(Collections.singletonList(1), ","));

assertEquals("1,2,3", Seq.join(Arrays.asList(1, 2, 3), ","));

assertEquals("a,b,c", Seq.join(Arrays.asList("a", "b", "c"), ","));

assertEquals("true,false,true", Seq.join(Arrays.asList(true, false, true), ","));

assertEquals("apple,banana,orange", Seq.join(Arrays.asList("apple", "banana", "orange"), ","));

assertEquals("1-2-3", Seq.join(Arrays.asList(1, 2, 3), "-"));

assertEquals("a b c", Seq.join(Arrays.asList("a", "b", "c"), " "));

assertEquals("true false true", Seq.join(Arrays.asList(true, false, true), " "));

assertEquals("apple banana orange", Seq.join(Arrays.asList("apple", "banana", "orange"), " "));

assertEquals("1,2,3,4,5", Seq.join(Arrays.asList(1, 2, 3, 4, 5), ","));

assertEquals("a,b,c,d,e", Seq.join(Arrays.asList("a", "b", "c", "d", "e"), ","));

assertEquals("true,false,true,false,true", Seq.join(Arrays.asList(true, false, true, false, true), ","));

assertEquals("apple,banana,orange,grape", Seq.join(Arrays.asList("apple", "banana", "orange", "grape"), ","));

assertEquals("1-2-3-4-5", Seq.join(Arrays.asList(1, 2, 3, 4, 5), "-"));

assertEquals("a b c d e", Seq.join(Arrays.asList("a", "b", "c", "d", "e"), " "));

assertEquals("true false true false true", Seq.join(Arrays.asList(true, false, true, false, true), " "));

assertEquals("apple banana orange grape", Seq.join(Arrays.asList("apple", "banana", "orange", "grape"), " "));
====================

=== Collecting and Comparing Assertions ===
=== Ground Oracle Truth: Assert.assertEquals("STR",Seq.join(Arrays.asList("STR","STR","STR"),"STR")); ===
0.835 - assertEquals("a b c", Seq.join(Arrays.asList("a", "b", "c"), " "))
0.815 - assertEquals("a,b,c", Seq.join(Arrays.asList("a", "b", "c"), ","))
0.774 - assertEquals("a b c d e", Seq.join(Arrays.asList("a", "b", "c", "d", "e"), " "))
0.758 - assertEquals("1-2-3", Seq.join(Arrays.asList(1, 2, 3), "-"))
0.746 - assertEquals("a,b,c,d,e", Seq.join(Arrays.asList("a", "b", "c", "d", "e"), ","))
0.712 - assertEquals("1-2-3-4-5", Seq.join(Arrays.asList(1, 2, 3, 4, 5), "-"))
0.710 - assertEquals("1,2,3", Seq.join(Arrays.asList(1, 2, 3), ","))
0.684 - assertEquals("apple banana orange", Seq.join(Arrays.asList("apple", "banana", "orange"), " "))
0.671 - assertEquals("apple,banana,orange", Seq.join(Arrays.asList("apple", "banana", "orange"), ","))
0.667 - assertEquals("true false true", Seq.join(Arrays.asList(true, false, true), " "))
0.667 - assertEquals("1,2,3,4,5", Seq.join(Arrays.asList(1, 2, 3, 4, 5), ","))
0.631 - assertEquals("apple banana orange grape", Seq.join(Arrays.asList("apple", "banana", "orange", "grape"), " "))
0.616 - assertEquals("apple,banana,orange,grape", Seq.join(Arrays.asList("apple", "banana", "orange", "grape"), ","))
0.611 - assertEquals("true,false,true", Seq.join(Arrays.asList(true, false, true), ","))
0.607 - assertEquals("", Seq.join(Collections.emptyList(), ","))
0.594 - assertEquals("1", Seq.join(Collections.singletonList(1), ","))
0.584 - assertEquals("true false true false true", Seq.join(Arrays.asList(true, false, true, false, true), " "))
0.530 - assertEquals("true,false,true,false,true", Seq.join(Arrays.asList(true, false, true, false, true), ","))
