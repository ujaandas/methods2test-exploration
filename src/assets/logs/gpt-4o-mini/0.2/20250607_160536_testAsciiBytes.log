=== Generated Prompt ===
Below is the focal class and test class for reference:

package TooTallNate.Java-WebSocket;

public class Charsetfunctions {
    public static byte [ ] asciiBytes ( String s ) { 
    return s . getBytes ( StandardCharsets . US_ASCII ) ; 
    }
}

package TooTallNate.Java-WebSocket;

public class CharsetfunctionsTest {
    @Test
     public void testAsciiBytes ( ) {
         <ASSERTIONS HERE>
    }
}

Please generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).
========================

=== GPT Response ===
```java
assertArrayEquals(new byte[]{72, 101, 108, 108, 111}, Charsetfunctions.asciiBytes("Hello"));
assertArrayEquals(new byte[]{87, 111, 114, 108, 100}, Charsetfunctions.asciiBytes("World"));
assertArrayEquals(new byte[]{72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100}, Charsetfunctions.asciiBytes("Hello World"));
assertArrayEquals(new byte[]{65, 66, 67}, Charsetfunctions.asciiBytes("ABC"));
assertArrayEquals(new byte[]{97, 98, 99}, Charsetfunctions.asciiBytes("abc"));
assertArrayEquals(new byte[]{49, 50, 51}, Charsetfunctions.asciiBytes("123"));
assertArrayEquals(new byte[]{33}, Charsetfunctions.asciiBytes("!"));
assertArrayEquals(new byte[]{64}, Charsetfunctions.asciiBytes("@"));
assertArrayEquals(new byte[]{36}, Charsetfunctions.asciiBytes("$"));
assertArrayEquals(new byte[]{38}, Charsetfunctions.asciiBytes("&"));
assertArrayEquals(new byte[]{32}, Charsetfunctions.asciiBytes(" "));
assertArrayEquals(new byte[]{}, Charsetfunctions.asciiBytes(""));
assertArrayEquals(new byte[]{72, 101, 108, 108, 111, 44, 32, 87, 111, 114, 108, 100, 33}, Charsetfunctions.asciiBytes("Hello, World!"));
assertArrayEquals(new byte[]{84, 101, 115, 116}, Charsetfunctions.asciiBytes("Test"));
assertArrayEquals(new byte[]{70, 111, 111}, Charsetfunctions.asciiBytes("Foo"));
assertArrayEquals(new byte[]{66, 97, 114}, Charsetfunctions.asciiBytes("Bar"));
assertArrayEquals(new byte[]{67, 111, 100, 101}, Charsetfunctions.asciiBytes("Code"));
assertArrayEquals(new byte[]{83, 101, 114, 118, 101}, Charsetfunctions.asciiBytes("Serve"));
assertArrayEquals(new byte[]{80, 121, 116, 104, 111, 110}, Charsetfunctions.asciiBytes("Python"));
assertArrayEquals(new byte[]{74, 97, 118, 97}, Charsetfunctions.asciiBytes("Java"));
```
====================

=== Collecting and Comparing Assertions ===
=== Ground Oracle Truth: Assert.assertArrayEquals(newbyte[]{102,111,111},Charsetfunctions.asciiBytes("STR")); ===
0.940 - assertArrayEquals(new byte[]{70, 111, 111}, Charsetfunctions.asciiBytes("Foo"))
0.900 - assertArrayEquals(new byte[]{32}, Charsetfunctions.asciiBytes(" "))
0.899 - assertArrayEquals(new byte[]{}, Charsetfunctions.asciiBytes(""))
0.897 - assertArrayEquals(new byte[]{84, 101, 115, 116}, Charsetfunctions.asciiBytes("Test"))
0.897 - assertArrayEquals(new byte[]{67, 111, 100, 101}, Charsetfunctions.asciiBytes("Code"))
0.879 - assertArrayEquals(new byte[]{33}, Charsetfunctions.asciiBytes("!"))
0.879 - assertArrayEquals(new byte[]{64}, Charsetfunctions.asciiBytes("@"))
0.879 - assertArrayEquals(new byte[]{36}, Charsetfunctions.asciiBytes("$"))
0.879 - assertArrayEquals(new byte[]{38}, Charsetfunctions.asciiBytes("&"))
0.872 - assertArrayEquals(new byte[]{49, 50, 51}, Charsetfunctions.asciiBytes("123"))
0.870 - assertArrayEquals(new byte[]{87, 111, 114, 108, 100}, Charsetfunctions.asciiBytes("World"))
0.870 - assertArrayEquals(new byte[]{83, 101, 114, 118, 101}, Charsetfunctions.asciiBytes("Serve"))
0.867 - assertArrayEquals(new byte[]{66, 97, 114}, Charsetfunctions.asciiBytes("Bar"))
0.859 - assertArrayEquals(new byte[]{65, 66, 67}, Charsetfunctions.asciiBytes("ABC"))
0.859 - assertArrayEquals(new byte[]{97, 98, 99}, Charsetfunctions.asciiBytes("abc"))
0.857 - assertArrayEquals(new byte[]{74, 97, 118, 97}, Charsetfunctions.asciiBytes("Java"))
0.855 - assertArrayEquals(new byte[]{80, 121, 116, 104, 111, 110}, Charsetfunctions.asciiBytes("Python"))
0.840 - ```java
assertArrayEquals(new byte[]{72, 101, 108, 108, 111}, Charsetfunctions.asciiBytes("Hello"))
0.777 - assertArrayEquals(new byte[]{72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100}, Charsetfunctions.asciiBytes("Hello World"))
0.745 - assertArrayEquals(new byte[]{72, 101, 108, 108, 111, 44, 32, 87, 111, 114, 108, 100, 33}, Charsetfunctions.asciiBytes("Hello, World!"))
0.000 - ```
