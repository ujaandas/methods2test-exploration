=== Generated Prompt ===
Below is the focal class and test class for reference:

package javadev.moneytostr-russian;

public class MoneyToStr {
    public String convert ( Double theMoney ) { 
    if ( theMoney == null ) { 
    throw new IllegalArgumentException ( "STR" ) ; 
    } Long intPart = theMoney . longValue ( ) ; 
    Long fractPart = Math . round ( ( theMoney - intPart ) * NUM100 ) ; 
    if ( currency == Currency . PER1000 ) { 
    fractPart = Math . round ( ( theMoney - intPart ) * NUM1000 ) ; 
    } return convert ( intPart , fractPart ) ; 
    }
}

package javadev.moneytostr-russian;

public class MoneyToStrTest {
    @Test
     public void checkPER1000 ( ) {
         <ASSERTIONS HERE>
    }
}

Please generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).
========================

=== GPT Response ===
```java
assertEquals("одна тысяча", new MoneyToStr().convert(1000.0));
assertEquals("одна тысяча ноль", new MoneyToStr().convert(1000.0));
assertEquals("одна тысяча ноль целых", new MoneyToStr().convert(1000.0));
assertEquals("одна тысяча ноль целых ноль сотых", new MoneyToStr().convert(1000.0));
assertEquals("одна тысяча ноль целых ноль тысячных", new MoneyToStr().convert(1000.0));
assertEquals("одна тысяча ноль целых ноль", new MoneyToStr().convert(1000.0));
assertEquals("одна тысяча ноль целых ноль", new MoneyToStr().convert(1000.0));
assertEquals("одна тысяча ноль целых ноль", new MoneyToStr().convert(1000.0));
assertEquals("одна тысяча ноль целых ноль", new MoneyToStr().convert(1000.0));
assertEquals("одна тысяча ноль целых ноль", new MoneyToStr().convert(1000.0));
assertEquals("одна тысяча ноль целых ноль", new MoneyToStr().convert(1000.0));
assertEquals("одна тысяча ноль целых ноль", new MoneyToStr().convert(1000.0));
assertEquals("одна тысяча ноль целых ноль", new MoneyToStr().convert(1000.0));
assertEquals("одна тысяча ноль целых ноль", new MoneyToStr().convert(1000.0));
assertEquals("одна тысяча ноль целых ноль", new MoneyToStr().convert(1000.0));
assertEquals("одна тысяча ноль целых ноль", new MoneyToStr().convert(1000.0));
assertEquals("одна тысяча ноль целых ноль", new MoneyToStr().convert(1000.0));
assertEquals("одна тысяча ноль целых ноль", new MoneyToStr().convert(1000.0));
assertEquals("одна тысяча ноль целых ноль", new MoneyToStr().convert(1000.0));
```
====================

=== Collecting and Comparing Assertions ===
=== Ground Oracle Truth: assertEquals("STR",moneyToStrPER1000.convert(12.346)); ===
0.661 - assertEquals("одна тысяча ноль", new MoneyToStr().convert(1000.0))
0.639 - ```java
assertEquals("одна тысяча", new MoneyToStr().convert(1000.0))
0.633 - assertEquals("одна тысяча ноль целых", new MoneyToStr().convert(1000.0))
0.613 - assertEquals("одна тысяча ноль целых ноль", new MoneyToStr().convert(1000.0))
0.613 - assertEquals("одна тысяча ноль целых ноль", new MoneyToStr().convert(1000.0))
0.613 - assertEquals("одна тысяча ноль целых ноль", new MoneyToStr().convert(1000.0))
0.613 - assertEquals("одна тысяча ноль целых ноль", new MoneyToStr().convert(1000.0))
0.613 - assertEquals("одна тысяча ноль целых ноль", new MoneyToStr().convert(1000.0))
0.613 - assertEquals("одна тысяча ноль целых ноль", new MoneyToStr().convert(1000.0))
0.613 - assertEquals("одна тысяча ноль целых ноль", new MoneyToStr().convert(1000.0))
0.613 - assertEquals("одна тысяча ноль целых ноль", new MoneyToStr().convert(1000.0))
0.613 - assertEquals("одна тысяча ноль целых ноль", new MoneyToStr().convert(1000.0))
0.613 - assertEquals("одна тысяча ноль целых ноль", new MoneyToStr().convert(1000.0))
0.613 - assertEquals("одна тысяча ноль целых ноль", new MoneyToStr().convert(1000.0))
0.613 - assertEquals("одна тысяча ноль целых ноль", new MoneyToStr().convert(1000.0))
0.613 - assertEquals("одна тысяча ноль целых ноль", new MoneyToStr().convert(1000.0))
0.613 - assertEquals("одна тысяча ноль целых ноль", new MoneyToStr().convert(1000.0))
0.589 - assertEquals("одна тысяча ноль целых ноль сотых", new MoneyToStr().convert(1000.0))
0.576 - assertEquals("одна тысяча ноль целых ноль тысячных", new MoneyToStr().convert(1000.0))
0.000 - ```
