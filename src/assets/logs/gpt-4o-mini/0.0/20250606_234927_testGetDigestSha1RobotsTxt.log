=== Generated Prompt ===
Below is the focal class and test class for reference:

package DigitalPebble.storm-crawler.external/warc;

public class WARCRecordFormat {
    public static String getDigestSha1 ( byte [ ] bytes ) { 
    return "STR" + base32 . encodeAsString ( DigestUtils . sha1 ( bytes ) ) ; 
    }
}

package DigitalPebble.storm-crawler.external/warc;

public class WARCRecordFormatTest {
    @Test
     public void testGetDigestSha1RobotsTxt ( ) {
         String robotsTxt = "STR" ; 
         byte [ ] content = robotsTxt . getBytes ( StandardCharsets . UTF_8 ) ; 
         String sha1str = "STR" ; 
         <ASSERTIONS HERE>
    }
}

Please generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).
========================

=== GPT Response ===
```java
String expectedDigest = WARCRecordFormat.getDigestSha1(content);
assertNotNull(expectedDigest);
assertEquals("STR" + base32.encodeAsString(DigestUtils.sha1(content)), expectedDigest);
assertTrue(expectedDigest.startsWith("STR"));
assertEquals(32, expectedDigest.length());
assertTrue(expectedDigest.matches("^[A-Z2-7]+=*$"));
assertFalse(expectedDigest.isEmpty());
assertNotEquals("INVALID_DIGEST", expectedDigest);
assertEquals(expectedDigest, WARCRecordFormat.getDigestSha1(content));
assertNotEquals(WARCRecordFormat.getDigestSha1("DIFFERENT_CONTENT".getBytes(StandardCharsets.UTF_8)), expectedDigest);
assertTrue(expectedDigest.contains("A"));
assertTrue(expectedDigest.contains("B"));
assertTrue(expectedDigest.contains("C"));
assertTrue(expectedDigest.contains("D"));
assertTrue(expectedDigest.contains("E"));
assertTrue(expectedDigest.contains("F"));
assertTrue(expectedDigest.contains("G"));
assertTrue(expectedDigest.contains("H"));
assertTrue(expectedDigest.contains("I"));
assertTrue(expectedDigest.contains("J"));
assertTrue(expectedDigest.contains("K"));
assertTrue(expectedDigest.contains("L"));
assertTrue(expectedDigest.contains("M"));
assertTrue(expectedDigest.contains("N"));
assertTrue(expectedDigest.contains("O"));
assertTrue(expectedDigest.contains("P"));
assertTrue(expectedDigest.contains("Q"));
assertTrue(expectedDigest.contains("R"));
assertTrue(expectedDigest.contains("S"));
```
====================

=== Collecting and Comparing Assertions ===
=== Ground Oracle Truth: assertEquals("STR",sha1str,WARCRecordFormat.getDigestSha1(content)); ===
0.830 - assertEquals(expectedDigest, WARCRecordFormat.getDigestSha1(content))
0.652 - ```java
String expectedDigest = WARCRecordFormat.getDigestSha1(content)
0.560 - assertEquals("STR" + base32.encodeAsString(DigestUtils.sha1(content)), expectedDigest)
0.536 - assertNotEquals(WARCRecordFormat.getDigestSha1("DIFFERENT_CONTENT".getBytes(StandardCharsets.UTF_8)), expectedDigest)
0.523 - assertEquals(32, expectedDigest.length())
0.487 - assertNotEquals("INVALID_DIGEST", expectedDigest)
0.449 - assertTrue(expectedDigest.contains("A"))
0.449 - assertTrue(expectedDigest.contains("B"))
0.449 - assertTrue(expectedDigest.contains("C"))
0.449 - assertTrue(expectedDigest.contains("D"))
0.449 - assertTrue(expectedDigest.contains("E"))
0.449 - assertTrue(expectedDigest.contains("F"))
0.449 - assertTrue(expectedDigest.contains("G"))
0.449 - assertTrue(expectedDigest.contains("H"))
0.449 - assertTrue(expectedDigest.contains("I"))
0.449 - assertTrue(expectedDigest.contains("J"))
0.449 - assertTrue(expectedDigest.contains("K"))
0.449 - assertTrue(expectedDigest.contains("L"))
0.449 - assertTrue(expectedDigest.contains("M"))
0.449 - assertTrue(expectedDigest.contains("N"))
0.449 - assertTrue(expectedDigest.contains("O"))
0.449 - assertTrue(expectedDigest.contains("P"))
0.449 - assertTrue(expectedDigest.contains("Q"))
0.449 - assertTrue(expectedDigest.contains("R"))
0.449 - assertTrue(expectedDigest.contains("S"))
0.423 - assertFalse(expectedDigest.isEmpty())
0.396 - assertNotNull(expectedDigest)
0.356 - assertTrue(expectedDigest.matches("^[A-Z2-7]+=*$"))
0.306 - assertTrue(expectedDigest.startsWith("STR"))
0.000 - ```
