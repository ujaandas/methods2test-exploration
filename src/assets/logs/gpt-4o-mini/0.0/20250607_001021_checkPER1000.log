=== Generated Prompt ===
Below is the focal class and test class for reference:

package javadev.moneytostr-russian;

public class MoneyToStr {
    public String convert ( Double theMoney ) { 
    if ( theMoney == null ) { 
    throw new IllegalArgumentException ( "STR" ) ; 
    } Long intPart = theMoney . longValue ( ) ; 
    Long fractPart = Math . round ( ( theMoney - intPart ) * NUM100 ) ; 
    if ( currency == Currency . PER1000 ) { 
    fractPart = Math . round ( ( theMoney - intPart ) * NUM1000 ) ; 
    } return convert ( intPart , fractPart ) ; 
    }
}

package javadev.moneytostr-russian;

public class MoneyToStrTest {
    @Test
     public void checkPER1000 ( ) {
         <ASSERTIONS HERE>
    }
}

Please generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).
========================

=== GPT Response ===
```java
assertEquals("одна тысяча", new MoneyToStr().convert(1000.0));
assertEquals("одна тысяча ноль", new MoneyToStr().convert(1000.0));
assertEquals("одна тысяча один", new MoneyToStr().convert(1001.0));
assertEquals("одна тысяча два", new MoneyToStr().convert(1002.0));
assertEquals("одна тысяча три", new MoneyToStr().convert(1003.0));
assertEquals("одна тысяча четыре", new MoneyToStr().convert(1004.0));
assertEquals("одна тысяча пять", new MoneyToStr().convert(1005.0));
assertEquals("одна тысяча шесть", new MoneyToStr().convert(1006.0));
assertEquals("одна тысяча семь", new MoneyToStr().convert(1007.0));
assertEquals("одна тысяча восемь", new MoneyToStr().convert(1008.0));
assertEquals("одна тысяча девять", new MoneyToStr().convert(1009.0));
assertEquals("одна тысяча десять", new MoneyToStr().convert(1010.0));
assertEquals("одна тысяча двадцать", new MoneyToStr().convert(1020.0));
assertEquals("одна тысяча тридцать", new MoneyToStr().convert(1030.0));
assertEquals("одна тысяча сорок", new MoneyToStr().convert(1040.0));
assertEquals("одна тысяча пятьдесят", new MoneyToStr().convert(1050.0));
assertEquals("одна тысяча шестьдесят", new MoneyToStr().convert(1060.0));
assertEquals("одна тысяча семьдесят", new MoneyToStr().convert(1070.0));
assertEquals("одна тысяча восемьдесят", new MoneyToStr().convert(1080.0));
assertEquals("одна тысяча девяносто", new MoneyToStr().convert(1090.0));
```
====================

=== Collecting and Comparing Assertions ===
=== Ground Oracle Truth: assertEquals("STR",moneyToStrPER1000.convert(12.346)); ===
0.684 - assertEquals("одна тысяча два", new MoneyToStr().convert(1002.0))
0.667 - assertEquals("одна тысяча три", new MoneyToStr().convert(1003.0))
0.661 - assertEquals("одна тысяча ноль", new MoneyToStr().convert(1000.0))
0.661 - assertEquals("одна тысяча один", new MoneyToStr().convert(1001.0))
0.661 - assertEquals("одна тысяча пять", new MoneyToStr().convert(1005.0))
0.661 - assertEquals("одна тысяча семь", new MoneyToStr().convert(1007.0))
0.655 - assertEquals("одна тысяча двадцать", new MoneyToStr().convert(1020.0))
0.655 - assertEquals("одна тысяча шесть", new MoneyToStr().convert(1006.0))
0.655 - assertEquals("одна тысяча сорок", new MoneyToStr().convert(1040.0))
0.650 - assertEquals("одна тысяча четыре", new MoneyToStr().convert(1004.0))
0.650 - assertEquals("одна тысяча восемь", new MoneyToStr().convert(1008.0))
0.650 - assertEquals("одна тысяча девять", new MoneyToStr().convert(1009.0))
0.650 - assertEquals("одна тысяча десять", new MoneyToStr().convert(1010.0))
0.639 - ```java
assertEquals("одна тысяча", new MoneyToStr().convert(1000.0))
0.639 - assertEquals("одна тысяча тридцать", new MoneyToStr().convert(1030.0))
0.633 - assertEquals("одна тысяча пятьдесят", new MoneyToStr().convert(1050.0))
0.633 - assertEquals("одна тысяча семьдесят", new MoneyToStr().convert(1070.0))
0.633 - assertEquals("одна тысяча девяносто", new MoneyToStr().convert(1090.0))
0.628 - assertEquals("одна тысяча шестьдесят", new MoneyToStr().convert(1060.0))
0.623 - assertEquals("одна тысяча восемьдесят", new MoneyToStr().convert(1080.0))
0.000 - ```
