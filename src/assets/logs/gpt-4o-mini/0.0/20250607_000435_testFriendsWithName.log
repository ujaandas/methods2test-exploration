=== Generated Prompt ===
Below is the focal class and test class for reference:

package orientechnologies.orientdb.graphdb;

public class OMatchStatementExecution {
    < RET > RET execute ( Object ... iArgs ) ;
}

package orientechnologies.orientdb.graphdb;

public class OMatchStatementExecutionTest {
    @Test
     public void testFriendsWithName ( ) throws Exception {
         List < ODocument > qResult = db . command ( new OCommandSQL ( "STR" ) ) . execute ( ) ; 
         <ASSERTIONS HERE>
    }
}

Please generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).
========================

=== GPT Response ===
```java
assertNotNull(qResult);
assertFalse(qResult.isEmpty());
assertEquals(expectedSize, qResult.size());
assertTrue(qResult.stream().allMatch(doc -> doc.field("name") != null));
assertTrue(qResult.stream().allMatch(doc -> doc.field("relationship").equals("friend")));
assertTrue(qResult.stream().anyMatch(doc -> doc.field("name").equals("Alice")));
assertTrue(qResult.stream().anyMatch(doc -> doc.field("name").equals("Bob")));
assertTrue(qResult.stream().anyMatch(doc -> doc.field("age") > 18));
assertTrue(qResult.stream().allMatch(doc -> doc.field("status").equals("active")));
assertTrue(qResult.stream().anyMatch(doc -> doc.field("location").equals("New York")));
assertEquals("Alice", qResult.get(0).field("name"));
assertEquals("Bob", qResult.get(1).field("name"));
assertNotEquals(qResult.get(0).field("id"), qResult.get(1).field("id"));
assertTrue(qResult.stream().noneMatch(doc -> doc.field("status").equals("inactive")));
assertTrue(qResult.stream().allMatch(doc -> doc.field("relationship").equals("friend") || doc.field("relationship").equals("best friend")));
assertEquals("friend", qResult.get(0).field("relationship"));
assertTrue(qResult.stream().allMatch(doc -> doc.field("age") >= 18 && doc.field("age") <= 65));
assertTrue(qResult.stream().anyMatch(doc -> doc.field("hobby").equals("reading")));
assertTrue(qResult.stream().anyMatch(doc -> doc.field("hobby").equals("sports")));
assertTrue(qResult.stream().allMatch(doc -> doc.field("name").length() > 0));
assertTrue(qResult.stream().allMatch(doc -> doc.field("name").matches("[A-Za-z ]+")));
```
====================

=== Collecting and Comparing Assertions ===
=== Ground Oracle Truth: assertEquals(1,qResult.size()); ===
0.817 - assertEquals(expectedSize, qResult.size())
0.733 - assertFalse(qResult.isEmpty())
0.692 - assertEquals("Bob", qResult.get(1).field("name"))
0.675 - assertEquals("Alice", qResult.get(0).field("name"))
0.584 - assertEquals("friend", qResult.get(0).field("relationship"))
0.567 - ```java
assertNotNull(qResult)
0.540 - assertNotEquals(qResult.get(0).field("id"), qResult.get(1).field("id"))
0.452 - assertTrue(qResult.stream().anyMatch(doc -> doc.field("age") > 18))
0.433 - assertTrue(qResult.stream().allMatch(doc -> doc.field("name") != null))
0.412 - assertTrue(qResult.stream().allMatch(doc -> doc.field("name").length() > 0))
0.400 - assertTrue(qResult.stream().anyMatch(doc -> doc.field("name").equals("Bob")))
0.393 - assertTrue(qResult.stream().anyMatch(doc -> doc.field("name").equals("Alice")))
0.385 - assertTrue(qResult.stream().anyMatch(doc -> doc.field("hobby").equals("sports")))
0.382 - assertTrue(qResult.stream().allMatch(doc -> doc.field("status").equals("active")))
0.382 - assertTrue(qResult.stream().anyMatch(doc -> doc.field("hobby").equals("reading")))
0.375 - assertTrue(qResult.stream().allMatch(doc -> doc.field("name").matches("[A-Za-z ]+")))
0.372 - assertTrue(qResult.stream().anyMatch(doc -> doc.field("location").equals("New York")))
0.372 - assertTrue(qResult.stream().noneMatch(doc -> doc.field("status").equals("inactive")))
0.362 - assertTrue(qResult.stream().allMatch(doc -> doc.field("relationship").equals("friend")))
0.362 - assertTrue(qResult.stream().allMatch(doc -> doc.field("age") >= 18 && doc.field("age") <= 65))
0.256 - assertTrue(qResult.stream().allMatch(doc -> doc.field("relationship").equals("friend") || doc.field("relationship").equals("best friend")))
0.000 - ```
