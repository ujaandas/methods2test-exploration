{
    "prompt": "Below is the focal class and test class for reference:\n\npackage ExpediaGroup.beeju;\n\npublic class BeejuCore {\npublic Path warehouseDir ( ) {\nreturn warehouseDir ;\n}\n}\n\npackage ExpediaGroup.beeju;\n\npublic class BeejuCoreTest {\n@Test\npublic void deleteDirectory ( ) throws IOException {\nBeejuCore testCore = new BeejuCore ( ) ;\ntestCore . cleanUp ( ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nimport static org.junit.Assert.*;\nimport java.nio.file.Files;\nimport java.nio.file.Path;\n\nPath warehousePath = testCore.warehouseDir();\n\nassertTrue(Files.notExists(warehousePath));\nassertTrue(Files.isDirectory(warehousePath));\nassertEquals(0, Files.list(warehousePath).count());\nassertTrue(Files.isReadable(warehousePath));\nassertTrue(Files.isWritable(warehousePath));\nassertTrue(Files.isExecutable(warehousePath));\nassertFalse(Files.exists(warehousePath.resolve(\"someFile.txt\")));\nassertTrue(Files.exists(warehousePath.resolve(\"subDirectory\")));\nassertEquals(0, Files.list(warehousePath.resolve(\"subDirectory\")).count());\nassertTrue(Files.isDirectory(warehousePath.resolve(\"subDirectory\")));\nassertTrue(Files.isEmpty(warehousePath.resolve(\"subDirectory\")));\nassertFalse(Files.exists(warehousePath.resolve(\"nonExistentFile.txt\")));\nassertTrue(Files.getLastModifiedTime(warehousePath).toMillis() < System.currentTimeMillis());\nassertTrue(Files.size(warehousePath) >= 0);\nassertTrue(Files.getOwner(warehousePath).getName().equals(\"expectedOwner\"));\nassertTrue(Files.isHidden(warehousePath.resolve(\"hiddenFile.txt\")));\nassertFalse(Files.isHidden(warehousePath));\nassertTrue(Files.isSymbolicLink(warehousePath.resolve(\"linkToFile.txt\")));\nassertTrue(Files.isRegularFile(warehousePath.resolve(\"regularFile.txt\")));\nassertTrue(Files.isSameFile(warehousePath.resolve(\"file1.txt\"), warehousePath.resolve(\"file2.txt\")));\nassertTrue(Files.readAttributes(warehousePath, \"*\").size() > 0);\n```\n====================\n\n",
    "scores": [
        0.696,
        0.674,
        0.667,
        0.646,
        0.638,
        0.637,
        0.628,
        0.624,
        0.611,
        0.602,
        0.6,
        0.593,
        0.582,
        0.579,
        0.576,
        0.569,
        0.513,
        0.488,
        0.488,
        0.48,
        0.457,
        0.43,
        0.272,
        0.267,
        0.243,
        0.0
    ],
    "ground_truth": "assertFalse(Files.exists(testCore.warehouseDir()));"
}