{
    "prompt": "Below is the focal class and test class for reference:\n\npackage trautonen.coveralls-maven-plugin;\n\npublic class UrlUtils {\npublic static URL create ( final String url ) {\ntry {\nreturn new URL ( url ) ;\n} catch ( MalformedURLException ex ) {\nthrow new IllegalArgumentException ( ex ) ;\n} }\n}\n\npackage trautonen.coveralls-maven-plugin;\n\npublic class UrlUtilsTest {\n@Test\npublic void testCreateValidUrl ( ) throws Exception {\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nURL url1 = UrlUtils.create(\"http://example.com\");\nassertEquals(\"http://example.com\", url1.toString());\n\nURL url2 = UrlUtils.create(\"https://example.com\");\nassertEquals(\"https://example.com\", url2.toString());\n\nURL url3 = UrlUtils.create(\"ftp://example.com\");\nassertEquals(\"ftp://example.com\", url3.toString());\n\nURL url4 = UrlUtils.create(\"http://www.example.com\");\nassertEquals(\"http://www.example.com\", url4.toString());\n\nURL url5 = UrlUtils.create(\"https://www.example.com\");\nassertEquals(\"https://www.example.com\", url5.toString());\n\nURL url6 = UrlUtils.create(\"http://example.com/path\");\nassertEquals(\"http://example.com/path\", url6.toString());\n\nURL url7 = UrlUtils.create(\"http://example.com/path?query=1\");\nassertEquals(\"http://example.com/path?query=1\", url7.toString());\n\nURL url8 = UrlUtils.create(\"http://example.com/path#fragment\");\nassertEquals(\"http://example.com/path#fragment\", url8.toString());\n\nURL url9 = UrlUtils.create(\"http://example.com:8080\");\nassertEquals(\"http://example.com:8080\", url9.toString());\n\nURL url10 = UrlUtils.create(\"http://example.com:8080/path\");\nassertEquals(\"http://example.com:8080/path\", url10.toString());\n\nURL url11 = UrlUtils.create(\"http://user:pass@example.com\");\nassertEquals(\"http://user:pass@example.com/\", url11.toString());\n\nURL url12 = UrlUtils.create(\"http://example.com/path/to/resource\");\nassertEquals(\"http://example.com/path/to/resource\", url12.toString());\n\nURL url13 = UrlUtils.create(\"http://example.com/?key=value\");\nassertEquals(\"http://example.com/?key=value\", url13.toString());\n\nURL url14 = UrlUtils.create(\"http://example.com/#top\");\nassertEquals(\"http://example.com/#top\", url14.toString());\n\nURL url15 = UrlUtils.create(\"http://example.com:80\");\nassertEquals(\"http://example.com:80\", url15.toString());\n\nURL url16 = UrlUtils.create(\"http://example.com/path/to/resource?query=1&other=2\");\nassertEquals(\"http://example.com/path/to/resource?query=1&other=2\", url16\n====================\n\n",
    "scores": [
        0.522,
        0.517,
        0.513,
        0.5,
        0.5,
        0.496,
        0.496,
        0.496,
        0.492,
        0.472,
        0.469,
        0.469,
        0.465,
        0.462,
        0.448,
        0.382,
        0.375,
        0.37,
        0.365,
        0.365,
        0.362,
        0.362,
        0.362,
        0.359,
        0.344,
        0.344,
        0.341,
        0.339,
        0.336,
        0.326,
        0.29,
        0.261
    ],
    "ground_truth": "assertEquals(\"STR\",UrlUtils.create(\"STR\").toURI().toASCIIString());"
}