{
    "prompt": "Below is the focal class and test class for reference:\n\npackage NanoHttpd.nanohttpd.nanolets;\n\npublic class Nanolets {\n@Override\npublic String toString ( ) {\nreturn new StringBuilder ( \"STR\" ) . append ( ( uri == null ? \"STR\" : uri ) ) . append ( \"STR\" ) . append ( uriParams ) . append ( '}' ) . toString ( ) ;\n}\n}\n\npackage NanoHttpd.nanohttpd.nanolets;\n\npublic class TestNanolets {\n@Test\npublic void uriToString ( ) throws Exception {\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nNanolets nanolet1 = new Nanolets();\nnanolet1.uri = null;\nnanolet1.uriParams = \"param1=value1\";\nassertEquals(\"STRnullSTRparam1=value1\", nanolet1.toString());\n\nNanolets nanolet2 = new Nanolets();\nnanolet2.uri = \"testUri\";\nnanolet2.uriParams = \"param2=value2\";\nassertEquals(\"STRtestUriSTRparam2=value2\", nanolet2.toString());\n\nNanolets nanolet3 = new Nanolets();\nnanolet3.uri = \"anotherUri\";\nnanolet3.uriParams = \"\";\nassertEquals(\"STRanotherUriSTR\", nanolet3.toString());\n\nNanolets nanolet4 = new Nanolets();\nnanolet4.uri = null;\nnanolet4.uriParams = null;\nassertEquals(\"STRnullSTRnull\", nanolet4.toString());\n\nNanolets nanolet5 = new Nanolets();\nnanolet5.uri = \"uriWithSpecialChars!@#\";\nnanolet5.uriParams = \"param3=value3\";\nassertEquals(\"STRuriWithSpecialChars!@#STRparam3=value3\", nanolet5.toString());\n\nNanolets nanolet6 = new Nanolets();\nnanolet6.uri = \"uriWithSpaces \";\nnanolet6.uriParams = \"param4=value4\";\nassertEquals(\"STRuriWithSpaces STRparam4=value4\", nanolet6.toString());\n\nNanolets nanolet7 = new Nanolets();\nnanolet7.uri = \"uriWithNewline\\n\";\nnanolet7.uriParams = \"param5=value5\";\nassertEquals(\"STRuriWithNewline\\nSTRparam5=value5\", nanolet7.toString());\n\nNanolets nanolet8 = new Nanolets();\nnanolet8.uri = \"uriWithTab\\t\";\nnanolet8.uriParams = \"param6=value6\";\nassertEquals(\"STRuriWithTab\\tSTRparam6=value6\", nanolet8.toString());\n\nNanolets nanolet9 = new Nanolets();\nnanolet9.uri = \"emptyParamsUri\";\nnanolet9.uriParams = \"\";\nassertEquals(\"STRemptyParamsUriSTR\", nanolet9.toString());\n\nNanolets nanolet10 = new Nanolets();\nnanolet10.uri = \"uriWithLongParams\";\nnanolet10.uriParams = \"param7=value7&param8=value8\";\nassertEquals(\"STRuriWithLongParamsSTRparam7=value7&param8=value8\", nanolet10.toString());\n\n\n====================\n\n",
    "scores": [
        0.682,
        0.647,
        0.567,
        0.529,
        0.518,
        0.5,
        0.497,
        0.486,
        0.468,
        0.427,
        0.262,
        0.262,
        0.262,
        0.262,
        0.262,
        0.262,
        0.262,
        0.262,
        0.259,
        0.243,
        0.218,
        0.2,
        0.191,
        0.191,
        0.184,
        0.184,
        0.173,
        0.171,
        0.159,
        0.148,
        0.141,
        0.14,
        0.137,
        0.113,
        0.108,
        0.108,
        0.108,
        0.108,
        0.108,
        0.108
    ],
    "ground_truth": "Assert.assertEquals(\"STR\",newUriResource(\"STR\",100,GeneralHandler.class).toString());"
}