{
    "prompt": "Below is the focal class and test class for reference:\n\npackage trautonen.coveralls-maven-plugin;\n\npublic class Wildcards {\npublic static boolean matches ( final String text , final String wildcard ) {\nString pattern = wildcard . replace ( \"STR\" , \"STR\" ) . replace ( \"STR\" , \"STR\" ) ;\nreturn ( text != null && text . matches ( pattern ) ) ;\n}\n}\n\npackage trautonen.coveralls-maven-plugin;\n\npublic class WildcardsTest {\n@Test\npublic void testMatchesAgainstWildcards ( ) throws Exception {\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nassertTrue(Wildcards.matches(\"testString\", \"test*\"));\nassertTrue(Wildcards.matches(\"testString\", \"testS*\"));\nassertTrue(Wildcards.matches(\"testString\", \"testStr*\"));\nassertTrue(Wildcards.matches(\"testString\", \"testStri*\"));\nassertTrue(Wildcards.matches(\"testString\", \"testStrin*\"));\nassertTrue(Wildcards.matches(\"testString\", \"testString\"));\nassertFalse(Wildcards.matches(\"testString\", \"testX*\"));\nassertFalse(Wildcards.matches(\"testString\", \"testStrX*\"));\nassertTrue(Wildcards.matches(\"testString\", \"*String\"));\nassertTrue(Wildcards.matches(\"testString\", \"*tring\"));\nassertTrue(Wildcards.matches(\"testString\", \"t*ng\"));\nassertFalse(Wildcards.matches(\"testString\", \"t*Xng\"));\nassertTrue(Wildcards.matches(\"testString\", \"t*stString\"));\nassertFalse(Wildcards.matches(\"testString\", \"test*X\"));\nassertTrue(Wildcards.matches(\"testString\", \"t*\"));\nassertFalse(Wildcards.matches(\"testString\", \"testStr*X\"));\nassertTrue(Wildcards.matches(\"testString\", \"t*String\"));\nassertTrue(Wildcards.matches(\"testString\", \"t*Str*\"));\nassertFalse(Wildcards.matches(\"testString\", \"test*String*\"));\nassertTrue(Wildcards.matches(\"testString\", \"*\"));\n```\n====================\n\n",
    "scores": [
        0.831,
        0.822,
        0.809,
        0.809,
        0.804,
        0.8,
        0.792,
        0.792,
        0.787,
        0.784,
        0.776,
        0.776,
        0.776,
        0.733,
        0.723,
        0.716,
        0.716,
        0.714,
        0.714,
        0.693,
        0.0
    ],
    "ground_truth": "assertTrue(Wildcards.matches(\"STR\",\"STR\"));"
}