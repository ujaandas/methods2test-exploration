{
    "prompt": "Below is the focal class and test class for reference:\n\npackage DigitalPebble.storm-crawler.core;\n\npublic class StackOverflow {\npublic Metadata ( ) {\nmd = new HashMap < > ( ) ;\n}\n}\n\npackage DigitalPebble.storm-crawler.core;\n\npublic class StackOverflowTest {\n@Test\npublic void testNamespaceExtraction ( ) throws IOException {\nprepareParserBolt ( \"STR\" ) ;\nMetadata metadata = new Metadata ( ) ;\nparse ( \"STR\" , \"STR\" , metadata ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nassertNotNull(metadata);\nassertTrue(metadata.get(\"key1\").isEmpty());\nassertEquals(\"expectedValue\", metadata.get(\"key2\"));\nassertFalse(metadata.containsKey(\"key3\"));\nassertEquals(0, metadata.size());\nassertTrue(metadata.get(\"key4\").contains(\"expectedSubstring\"));\nassertNull(metadata.get(\"key5\"));\nassertTrue(metadata.get(\"key6\").isPresent());\nassertEquals(\"anotherExpectedValue\", metadata.get(\"key7\"));\nassertFalse(metadata.get(\"key8\").isEmpty());\nassertTrue(metadata.get(\"key9\").equals(\"expectedComparisonValue\"));\nassertNotEquals(\"unexpectedValue\", metadata.get(\"key10\"));\nassertTrue(metadata.get(\"key11\").startsWith(\"prefix\"));\nassertFalse(metadata.get(\"key12\").endsWith(\"suffix\"));\nassertTrue(metadata.get(\"key13\").matches(\"regexPattern\"));\nassertEquals(5, metadata.get(\"key14\").length());\nassertTrue(metadata.get(\"key15\").contains(\"partOfValue\"));\nassertNotSame(\"referenceValue\", metadata.get(\"key16\"));\nassertTrue(metadata.get(\"key17\").equalsIgnoreCase(\"caseInsensitiveValue\"));\nassertFalse(metadata.get(\"key18\").isBlank());\nassertTrue(metadata.get(\"key19\").toString().contains(\"toStringCheck\"));\nassertEquals(\"finalExpectedValue\", metadata.get(\"key20\"));\n```\n====================\n\n",
    "scores": [
        0.685,
        0.614,
        0.535,
        0.518,
        0.5,
        0.488,
        0.484,
        0.469,
        0.469,
        0.465,
        0.452,
        0.438,
        0.434,
        0.432,
        0.404,
        0.404,
        0.393,
        0.389,
        0.384,
        0.379,
        0.356,
        0.328,
        0.0
    ],
    "ground_truth": "Assert.assertEquals(1,output.getEmitted().size());"
}