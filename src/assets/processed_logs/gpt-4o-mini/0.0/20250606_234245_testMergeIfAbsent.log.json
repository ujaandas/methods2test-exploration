{
    "prompt": "Below is the focal class and test class for reference:\n\npackage fabric8io.fabric8-maven-plugin.core;\n\npublic class MapUtil {\npublic static void mergeIfAbsent ( Map < String , String > map , Map < String , String > toMerge ) {\nfor ( Map . Entry < String , String > entry : toMerge . entrySet ( ) ) {\nputIfAbsent ( map , entry . getKey ( ) , entry . getValue ( ) ) ;\n;\n} }\n}\n\npackage fabric8io.fabric8-maven-plugin.core;\n\npublic class MapUtilTest {\n@Test\npublic void testMergeIfAbsent ( ) {\nMap < String , String > origMap = createMap ( \"STR\" , \"STR\" , \"STR\" , \"STR\" ) ;\nMap < String , String > toMergeMap = createMap ( \"STR\" , \"STR\" , \"STR\" , \"STR\" ) ;\nMap < String , String > expected = createMap ( \"STR\" , \"STR\" , \"STR\" , \"STR\" , \"STR\" , \"STR\" ) ;\nMapUtil . mergeIfAbsent ( origMap , toMergeMap ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nassertEquals(6, origMap.size());\nassertTrue(origMap.containsKey(\"STR\"));\nassertEquals(\"STR\", origMap.get(\"STR\"));\nassertTrue(origMap.containsValue(\"STR\"));\nassertFalse(origMap.containsKey(\"NEW_KEY_1\"));\nassertFalse(origMap.containsKey(\"NEW_KEY_2\"));\nassertFalse(origMap.containsKey(\"NEW_KEY_3\"));\nassertFalse(origMap.containsKey(\"NEW_KEY_4\"));\nassertTrue(origMap.containsKey(\"STR\"));\nassertEquals(\"STR\", origMap.get(\"STR\"));\nassertEquals(1, origMap.entrySet().stream().filter(e -> e.getKey().equals(\"STR\")).count());\nassertEquals(1, origMap.entrySet().stream().filter(e -> e.getValue().equals(\"STR\")).count());\nassertNotNull(origMap);\nassertNotSame(origMap, toMergeMap);\nassertNotEquals(origMap, toMergeMap);\nassertTrue(origMap.keySet().containsAll(expected.keySet()));\nassertTrue(origMap.values().containsAll(expected.values()));\nassertEquals(expected.size(), origMap.size());\nassertTrue(origMap.keySet().contains(\"STR\"));\nassertFalse(origMap.isEmpty());\nassertEquals(expected, origMap);\n```\n====================\n\n",
    "scores": [
        1.0,
        0.811,
        0.654,
        0.647,
        0.647,
        0.647,
        0.646,
        0.6,
        0.508,
        0.48,
        0.48,
        0.48,
        0.48,
        0.472,
        0.471,
        0.471,
        0.457,
        0.432,
        0.427,
        0.376,
        0.37,
        0.0
    ],
    "ground_truth": "assertEquals(expected,origMap);"
}