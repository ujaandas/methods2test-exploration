{
    "prompt": "Below is the focal class and test class for reference:\n\npackage adlnet.jxapi;\n\npublic class Actor {\npublic String getMbox ( ) {\nreturn mbox ;\n}\n}\n\npackage adlnet.jxapi;\n\npublic class ActorTest {\n@Test\npublic void testGetMbox ( ) {\nString expected = MBOX ;\nString actual = agent . getMbox ( ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nassertNotNull(actual);\nassertEquals(expected, actual);\nassertTrue(actual instanceof String);\nassertFalse(actual.isEmpty());\nassertEquals(expected.length(), actual.length());\nassertTrue(actual.contains(\"@\"));\nassertTrue(actual.startsWith(\"mailto:\"));\nassertFalse(actual.startsWith(\"http://\"));\nassertFalse(actual.startsWith(\"https://\"));\nassertTrue(actual.matches(\"^[^@\\\\s]+@[^@\\\\s]+\\\\.[^@\\\\s]+$\"));\nassertEquals(expected.toLowerCase(), actual.toLowerCase());\nassertNotEquals(\"invalid@example.com\", actual);\nassertNotEquals(\"\", actual);\nassertTrue(actual.split(\"@\").length == 2);\nassertTrue(actual.split(\"\\\\.\").length >= 2);\nassertTrue(actual.split(\"@\")[0].length() > 0);\nassertTrue(actual.split(\"@\")[1].contains(\".\"));\nassertTrue(actual.split(\"@\")[1].split(\"\\\\.\").length > 1);\nassertTrue(actual.length() <= 254);\nassertTrue(actual.length() >= 3);\nassertTrue(actual.matches(\"^[\\\\w!#$%&'*+/=?`{|}~^.-]+@[\\\\w.-]+\\\\.[a-zA-Z]{2,}$\"));\n```\n====================\n\n",
    "scores": [
        0.84,
        0.809,
        0.6,
        0.588,
        0.576,
        0.566,
        0.566,
        0.56,
        0.545,
        0.5,
        0.492,
        0.484,
        0.484,
        0.476,
        0.471,
        0.469,
        0.448,
        0.4,
        0.385,
        0.37,
        0.294,
        0.0
    ],
    "ground_truth": "assertNotNull(actual);"
}