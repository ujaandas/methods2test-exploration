{
    "prompt": "Below is the focal class and test class for reference:\n\npackage jcodec.jcodec;\n\npublic class H264Utils {\npublic static byte [ ] toArray ( ByteBuffer buffer ) {\nbyte [ ] result = new byte [ buffer . remaining ( ) ] ;\nbuffer . duplicate ( ) . get ( result ) ;\nreturn result ;\n}\n}\n\npackage jcodec.jcodec;\n\npublic class H264UtilsTest {\n@Test\npublic void testAvcCToAnnexB ( ) {\nArrayList < ByteBuffer > spsList = new ArrayList < ByteBuffer > ( ) ;\nspsList . add ( ByteBuffer . wrap ( new byte [ ] {\n's' , 't' , 'a' , 'n' } ) ) ;\nspsList . add ( ByteBuffer . wrap ( new byte [ ] {\n't' , 'h' , 'e' } ) ) ;\nArrayList < ByteBuffer > ppsList = new ArrayList < ByteBuffer > ( ) ;\nppsList . add ( ByteBuffer . wrap ( new byte [ ] {\n'm' , 'a' , 'n' } ) ) ;\nppsList . add ( ByteBuffer . wrap ( new byte [ ] {\n'c' , 'o' , 'o' , 'l' } ) ) ;\nAvcCBox avcCBox = AvcCBox . createAvcCBox ( 66 , 0 , 42 , 0 , spsList , ppsList ) ;\nbyte [ ] res = NIOUtils . toArray ( H264Utils . avcCToAnnexB ( avcCBox ) ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nassertNotNull(res);\nassertEquals(10, res.length);\nassertArrayEquals(new byte[] { 0x00, 0x00, 0x00, 0x01, 's', 't', 'a', 'n' }, Arrays.copyOfRange(res, 0, 8));\nassertArrayEquals(new byte[] { 0x00, 0x00, 0x00, 0x01, 't', 'h', 'e' }, Arrays.copyOfRange(res, 8, 16));\nassertArrayEquals(new byte[] { 0x00, 0x00, 0x00, 0x01, 'm', 'a', 'n' }, Arrays.copyOfRange(res, 16, 24));\nassertArrayEquals(new byte[] { 0x00, 0x00, 0x00, 0x01, 'c', 'o', 'o', 'l' }, Arrays.copyOfRange(res, 24, 32));\nassertEquals(0x00, res[0]);\nassertEquals(0x00, res[1]);\nassertEquals(0x00, res[2]);\nassertEquals(0x01, res[3]);\nassertEquals('s', res[4]);\nassertEquals('t', res[5]);\nassertEquals('a', res[6]);\nassertEquals('n', res[7]);\nassertEquals('t', res[8]);\nassertEquals('h', res[9]);\nassertEquals('e', res[10]);\nassertEquals('m', res[11]);\nassertEquals('a', res[12]);\nassertEquals('n', res[13]);\nassertEquals('c', res[14]);\nassertEquals('o', res[15]);\nassertEquals('o', res[16]);\nassertEquals('l', res[17]);\n```\n====================\n\n",
    "scores": [
        0.525,
        0.502,
        0.5,
        0.479,
        0.265,
        0.265,
        0.265,
        0.265,
        0.255,
        0.255,
        0.255,
        0.255,
        0.255,
        0.255,
        0.253,
        0.253,
        0.253,
        0.253,
        0.253,
        0.253,
        0.253,
        0.253,
        0.226,
        0.156,
        0.0
    ],
    "ground_truth": "Assert.assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);"
}