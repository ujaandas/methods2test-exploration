{
    "prompt": "Below is the focal class and test class for reference:\n\npackage fabric8io.fabric8-maven-plugin.core;\n\npublic class MergeResource {\npublic static HasMetadata mergeResources ( HasMetadata item1 , HasMetadata item2 , Logger log , boolean switchOnLocalCustomisation ) {\nif ( item1 instanceof Deployment && item2 instanceof Deployment ) {\nreturn mergeDeployments ( ( Deployment ) item1 , ( Deployment ) item2 , log , switchOnLocalCustomisation ) ;\n} if ( item1 instanceof ConfigMap && item2 instanceof ConfigMap ) {\nConfigMap cm1 = ( ConfigMap ) item1 ;\nConfigMap cm2 = ( ConfigMap ) item2 ;\nreturn mergeConfigMaps ( cm1 , cm2 , log , switchOnLocalCustomisation ) ;\n} mergeMetadata ( item1 , item2 ) ;\nreturn item1 ;\n}\n}\n\npackage fabric8io.fabric8-maven-plugin.core;\n\npublic class MergeResourceTest {\n@Test\npublic void testMergeDeploymentMetadataWithNoSpec ( ) throws Exception {\nDeployment resource = new DeploymentBuilder ( ) . withNewMetadata ( ) . withName ( \"STR\" ) . addToAnnotations ( \"STR\" , \"STR\" ) . addToAnnotations ( \"STR\" , \"STR\" ) . addToAnnotations ( \"STR\" , \"STR\" ) . addToAnnotations ( \"STR\" , \"STR\" ) . endMetadata ( ) . withNewSpec ( ) . withNewTemplate ( ) . withNewSpec ( ) . addNewContainer ( ) . withImage ( \"STR\" ) . endContainer ( ) . endSpec ( ) . endTemplate ( ) . endSpec ( ) . build ( ) ;\nDeployment override = new DeploymentBuilder ( ) . withNewMetadata ( ) . withName ( \"STR\" ) . addToAnnotations ( \"STR\" , \"STR\" ) . addToAnnotations ( \"STR\" , \"STR\" ) . endMetadata ( ) . build ( ) ;\nHasMetadata answer = KubernetesResourceUtil . mergeResources ( resource , override , log , false ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nassertNotNull(answer);\nassertTrue(answer instanceof Deployment);\nDeployment mergedDeployment = (Deployment) answer;\nassertEquals(\"STR\", mergedDeployment.getMetadata().getName());\nassertEquals(2, mergedDeployment.getMetadata().getAnnotations().size());\nassertTrue(mergedDeployment.getMetadata().getAnnotations().containsKey(\"STR\"));\nassertEquals(\"STR\", mergedDeployment.getMetadata().getAnnotations().get(\"STR\"));\nassertNotNull(mergedDeployment.getSpec());\nassertNotNull(mergedDeployment.getSpec().getTemplate());\nassertNotNull(mergedDeployment.getSpec().getTemplate().getSpec());\nassertEquals(1, mergedDeployment.getSpec().getTemplate().getSpec().getContainers().size());\nassertEquals(\"STR\", mergedDeployment.getSpec().getTemplate().getSpec().getContainers().get(0).getImage());\nassertNull(mergedDeployment.getSpec().getTemplate().getSpec().getContainers().get(0).getEnv());\nassertNull(mergedDeployment.getSpec().getTemplate().getSpec().getContainers().get(0).getPorts());\nassertEquals(0, mergedDeployment.getSpec().getTemplate().getSpec().getContainers().get(0).getResources().getRequests().size());\nassertEquals(0, mergedDeployment.getSpec().getTemplate().getSpec().getContainers().get(0).getResources().getLimits().size());\nassertNotNull(mergedDeployment.getSpec().getReplicas());\nassertEquals(1, mergedDeployment.getSpec().getReplicas().intValue());\nassertNotNull(mergedDeployment.getStatus());\nassertNull(mergedDeployment.getStatus().getConditions());\nassertNull(mergedDeployment.getStatus().getAvailableReplicas());\nassertNull(mergedDeployment.getStatus().getUnavailableReplicas());\n```\n====================\n\n",
    "scores": [
        0.84,
        0.548,
        0.531,
        0.508,
        0.447,
        0.447,
        0.395,
        0.39,
        0.333,
        0.333,
        0.326,
        0.286,
        0.273,
        0.272,
        0.263,
        0.263,
        0.243,
        0.239,
        0.218,
        0.192,
        0.167,
        0.164,
        0.0
    ],
    "ground_truth": "assertNotNull(answer);"
}