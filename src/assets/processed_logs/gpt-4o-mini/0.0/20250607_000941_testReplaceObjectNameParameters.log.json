{
    "prompt": "Below is the focal class and test class for reference:\n\npackage amlinv.stat-collection-utils;\n\npublic class ParameterReplacer {\npublic String replaceObjectNameParameters ( String pattern , MBeanLocationParameterSource parameterSource ) {\nMatcher matcher = replaceParamPattern . matcher ( pattern ) ;\nStringBuffer result = new StringBuffer ( ) ;\nwhile ( matcher . find ( ) ) {\nString name = matcher . group ( \"STR\" ) ;\nString value = parameterSource . getParameter ( name ) ;\nif ( value != null ) {\nmatcher . appendReplacement ( result , value ) ;\n} else {\nmatcher . appendReplacement ( result , Matcher . quoteReplacement ( matcher . group ( ) ) ) ;\n} } matcher . appendTail ( result ) ;\nreturn result . toString ( ) ;\n}\n}\n\npackage amlinv.stat-collection-utils;\n\npublic class ParameterReplacerTest {\n@Test\npublic void testReplaceObjectNameParameters ( ) throws Exception {\nMockito . when ( this . mockSource . getParameter ( \"STR\" ) ) . thenReturn ( \"STR\" ) ;\nMockito . when ( this . mockSource . getParameter ( \"STR\" ) ) . thenReturn ( \"STR\" ) ;\nMockito . when ( this . mockSource . getParameter ( \"STR\" ) ) . thenReturn ( \"STR\" ) ;\nString result ;\nresult = this . replacer . replaceObjectNameParameters ( \"STR\" , mockSource ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nassertEquals(\"STR\", result);\nassertNotNull(result);\nassertTrue(result instanceof String);\nassertFalse(result.isEmpty());\nassertEquals(3, result.length());\nassertTrue(result.contains(\"STR\"));\nassertFalse(result.contains(\"XYZ\"));\nassertEquals(\"STR\", result.trim());\nassertEquals(\"STR\", result.toUpperCase());\nassertEquals(\"str\", result.toLowerCase());\nassertEquals(\"STR\", result.replace(\"str\", \"STR\"));\nassertEquals(\"STR\", result.replaceAll(\"STR\", \"STR\"));\nassertNotEquals(\"XYZ\", result);\nassertTrue(result.equals(\"STR\"));\nassertFalse(result.equals(\"XYZ\"));\nassertSame(\"STR\", result);\nassertNotSame(\"XYZ\", result);\nassertTrue(result.equalsIgnoreCase(\"str\"));\nassertEquals(\"STR\", result.substring(0, 3));\nassertEquals(\"STR\", result.substring(0, result.length()));\nassertTrue(result.startsWith(\"S\"));\nassertTrue(result.endsWith(\"R\"));\n```\n====================\n\n",
    "scores": [
        0.881,
        0.867,
        0.84,
        0.836,
        0.788,
        0.776,
        0.737,
        0.712,
        0.697,
        0.684,
        0.681,
        0.679,
        0.642,
        0.621,
        0.618,
        0.557,
        0.533,
        0.517,
        0.508,
        0.5,
        0.5,
        0.441,
        0.0
    ],
    "ground_truth": "assertEquals(\"STR\",result);"
}