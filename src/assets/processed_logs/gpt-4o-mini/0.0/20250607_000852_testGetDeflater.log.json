{
    "prompt": "Below is the focal class and test class for reference:\n\npackage TooTallNate.Java-WebSocket;\n\npublic class PerMessageDeflateExtension {\npublic Deflater getDeflater ( ) {\nreturn deflater ;\n}\n}\n\npackage TooTallNate.Java-WebSocket;\n\npublic class PerMessageDeflateExtensionTest {\n@Test\npublic void testGetDeflater ( ) {\nPerMessageDeflateExtension deflateExtension = new PerMessageDeflateExtension ( ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nDeflater deflater = deflateExtension.getDeflater();\nassertNotNull(deflater);\nassertTrue(deflater instanceof Deflater);\nassertEquals(Deflater.DEFAULT_COMPRESSION, deflater.getLevel());\nassertFalse(deflater.needsInput());\nassertFalse(deflater.finished());\nassertFalse(deflater.deflate(new byte[10]) == 0);\nassertTrue(deflater.getAdler() >= 0);\nassertTrue(deflater.getTotalIn() >= 0);\nassertTrue(deflater.getTotalOut() >= 0);\nassertFalse(deflater.isFinished());\nassertFalse(deflater.isNeedingInput());\nassertEquals(Deflater.DEFAULT_STRATEGY, deflater.getStrategy());\nassertTrue(deflater.getBytesRead() >= 0);\nassertTrue(deflater.getBytesWritten() >= 0);\nassertTrue(deflater.getAdler() >= 0);\nassertTrue(deflater.getTotalIn() >= 0);\nassertTrue(deflater.getTotalOut() >= 0);\nassertFalse(deflater.finished());\nassertFalse(deflater.needsInput());\nassertTrue(deflater.getRemaining() >= 0);\nassertTrue(deflater.getTotalIn() >= 0);\nassertTrue(deflater.getTotalOut() >= 0);\n```\n====================\n\n",
    "scores": [
        0.56,
        0.446,
        0.422,
        0.414,
        0.414,
        0.405,
        0.405,
        0.358,
        0.358,
        0.358,
        0.344,
        0.34,
        0.34,
        0.34,
        0.34,
        0.325,
        0.32,
        0.32,
        0.32,
        0.309,
        0.309,
        0.309,
        0.265,
        0.0
    ],
    "ground_truth": "assertEquals(deflateExtension.getDeflater().finished(),newDeflater(Deflater.DEFAULT_COMPRESSION,true).finished());"
}