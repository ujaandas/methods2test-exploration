{
    "prompt": "Below is the focal class and test class for reference:\n\npackage basis-technology-corp.tcl-regex-java;\n\npublic class Matcher {\nboolean lookingAt ( ) ;\n}\n\npackage basis-technology-corp.tcl-regex-java;\n\npublic class MatcherTest {\n@Test\npublic void lookingAtPrefix ( ) throws Exception {\nRePattern pattern = HsrePattern . compile ( \"STR\" , PatternFlags . ADVANCED ) ;\nReMatcher matcher = pattern . matcher ( \"STR\" ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nassertTrue(matcher.lookingAt());\nassertEquals(0, matcher.start());\nassertEquals(3, matcher.end());\nassertEquals(\"STR\", matcher.group());\nassertFalse(matcher.lookingAt(\"XYZ\"));\nassertTrue(matcher.lookingAt(\"STRABC\"));\nassertFalse(matcher.lookingAt(\"ABSTR\"));\nassertEquals(0, matcher.regionStart());\nassertEquals(3, matcher.regionEnd());\nassertTrue(matcher.lookingAt(\"STR\"));\nassertFalse(matcher.lookingAt(\"str\"));\nassertTrue(matcher.lookingAt(\"STR123\"));\nassertEquals(0, matcher.start(0));\nassertEquals(3, matcher.end(0));\nassertEquals(\"STR\", matcher.group(0));\nassertTrue(matcher.lookingAt(\"STRXYZ\"));\nassertFalse(matcher.lookingAt(\"XYZSTR\"));\nassertTrue(matcher.lookingAt(\"STR STR\"));\nassertEquals(0, matcher.start(\"STR\"));\nassertEquals(3, matcher.end(\"STR\"));\nassertTrue(matcher.lookingAt(\"STR!@#\"));\nassertFalse(matcher.lookingAt(\"!@#STR\"));\nassertTrue(matcher.lookingAt(\"STR\\n\"));\n```\n====================\n\n",
    "scores": [
        0.925,
        0.899,
        0.886,
        0.886,
        0.886,
        0.886,
        0.886,
        0.886,
        0.824,
        0.824,
        0.8,
        0.789,
        0.789,
        0.667,
        0.656,
        0.647,
        0.645,
        0.636,
        0.635,
        0.615,
        0.597,
        0.576,
        0.567,
        0.0
    ],
    "ground_truth": "assertTrue(matcher.lookingAt());"
}