{
    "prompt": "Below is the focal class and test class for reference:\n\npackage adlnet.jxapi;\n\npublic class ActivityState {\npublic Agent getAgent ( ) {\nreturn this . agent ;\n}\n}\n\npackage adlnet.jxapi;\n\npublic class ActivityStateTest {\n@Test\npublic void testSetAgent ( ) {\nAgent expected = new Agent ( ) ;\nexpected . setMbox ( \"STR\" ) ;\nactivityState . setAgent ( expected ) ;\nAgent actual = activityState . getAgent ( ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nassertNotNull(actual);\nassertEquals(expected.getMbox(), actual.getMbox());\nassertEquals(expected, actual);\nassertTrue(expected.equals(actual));\nassertFalse(expected == actual);\nassertSame(expected, actual);\nassertNotSame(new Agent(), actual);\nassertTrue(expected.getMbox().equals(actual.getMbox()));\nassertEquals(\"STR\", actual.getMbox());\nassertNotEquals(\"DIFFERENT\", actual.getMbox());\nassertNull(actual.getSomeOtherProperty());\nassertNotNull(actual.getSomeOtherProperty());\nassertTrue(expected.hashCode() == actual.hashCode());\nassertFalse(expected.hashCode() != actual.hashCode());\nassertTrue(expected.toString().equals(actual.toString()));\nassertFalse(expected.toString().equals(\"DIFFERENT_STRING\"));\nassertEquals(expected.getClass(), actual.getClass());\nassertTrue(expected instanceof Agent);\nassertFalse(actual instanceof String);\nassertEquals(expected, actual);\nassertNotEquals(null, actual);\nassertTrue(expected.getMbox().length() > 0);\n```\n====================\n\n",
    "scores": [
        0.84,
        0.776,
        0.646,
        0.642,
        0.607,
        0.583,
        0.581,
        0.561,
        0.56,
        0.56,
        0.56,
        0.536,
        0.515,
        0.462,
        0.447,
        0.444,
        0.429,
        0.429,
        0.423,
        0.417,
        0.387,
        0.35,
        0.0
    ],
    "ground_truth": "assertNotNull(actual);"
}