{
    "prompt": "Below is the focal class and test class for reference:\n\npackage fabric8io.fabric8-maven-plugin.core;\n\npublic class Configs {\npublic static String getSystemPropertyWithMavenPropertyAsFallback ( Properties properties , String key ) {\nString val = System . getProperty ( key ) ;\nif ( val == null && properties != null ) {\nval = properties . getProperty ( key ) ;\n} return val ;\n}\n}\n\npackage fabric8io.fabric8-maven-plugin.core;\n\npublic class ConfigsTest {\n@Test\npublic void getPropertyValueTest ( ) {\nproperties . setProperty ( KEY_1 , value ) ;\nSystem . setProperty ( KEY_2 , value ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nassertEquals(value, Configs.getSystemPropertyWithMavenPropertyAsFallback(properties, KEY_1));\nassertEquals(value, Configs.getSystemPropertyWithMavenPropertyAsFallback(properties, KEY_2));\nassertNull(Configs.getSystemPropertyWithMavenPropertyAsFallback(properties, \"nonexistentKey\"));\nproperties.setProperty(\"nonexistentKey\", \"fallbackValue\");\nassertEquals(\"fallbackValue\", Configs.getSystemPropertyWithMavenPropertyAsFallback(properties, \"nonexistentKey\"));\nSystem.clearProperty(KEY_2);\nassertEquals(value, Configs.getSystemPropertyWithMavenPropertyAsFallback(properties, KEY_2));\nSystem.setProperty(KEY_2, null);\nassertNull(Configs.getSystemPropertyWithMavenPropertyAsFallback(properties, KEY_2));\nproperties.setProperty(KEY_1, null);\nassertNull(Configs.getSystemPropertyWithMavenPropertyAsFallback(properties, KEY_1));\nproperties.setProperty(KEY_1, \"newValue\");\nassertEquals(\"newValue\", Configs.getSystemPropertyWithMavenPropertyAsFallback(properties, KEY_1));\nSystem.setProperty(KEY_1, \"systemValue\");\nassertEquals(\"systemValue\", Configs.getSystemPropertyWithMavenPropertyAsFallback(properties, KEY_1));\nSystem.setProperty(\"anotherKey\", \"anotherValue\");\nassertEquals(\"anotherValue\", Configs.getSystemPropertyWithMavenPropertyAsFallback(properties, \"anotherKey\"));\nproperties.setProperty(\"anotherKey\", \"fallbackValue\");\nassertEquals(\"anotherValue\", Configs.getSystemPropertyWithMavenPropertyAsFallback(properties, \"anotherKey\"));\nSystem.clearProperty(\"anotherKey\");\nassertEquals(\"fallbackValue\", Configs.getSystemPropertyWithMavenPropertyAsFallback(properties, \"anotherKey\"));\nassertNull(Configs.getSystemPropertyWithMavenPropertyAsFallback(null, KEY_1));\nassertNull(Configs.getSystemPropertyWithMavenPropertyAsFallback(null, \"nonexistentKey\"));\nproperties.setProperty(\"keyWithEmptyValue\", \"\");\nassertEquals(\"\", Configs.getSystemPropertyWithMavenPropertyAsFallback(properties, \"keyWithEmptyValue\"));\nSystem.setProperty(\"keyWithEmptyValue\", \"systemValue\");\nassertEquals(\"systemValue\", Configs.getSystemPropertyWithMavenPropertyAsFallback(properties, \"keyWithEmptyValue\"));\n```\n====================\n\n",
    "scores": [
        0.941,
        0.933,
        0.933,
        0.93,
        0.926,
        0.919,
        0.904,
        0.869,
        0.847,
        0.847,
        0.843,
        0.843,
        0.831,
        0.826,
        0.822,
        0.78,
        0.364,
        0.342,
        0.336,
        0.333,
        0.326,
        0.323,
        0.258,
        0.246,
        0.176,
        0.169,
        0.164,
        0.0
    ],
    "ground_truth": "assertEquals(\"STR\",Configs.getSystemPropertyWithMavenPropertyAsFallback(properties,KEY_1));"
}