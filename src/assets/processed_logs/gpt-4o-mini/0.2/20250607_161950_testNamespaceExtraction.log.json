{
    "prompt": "Below is the focal class and test class for reference:\n\npackage DigitalPebble.storm-crawler.core;\n\npublic class StackOverflow {\npublic Metadata ( ) {\nmd = new HashMap < > ( ) ;\n}\n}\n\npackage DigitalPebble.storm-crawler.core;\n\npublic class StackOverflowTest {\n@Test\npublic void testNamespaceExtraction ( ) throws IOException {\nprepareParserBolt ( \"STR\" ) ;\nMetadata metadata = new Metadata ( ) ;\nparse ( \"STR\" , \"STR\" , metadata ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nassertNotNull(metadata);\nassertTrue(metadata.get(\"key1\").isEmpty());\nassertEquals(\"expectedValue\", metadata.get(\"key2\"));\nassertFalse(metadata.containsKey(\"nonExistentKey\"));\nassertEquals(0, metadata.size());\nassertTrue(metadata.get(\"key3\").contains(\"expectedSubstring\"));\nassertFalse(metadata.get(\"key4\").contains(\"unexpectedSubstring\"));\nassertEquals(\"anotherExpectedValue\", metadata.get(\"key5\"));\nassertNotEquals(\"wrongValue\", metadata.get(\"key6\"));\nassertTrue(metadata.get(\"key7\").startsWith(\"prefix\"));\nassertTrue(metadata.get(\"key8\").endsWith(\"suffix\"));\nassertTrue(metadata.get(\"key9\").matches(\"regexPattern\"));\nassertEquals(\"expectedType\", metadata.get(\"key10\").getClass().getSimpleName());\nassertTrue(metadata.get(\"key11\").length() > 0);\nassertFalse(metadata.get(\"key12\").isBlank());\nassertNull(metadata.get(\"key13\"));\nassertTrue(metadata.get(\"key14\").containsAll(Arrays.asList(\"value1\", \"value2\")));\nassertEquals(5, metadata.get(\"key15\").size());\nassertTrue(metadata.get(\"key16\").equalsIgnoreCase(\"caseInsensitiveValue\"));\nassertNotSame(metadata.get(\"key17\"), metadata.get(\"key18\"));\nassertTrue(metadata.get(\"key19\").toString().contains(\"toStringValue\"));\n```\n====================\n\n",
    "scores": [
        0.698,
        0.685,
        0.535,
        0.5,
        0.5,
        0.487,
        0.465,
        0.452,
        0.449,
        0.442,
        0.44,
        0.43,
        0.427,
        0.409,
        0.404,
        0.395,
        0.393,
        0.388,
        0.356,
        0.347,
        0.328,
        0.0
    ],
    "ground_truth": "Assert.assertEquals(1,output.getEmitted().size());"
}