{
    "prompt": "Below is the focal class and test class for reference:\n\npackage TooTallNate.Java-WebSocket;\n\npublic class DefaultExtension {\n@Override\npublic String getProvidedExtensionAsClient ( ) {\nreturn \"STR\" ;\n}\n}\n\npackage TooTallNate.Java-WebSocket;\n\npublic class DefaultExtensionTest {\n@Test\npublic void testGetProvidedExtensionAsClient ( ) throws Exception {\nDefaultExtension defaultExtension = new DefaultExtension ( ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nAssert.assertNotNull(defaultExtension);\nAssert.assertEquals(\"STR\", defaultExtension.getProvidedExtensionAsClient());\nAssert.assertTrue(defaultExtension.getProvidedExtensionAsClient().length() > 0);\nAssert.assertTrue(defaultExtension.getProvidedExtensionAsClient().contains(\"S\"));\nAssert.assertTrue(defaultExtension.getProvidedExtensionAsClient().contains(\"T\"));\nAssert.assertTrue(defaultExtension.getProvidedExtensionAsClient().contains(\"R\"));\nAssert.assertFalse(defaultExtension.getProvidedExtensionAsClient().isEmpty());\nAssert.assertEquals(3, defaultExtension.getProvidedExtensionAsClient().length());\nAssert.assertNotEquals(\"XYZ\", defaultExtension.getProvidedExtensionAsClient());\nAssert.assertNotEquals(\"STR123\", defaultExtension.getProvidedExtensionAsClient());\nAssert.assertNotEquals(\"\", defaultExtension.getProvidedExtensionAsClient());\nAssert.assertTrue(defaultExtension.getProvidedExtensionAsClient().startsWith(\"S\"));\nAssert.assertTrue(defaultExtension.getProvidedExtensionAsClient().endsWith(\"R\"));\nAssert.assertTrue(defaultExtension.getProvidedExtensionAsClient().matches(\"[A-Z]+\"));\nAssert.assertTrue(defaultExtension.getProvidedExtensionAsClient().equalsIgnoreCase(\"str\"));\nAssert.assertTrue(defaultExtension.getProvidedExtensionAsClient().indexOf(\"T\") >= 0);\nAssert.assertTrue(defaultExtension.getProvidedExtensionAsClient().charAt(1) == 'T');\nAssert.assertTrue(defaultExtension.getProvidedExtensionAsClient().charAt(0) == 'S');\nAssert.assertTrue(defaultExtension.getProvidedExtensionAsClient().charAt(2) == 'R');\nAssert.assertNotSame(\"DifferentString\", defaultExtension.getProvidedExtensionAsClient());\nAssert.assertSame(\"STR\", defaultExtension.getProvidedExtensionAsClient());\n```\n====================\n\n",
    "scores": [
        1.0,
        0.957,
        0.955,
        0.939,
        0.934,
        0.892,
        0.847,
        0.818,
        0.816,
        0.8,
        0.8,
        0.8,
        0.8,
        0.794,
        0.794,
        0.794,
        0.789,
        0.789,
        0.778,
        0.747,
        0.491,
        0.0
    ],
    "ground_truth": "assertEquals(\"STR\",defaultExtension.getProvidedExtensionAsClient());"
}