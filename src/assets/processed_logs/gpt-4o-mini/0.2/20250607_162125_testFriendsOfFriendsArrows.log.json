{
    "prompt": "Below is the focal class and test class for reference:\n\npackage orientechnologies.orientdb.graphdb;\n\npublic class OMatchStatementExecutionNew {\n@Override\nboolean hasNext ( ) ;\n}\n\npackage orientechnologies.orientdb.graphdb;\n\npublic class OMatchStatementExecutionNewTest {\n@Test\npublic void testFriendsOfFriendsArrows ( ) throws Exception {\nOResultSet qResult = db . query ( \"STR\" ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nAssert.assertNotNull(qResult);\nAssert.assertTrue(qResult.hasNext());\nAssert.assertEquals(5, qResult.size());\nAssert.assertTrue(qResult.next().getProperty(\"name\").equals(\"Alice\"));\nAssert.assertTrue(qResult.next().getProperty(\"name\").equals(\"Bob\"));\nAssert.assertTrue(qResult.next().getProperty(\"name\").equals(\"Charlie\"));\nAssert.assertTrue(qResult.next().getProperty(\"relationship\").equals(\"friend\"));\nAssert.assertTrue(qResult.next().getProperty(\"relationship\").equals(\"friend\"));\nAssert.assertTrue(qResult.next().getProperty(\"degree\").equals(2));\nAssert.assertFalse(qResult.hasNext());\nAssert.assertTrue(qResult.getProperty(\"location\").equals(\"New York\"));\nAssert.assertTrue(qResult.getProperty(\"age\") instanceof Integer);\nAssert.assertTrue(qResult.getProperty(\"active\").equals(true));\nAssert.assertTrue(qResult.getProperty(\"hobbies\").contains(\"hiking\"));\nAssert.assertTrue(qResult.getProperty(\"hobbies\").contains(\"reading\"));\nAssert.assertTrue(qResult.getProperty(\"friendsCount\") >= 3);\nAssert.assertTrue(qResult.getProperty(\"lastInteraction\") instanceof Date);\nAssert.assertTrue(qResult.getProperty(\"status\").equals(\"active\"));\nAssert.assertTrue(qResult.getProperty(\"email\").matches(\"^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+$\"));\nAssert.assertTrue(qResult.getProperty(\"phoneNumber\").matches(\"^\\\\+?[0-9]{10,15}$\"));\nAssert.assertTrue(qResult.getProperty(\"city\").equals(\"Los Angeles\"));\nAssert.assertTrue(qResult.getProperty(\"country\").equals(\"USA\"));\n```\n====================\n\n",
    "scores": [
        1.0,
        0.881,
        0.712,
        0.582,
        0.578,
        0.575,
        0.575,
        0.571,
        0.565,
        0.562,
        0.556,
        0.556,
        0.549,
        0.549,
        0.542,
        0.539,
        0.538,
        0.538,
        0.5,
        0.5,
        0.476,
        0.404,
        0.0
    ],
    "ground_truth": "Assert.assertTrue(qResult.hasNext());"
}