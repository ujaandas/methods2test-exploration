{
    "prompt": "Below is the focal class and test class for reference:\n\npackage arnohaase.a-foundation.a-foundation;\n\npublic class ADiGraph {\npublic Collection < E > edges ( ) {\nreturn new ArrayIterable < > ( edges ) ;\n}\n}\n\npackage arnohaase.a-foundation.a-foundation;\n\npublic class ADiGraphTest {\n@Test\npublic void testNodesWithoutEdges ( ) {\nfinal ADiGraph < String , ASimpleEdge < String > > graph = ADiGraph . create ( Arrays . asList ( \"STR\" , \"STR\" , \"STR\" ) , Arrays . asList ( edge ( \"STR\" , \"STR\" ) ) ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nassertNotNull(graph);\nassertEquals(3, graph.nodes().size());\nassertTrue(graph.nodes().contains(\"STR\"));\nassertFalse(graph.edges().iterator().hasNext());\nassertEquals(0, graph.edges().size());\nassertTrue(graph.isEmpty());\nassertFalse(graph.containsNode(\"NON_EXISTENT\"));\nassertFalse(graph.containsEdge(edge(\"STR\", \"STR\")));\nassertEquals(0, graph.inDegree(\"STR\"));\nassertEquals(0, graph.outDegree(\"STR\"));\nassertEquals(0, graph.degree(\"STR\"));\nassertTrue(graph.getAdjacentNodes(\"STR\").isEmpty());\nassertTrue(graph.getIncomingEdges(\"STR\").isEmpty());\nassertTrue(graph.getOutgoingEdges(\"STR\").isEmpty());\nassertEquals(0, graph.numberOfEdges());\nassertEquals(3, graph.numberOfNodes());\nassertTrue(graph.getEdges().isEmpty());\nassertFalse(graph.hasPath(\"STR\", \"STR\"));\nassertFalse(graph.isDirected());\nassertTrue(graph.getEdgesBetween(\"STR\", \"STR\").isEmpty());\nassertFalse(graph.hasCycle());\n```\n====================\n\n",
    "scores": [
        0.74,
        0.736,
        0.659,
        0.652,
        0.614,
        0.612,
        0.598,
        0.594,
        0.594,
        0.591,
        0.581,
        0.554,
        0.545,
        0.536,
        0.535,
        0.506,
        0.495,
        0.483,
        0.469,
        0.456,
        0.359,
        0.0
    ],
    "ground_truth": "assertTrue(eqSet(graph.edges(),edge(\"STR\",\"STR\")));"
}