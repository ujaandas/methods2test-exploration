{
    "prompt": "Below is the focal class and test class for reference:\n\npackage jcodec.jcodec;\n\npublic class H264Utils {\npublic static byte [ ] toArray ( ByteBuffer buffer ) {\nbyte [ ] result = new byte [ buffer . remaining ( ) ] ;\nbuffer . duplicate ( ) . get ( result ) ;\nreturn result ;\n}\n}\n\npackage jcodec.jcodec;\n\npublic class H264UtilsTest {\n@Test\npublic void testAvcCToAnnexB ( ) {\nArrayList < ByteBuffer > spsList = new ArrayList < ByteBuffer > ( ) ;\nspsList . add ( ByteBuffer . wrap ( new byte [ ] {\n's' , 't' , 'a' , 'n' } ) ) ;\nspsList . add ( ByteBuffer . wrap ( new byte [ ] {\n't' , 'h' , 'e' } ) ) ;\nArrayList < ByteBuffer > ppsList = new ArrayList < ByteBuffer > ( ) ;\nppsList . add ( ByteBuffer . wrap ( new byte [ ] {\n'm' , 'a' , 'n' } ) ) ;\nppsList . add ( ByteBuffer . wrap ( new byte [ ] {\n'c' , 'o' , 'o' , 'l' } ) ) ;\nAvcCBox avcCBox = AvcCBox . createAvcCBox ( 66 , 0 , 42 , 0 , spsList , ppsList ) ;\nbyte [ ] res = NIOUtils . toArray ( H264Utils . avcCToAnnexB ( avcCBox ) ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nassertNotNull(res);\nassertEquals(10, res.length);\nassertArrayEquals(new byte[] { 's', 't', 'a', 'n', 'm', 'a', 'n', 'c', 'o', 'o', 'l' }, res);\nassertEquals('s', res[0]);\nassertEquals('t', res[1]);\nassertEquals('a', res[2]);\nassertEquals('n', res[3]);\nassertEquals('m', res[4]);\nassertEquals('a', res[5]);\nassertEquals('n', res[6]);\nassertEquals('c', res[7]);\nassertEquals('o', res[8]);\nassertEquals('o', res[9]);\nassertTrue(Arrays.equals(new byte[] { 's', 't', 'a', 'n' }, Arrays.copyOfRange(res, 0, 4)));\nassertTrue(Arrays.equals(new byte[] { 'm', 'a', 'n' }, Arrays.copyOfRange(res, 4, 7)));\nassertTrue(Arrays.equals(new byte[] { 'c', 'o', 'o', 'l' }, Arrays.copyOfRange(res, 7, 11)));\nassertNotEquals('x', res[0]);\nassertNotEquals('y', res[1]);\nassertNotEquals('z', res[2]);\nassertTrue(res[3] != 'x');\nassertTrue(res[4] != 'y');\nassertTrue(res[5] != 'z');\nassertTrue(res[6] != 'x');\nassertTrue(res[7] != 'y');\nassertTrue(res[8] != 'z');\nassertTrue(res[9] != 'x');\n```\n====================\n\n",
    "scores": [
        0.706,
        0.43,
        0.414,
        0.404,
        0.255,
        0.255,
        0.255,
        0.255,
        0.255,
        0.255,
        0.255,
        0.255,
        0.255,
        0.255,
        0.238,
        0.238,
        0.238,
        0.226,
        0.159,
        0.159,
        0.159,
        0.159,
        0.159,
        0.159,
        0.159,
        0.156,
        0.0
    ],
    "ground_truth": "Assert.assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);"
}