{
    "prompt": "Below is the focal class and test class for reference:\n\npackage nidi3.graphviz-java.graphviz-java;\n\npublic class Label {\npublic static Label markdown ( String value ) {\nreturn html ( replaceMd ( replaceMd ( replaceMd ( replaceMd ( replaceMd ( replaceMd ( replaceMd ( value . replace ( \"STR\" , \"STR\" ) , \"STR\" , \"STR\" ) , \"STR\" , \"STR\" ) , \"STR\" , \"STR\" ) , \"STR\" , \"STR\" ) , \"STR\" , \"STR\" ) , \"STR\" , \"STR\" ) , \"STR\" , \"STR\" ) . replaceAll ( \"STR\" , \"STR\" ) ) ;\n}\n}\n\npackage nidi3.graphviz-java.graphviz-java;\n\npublic class LabelTest {\n@Test\nvoid markdown ( ) {\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nassertEquals(\"ExpectedOutput1\", Label.markdown(\"Input1\"));\nassertEquals(\"ExpectedOutput2\", Label.markdown(\"Input2\"));\nassertEquals(\"ExpectedOutput3\", Label.markdown(\"Input3\"));\nassertEquals(\"ExpectedOutput4\", Label.markdown(\"Input4\"));\nassertEquals(\"ExpectedOutput5\", Label.markdown(\"Input5\"));\nassertEquals(\"ExpectedOutput6\", Label.markdown(\"Input6\"));\nassertEquals(\"ExpectedOutput7\", Label.markdown(\"Input7\"));\nassertEquals(\"ExpectedOutput8\", Label.markdown(\"Input8\"));\nassertEquals(\"ExpectedOutput9\", Label.markdown(\"Input9\"));\nassertEquals(\"ExpectedOutput10\", Label.markdown(\"Input10\"));\nassertEquals(\"ExpectedOutput11\", Label.markdown(\"Input11\"));\nassertEquals(\"ExpectedOutput12\", Label.markdown(\"Input12\"));\nassertEquals(\"ExpectedOutput13\", Label.markdown(\"Input13\"));\nassertEquals(\"ExpectedOutput14\", Label.markdown(\"Input14\"));\nassertEquals(\"ExpectedOutput15\", Label.markdown(\"Input15\"));\nassertEquals(\"ExpectedOutput16\", Label.markdown(\"Input16\"));\nassertEquals(\"ExpectedOutput17\", Label.markdown(\"Input17\"));\nassertEquals(\"ExpectedOutput18\", Label.markdown(\"Input18\"));\nassertEquals(\"ExpectedOutput19\", Label.markdown(\"Input19\"));\nassertEquals(\"ExpectedOutput20\", Label.markdown(\"Input20\"));\n```\n====================\n\n",
    "scores": [
        0.68,
        0.68,
        0.68,
        0.68,
        0.68,
        0.68,
        0.68,
        0.68,
        0.667,
        0.667,
        0.667,
        0.667,
        0.667,
        0.667,
        0.667,
        0.667,
        0.667,
        0.667,
        0.667,
        0.631,
        0.0
    ],
    "ground_truth": "assertEquals(\"STR\",Label.markdown(\"STR\").value);"
}