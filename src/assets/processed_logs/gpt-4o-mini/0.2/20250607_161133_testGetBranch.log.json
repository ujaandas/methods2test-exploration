{
    "prompt": "Below is the focal class and test class for reference:\n\npackage trautonen.coveralls-maven-plugin;\n\npublic class Travis {\n@Override\npublic String getBranch ( ) {\nreturn getProperty ( TRAVIS_BRANCH ) ;\n}\n}\n\npackage trautonen.coveralls-maven-plugin;\n\npublic class TravisTest {\n@Test\npublic void testGetBranch ( ) {\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nimport static org.junit.Assert.assertEquals;\nimport static org.mockito.Mockito.*;\n\npublic void testGetBranch() {\nTravis travis = mock(Travis.class);\nwhen(travis.getProperty(\"TRAVIS_BRANCH\")).thenReturn(\"main\");\nassertEquals(\"main\", travis.getBranch());\n\nwhen(travis.getProperty(\"TRAVIS_BRANCH\")).thenReturn(\"develop\");\nassertEquals(\"develop\", travis.getBranch());\n\nwhen(travis.getProperty(\"TRAVIS_BRANCH\")).thenReturn(\"feature-branch\");\nassertEquals(\"feature-branch\", travis.getBranch());\n\nwhen(travis.getProperty(\"TRAVIS_BRANCH\")).thenReturn(\"release-1.0\");\nassertEquals(\"release-1.0\", travis.getBranch());\n\nwhen(travis.getProperty(\"TRAVIS_BRANCH\")).thenReturn(\"hotfix-2.0\");\nassertEquals(\"hotfix-2.0\", travis.getBranch());\n\nwhen(travis.getProperty(\"TRAVIS_BRANCH\")).thenReturn(\"\");\nassertEquals(\"\", travis.getBranch());\n\nwhen(travis.getProperty(\"TRAVIS_BRANCH\")).thenReturn(null);\nassertEquals(null, travis.getBranch());\n\nwhen(travis.getProperty(\"TRAVIS_BRANCH\")).thenReturn(\"bugfix/issue-123\");\nassertEquals(\"bugfix/issue-123\", travis.getBranch());\n\nwhen(travis.getProperty(\"TRAVIS_BRANCH\")).thenReturn(\"experimental\");\nassertEquals(\"experimental\", travis.getBranch());\n\nwhen(travis.getProperty(\"TRAVIS_BRANCH\")).thenReturn(\"staging\");\nassertEquals(\"staging\", travis.getBranch());\n\nwhen(travis.getProperty(\"TRAVIS_BRANCH\")).thenReturn(\"production\");\nassertEquals(\"production\", travis.getBranch());\n\nwhen(travis.getProperty(\"TRAVIS_BRANCH\")).thenReturn(\"test-branch\");\nassertEquals(\"test-branch\", travis.getBranch());\n\nwhen(travis.getProperty(\"TRAVIS_BRANCH\")).thenReturn(\"dev\");\nassertEquals(\"dev\", travis.getBranch());\n\nwhen(travis.getProperty(\"TRAVIS_BRANCH\")).thenReturn(\"main\");\nassertEquals(\"main\", travis.getBranch());\n\nwhen(travis.getProperty(\"TRAVIS_BRANCH\")).thenReturn(\"feature/awesome-feature\");\nassertEquals(\"feature/awesome-feature\", travis.getBranch());\n\nwhen(travis.getProperty(\"\n====================\n\n",
    "scores": [
        0.819,
        0.791,
        0.782,
        0.782,
        0.756,
        0.756,
        0.753,
        0.731,
        0.731,
        0.723,
        0.723,
        0.716,
        0.701,
        0.687,
        0.642,
        0.356,
        0.313,
        0.305,
        0.269,
        0.267,
        0.264,
        0.262,
        0.259,
        0.259,
        0.252,
        0.252,
        0.246,
        0.246,
        0.245,
        0.243,
        0.241,
        0.233,
        0.22,
        0.173
    ],
    "ground_truth": "assertEquals(\"STR\",newTravis(env()).getBranch());"
}