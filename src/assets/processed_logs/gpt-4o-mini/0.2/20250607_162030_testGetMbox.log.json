{
    "prompt": "Below is the focal class and test class for reference:\n\npackage adlnet.jxapi;\n\npublic class Actor {\npublic String getMbox ( ) {\nreturn mbox ;\n}\n}\n\npackage adlnet.jxapi;\n\npublic class ActorTest {\n@Test\npublic void testGetMbox ( ) {\nString expected = MBOX ;\nString actual = agent . getMbox ( ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nassertNotNull(actual);\nassertEquals(expected, actual);\nassertTrue(actual instanceof String);\nassertFalse(actual.isEmpty());\nassertEquals(expected.length(), actual.length());\nassertTrue(actual.contains(\"@\"));\nassertTrue(actual.startsWith(\"mailto:\"));\nassertFalse(actual.contains(\" \"));\nassertEquals(expected.toLowerCase(), actual.toLowerCase());\nassertNotSame(expected, actual);\nassertTrue(actual.matches(\"^[^@\\\\s]+@[^@\\\\s]+\\\\.[^@\\\\s]+$\"));\nassertTrue(actual.equalsIgnoreCase(expected));\nassertThat(actual, is(expected));\nassertThat(actual, not(isEmptyString()));\nassertThat(actual, startsWith(\"mailto:\"));\nassertThat(actual, containsString(\"@\"));\nassertThat(actual, endsWith(\".com\"));\nassertThat(actual, not(containsString(\" \")));\nassertThat(actual, matchesPattern(\"^[^@\\\\s]+@[^@\\\\s]+\\\\.[^@\\\\s]+$\"));\nassertThat(actual, hasLength(expected.length()));\n```\n====================\n\n",
    "scores": [
        0.84,
        0.667,
        0.6,
        0.577,
        0.566,
        0.566,
        0.56,
        0.545,
        0.536,
        0.508,
        0.5,
        0.492,
        0.492,
        0.476,
        0.471,
        0.455,
        0.441,
        0.385,
        0.37,
        0.341,
        0.0
    ],
    "ground_truth": "assertNotNull(actual);"
}