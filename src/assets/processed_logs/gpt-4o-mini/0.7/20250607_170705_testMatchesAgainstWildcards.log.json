{
    "prompt": "Below is the focal class and test class for reference:\n\npackage trautonen.coveralls-maven-plugin;\n\npublic class Wildcards {\npublic static boolean matches ( final String text , final String wildcard ) {\nString pattern = wildcard . replace ( \"STR\" , \"STR\" ) . replace ( \"STR\" , \"STR\" ) ;\nreturn ( text != null && text . matches ( pattern ) ) ;\n}\n}\n\npackage trautonen.coveralls-maven-plugin;\n\npublic class WildcardsTest {\n@Test\npublic void testMatchesAgainstWildcards ( ) throws Exception {\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nassertTrue(Wildcards.matches(\"testString\", \"testSTR\"));\nassertTrue(Wildcards.matches(\"testString\", \"teSTRString\"));\nassertTrue(Wildcards.matches(\"testString\", \"tSTRtS\"));\nassertTrue(Wildcards.matches(\"testString\", \"tSTRing\"));\nassertTrue(Wildcards.matches(\"testString\", \"teSTRg\"));\nassertFalse(Wildcards.matches(\"testString\", \"wrongSTR\"));\nassertFalse(Wildcards.matches(\"testString\", \"test\"));\nassertTrue(Wildcards.matches(\"testString\", \"*testSTR\"));\nassertTrue(Wildcards.matches(\"testString\", \"testSTR*\"));\nassertTrue(Wildcards.matches(\"testString\", \"*STR\"));\nassertTrue(Wildcards.matches(\"testString\", \"t*STR\"));\nassertFalse(Wildcards.matches(\"testString\", \"STRtest\"));\nassertTrue(Wildcards.matches(\"testString\", \"test*\"));\nassertFalse(Wildcards.matches(null, \"testSTR\"));\nassertFalse(Wildcards.matches(\"testString\", null));\nassertFalse(Wildcards.matches(null, null));\nassertTrue(Wildcards.matches(\"abcdef\", \"aSTRef\"));\nassertTrue(Wildcards.matches(\"abcdef\", \"aSTR*\"));\nassertTrue(Wildcards.matches(\"abcdef\", \"*STRef\"));\nassertFalse(Wildcards.matches(\"abcdef\", \"xyzSTR\"));\n```\n====================\n\n",
    "scores": [
        0.87,
        0.86,
        0.833,
        0.809,
        0.8,
        0.8,
        0.796,
        0.791,
        0.787,
        0.777,
        0.773,
        0.771,
        0.766,
        0.763,
        0.758,
        0.75,
        0.747,
        0.731,
        0.703,
        0.699,
        0.0
    ],
    "ground_truth": "assertTrue(Wildcards.matches(\"STR\",\"STR\"));"
}