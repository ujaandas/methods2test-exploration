{
    "prompt": "Below is the focal class and test class for reference:\n\npackage basis-technology-corp.tcl-regex-java;\n\npublic class Matcher {\nboolean lookingAt ( ) ;\n}\n\npackage basis-technology-corp.tcl-regex-java;\n\npublic class MatcherTest {\n@Test\npublic void lookingAtPrefix ( ) throws Exception {\nRePattern pattern = HsrePattern . compile ( \"STR\" , PatternFlags . ADVANCED ) ;\nReMatcher matcher = pattern . matcher ( \"STR\" ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nassertTrue(matcher.lookingAt());\nassertEquals(0, matcher.start());\nassertEquals(3, matcher.end());\nassertFalse(matcher.lookingAt(\"S\"));\nassertFalse(matcher.lookingAt(\"STRINGS\"));\nassertTrue(matcher.lookingAt(\"STR\"));\nassertFalse(matcher.lookingAt(\"T\"));\nassertFalse(matcher.lookingAt(\"STRTEST\"));\nassertEquals(\"STR\", matcher.group());\nassertTrue(matcher.lookingAt(\"STRING\"));\nassertFalse(matcher.lookingAt(\"R\"));\nassertEquals(0, matcher.start(\"STR\"));\nassertEquals(3, matcher.end(\"STR\"));\nassertTrue(matcher.lookingAt(\"STR\"));\nassertFalse(matcher.lookingAt(\"\"));\nassertTrue(matcher.lookingAt(\"STR \"));\nassertFalse(matcher.lookingAt(\"ST\"));\nassertTrue(matcher.lookingAt(\"STR123\"));\nassertFalse(matcher.lookingAt(\"123STR\"));\nassertEquals(0, matcher.start(0));\nassertEquals(3, matcher.end(0));\nassertTrue(matcher.lookingAt(\"STRabc\"));\n```\n====================\n\n",
    "scores": [
        0.925,
        0.925,
        0.925,
        0.886,
        0.886,
        0.886,
        0.886,
        0.862,
        0.848,
        0.848,
        0.848,
        0.836,
        0.789,
        0.778,
        0.778,
        0.667,
        0.656,
        0.645,
        0.635,
        0.615,
        0.597,
        0.576,
        0.0
    ],
    "ground_truth": "assertTrue(matcher.lookingAt());"
}