{
    "prompt": "Below is the focal class and test class for reference:\n\npackage adlnet.jxapi;\n\npublic class ActivityProfile {\npublic String getActivityId ( ) {\nreturn activityId ;\n}\n}\n\npackage adlnet.jxapi;\n\npublic class ActivityProfileTest {\n@Test\npublic void testGetActivityId ( ) {\nString expected = \"STR\" ;\nString actual = activityProfile . getActivityId ( ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nassertNotNull(actual);\nassertEquals(expected, actual);\nassertTrue(actual instanceof String);\nassertFalse(actual.isEmpty());\nassertEquals(3, actual.length());\nassertEquals(\"S\", String.valueOf(actual.charAt(0)));\nassertEquals(\"T\", String.valueOf(actual.charAt(1)));\nassertEquals(\"R\", String.valueOf(actual.charAt(2)));\nassertEquals(\"STR\", actual.toUpperCase());\nassertEquals(expected.toLowerCase(), actual.toLowerCase());\nassertSame(expected, actual);\nassertNotSame(new String(\"STR\"), actual);\nassertThat(actual, is(not(emptyOrNullString())));\nassertThat(actual, matchesPattern(\"STR\"));\nassertThat(actual, containsString(\"R\"));\nassertThat(actual, startsWith(\"S\"));\nassertThat(actual, endsWith(\"R\"));\nassertThat(actual.length(), is(3));\nassertThat(actual, isA(String.class));\nassertTrue(actual.equals(expected));\nassertFalse(actual.equals(\"DifferentString\"));\nassertEquals(\"STR\", actual.trim());\n```\n====================\n\n",
    "scores": [
        0.84,
        0.615,
        0.6,
        0.593,
        0.583,
        0.576,
        0.566,
        0.56,
        0.556,
        0.545,
        0.545,
        0.536,
        0.526,
        0.525,
        0.508,
        0.492,
        0.455,
        0.451,
        0.451,
        0.451,
        0.441,
        0.385,
        0.0
    ],
    "ground_truth": "assertNotNull(actual);"
}