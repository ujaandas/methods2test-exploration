{
    "prompt": "Below is the focal class and test class for reference:\n\npackage orientechnologies.orientdb.core;\n\npublic class OSelectStatementExecution {\n@Override\nboolean hasNext ( ) ;\n}\n\npackage orientechnologies.orientdb.core;\n\npublic class OSelectStatementExecutionTest {\n@Test\npublic void testFetchFromSingleRid ( ) {\nOResultSet result = db . query ( \"STR\" ) ;\nprintExecutionPlan ( result ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nassertNotNull(result);\nassertTrue(result.hasNext());\nassertEquals(1, result.getTotalRecords());\nassertEquals(\"expectedValue1\", result.next().getProperty(\"propertyName1\"));\nassertEquals(\"expectedValue2\", result.next().getProperty(\"propertyName2\"));\nassertFalse(result.hasNext());\nresult.close();\n\nOResultSet result2 = db.query(\"ANOTHER_QUERY\");\nassertNotNull(result2);\nassertTrue(result2.hasNext());\nassertEquals(2, result2.getTotalRecords());\nassertEquals(\"expectedValue3\", result2.next().getProperty(\"propertyName3\"));\nassertEquals(\"expectedValue4\", result2.next().getProperty(\"propertyName4\"));\nassertFalse(result2.hasNext());\nresult2.close();\n\nOResultSet result3 = db.query(\"YET_ANOTHER_QUERY\");\nassertNotNull(result3);\nassertTrue(result3.hasNext());\nassertEquals(3, result3.getTotalRecords());\nassertEquals(\"expectedValue5\", result3.next().getProperty(\"propertyName5\"));\nassertTrue(result3.hasNext());\nassertEquals(\"expectedValue6\", result3.next().getProperty(\"propertyName6\"));\nassertFalse(result3.hasNext());\nresult3.close();\n\nOResultSet emptyResult = db.query(\"EMPTY_QUERY\");\nassertNotNull(emptyResult);\nassertFalse(emptyResult.hasNext());\nassertEquals(0, emptyResult.getTotalRecords());\nemptyResult.close();\n```\n====================\n\n",
    "scores": [
        1.0,
        0.982,
        0.982,
        0.982,
        0.877,
        0.862,
        0.862,
        0.774,
        0.6,
        0.6,
        0.588,
        0.58,
        0.58,
        0.526,
        0.524,
        0.521,
        0.519,
        0.512,
        0.512,
        0.511,
        0.416,
        0.416,
        0.412,
        0.412,
        0.412,
        0.412,
        0.338,
        0.32,
        0.247,
        0.0
    ],
    "ground_truth": "Assert.assertTrue(result.hasNext());"
}