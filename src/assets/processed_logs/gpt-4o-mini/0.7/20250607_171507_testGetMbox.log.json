{
    "prompt": "Below is the focal class and test class for reference:\n\npackage adlnet.jxapi;\n\npublic class Actor {\npublic String getMbox ( ) {\nreturn mbox ;\n}\n}\n\npackage adlnet.jxapi;\n\npublic class ActorTest {\n@Test\npublic void testGetMbox ( ) {\nString expected = MBOX ;\nString actual = agent . getMbox ( ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nassertEquals(expected, actual);\nassertNotNull(actual);\nassertTrue(actual instanceof String);\nassertFalse(actual.isEmpty());\nassertEquals(\"Expected MBOX format\", \"mailto:example@example.com\", actual);\nassertNotSame(\"Different instances should not be the same\", expected, actual);\nassertTrue(\"Actual MBOX should contain @\", actual.contains(\"@\"));\nassertTrue(\"Actual MBOX should start with mailto:\", actual.startsWith(\"mailto:\"));\nassertFalse(\"Actual MBOX should not be blank\", actual.trim().isEmpty());\nassertEquals(\"MBOX length should be greater than 5\", true, actual.length() > 5);\nassertTrue(\"MBOX should not contain spaces\", !actual.contains(\" \"));\nassertEquals(\"MBOX should end with .com\", true, actual.endsWith(\".com\"));\nassertTrue(\"Actual MBOX should match regex\", actual.matches(\"mailto:[\\\\w.%+-]+@[\\\\w.-]+\\\\.[a-zA-Z]{2,}\"));\nassertNotEquals(\"MBOX should not be null\", null, actual);\nassertEquals(\"MBOX should not be 'undefined'\", \"undefined\", actual);\nassertSame(\"The expected and actual MBOX should reference the same object\", expected, actual);\nassertTrue(\"Actual MBOX should contain 'example'\", actual.contains(\"example\"));\nassertEquals(\"MBOX should be equal to expected value\", expected, actual);\nassertTrue(\"Actual MBOX should not be empty\", !actual.isEmpty());\nassertFalse(\"Actual MBOX should not be 'null'\", actual.equals(\"null\"));\n```\n====================\n\n",
    "scores": [
        1.0,
        0.6,
        0.545,
        0.535,
        0.483,
        0.424,
        0.4,
        0.4,
        0.4,
        0.39,
        0.38,
        0.374,
        0.372,
        0.368,
        0.366,
        0.362,
        0.356,
        0.354,
        0.311,
        0.264,
        0.0
    ],
    "ground_truth": "assertNotNull(actual);"
}