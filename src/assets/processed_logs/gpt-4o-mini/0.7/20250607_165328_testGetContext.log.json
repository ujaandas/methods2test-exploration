{
    "prompt": "Below is the focal class and test class for reference:\n\npackage adlnet.jxapi;\n\npublic class SubStatement {\npublic Context getContext ( ) {\nreturn context ;\n}\n}\n\npackage adlnet.jxapi;\n\npublic class SubStatementTest {\n@Test\npublic void testGetContext ( ) {\nContext expected = context ;\nContext actual = substatement . getContext ( ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nassertNotNull(actual);\nassertEquals(expected, actual);\nassertSame(expected, actual);\nassertNotSame(new Context(), actual);\nassertTrue(expected.equals(actual));\nassertFalse(expected != null && actual == null);\nassertTrue(expected instanceof Context);\nassertFalse(actual instanceof String);\nassertEquals(expected.hashCode(), actual.hashCode());\nassertThat(actual, is(expected));\nassertThat(actual, is(notNullValue()));\nassertThat(actual, is(instanceOf(Context.class)));\nassertThat(actual, is(sameInstance(expected)));\nassertThat(actual, is(not(sameInstance(new Context()))));\nassertThat(actual, is(equalTo(expected)));\nassertThat(actual.toString(), is(notNullValue()));\nassertThat(actual, is(not(equalTo(new Context()))));\nassertTrue(expected.equals(actual) || !expected.equals(actual));\nassertFalse(actual.equals(null));\nassertThat(actual, allOf(is(expected), is(notNullValue())));\nassertThat(actual, anyOf(is(expected), is(notNullValue())));\n```\n====================\n\n",
    "scores": [
        0.84,
        0.618,
        0.607,
        0.583,
        0.577,
        0.566,
        0.56,
        0.548,
        0.536,
        0.517,
        0.492,
        0.455,
        0.435,
        0.435,
        0.429,
        0.417,
        0.415,
        0.414,
        0.4,
        0.385,
        0.385,
        0.0
    ],
    "ground_truth": "assertNotNull(actual);"
}