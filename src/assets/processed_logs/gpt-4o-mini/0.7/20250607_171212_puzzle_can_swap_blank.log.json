{
    "prompt": "Below is the focal class and test class for reference:\n\npackage TeachingKidsProgramming.TeachingKidsProgramming.Source.Java;\n\npublic class Puzzle {\npublic int getBlankIndex ( ) {\nfor ( int i = 0 ;\ni < cells . length ;\ni ++ ) {\nif ( cells [ i ] == blank ) {\nreturn i ;\n} } return - 1 ;\n}\n}\n\npackage TeachingKidsProgramming.TeachingKidsProgramming.Source.Java;\n\npublic class PuzzleTest {\n@Test\npublic void puzzle_can_swap_blank ( ) {\nPuzzle p = new Puzzle ( getSolution ( ) ) ;\nPuzzle c = p . swapBlank ( 4 ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nassertNotNull(c);\nassertNotSame(p, c);\nassertArrayEquals(new int[] {1, 2, 3, 4, blank}, c.getCells());\nassertEquals(4, c.getBlankIndex());\nassertEquals(1, c.getCell(0));\nassertEquals(2, c.getCell(1));\nassertEquals(3, c.getCell(2));\nassertEquals(4, c.getCell(3));\nassertEquals(blank, c.getCell(4));\nassertEquals(p.getCell(4), c.getCell(3));\nassertEquals(p.getCell(3), c.getCell(4));\nassertTrue(c.isValid());\nassertFalse(c.isSolved());\nassertEquals(p.getBlankIndex(), c.getBlankIndex() + 1);\nassertNotEquals(p.getCells(), c.getCells());\nassertTrue(c.hasMoved());\nassertFalse(c.isSameAs(p));\nassertEquals(5, c.getCells().length);\nassertEquals(p.getCell(0), c.getCell(0));\nassertEquals(p.getCell(1), c.getCell(1));\nassertEquals(p.getCell(2), c.getCell(2));\nassertEquals(p.getCell(3), c.getCell(3));\n```\n====================\n\n",
    "scores": [
        1.0,
        0.787,
        0.762,
        0.754,
        0.754,
        0.754,
        0.708,
        0.676,
        0.667,
        0.639,
        0.639,
        0.639,
        0.639,
        0.639,
        0.613,
        0.586,
        0.545,
        0.542,
        0.526,
        0.464,
        0.431,
        0.386,
        0.0
    ],
    "ground_truth": "assertEquals(4,c.getBlankIndex());"
}