{
    "prompt": "Below is the focal class and test class for reference:\n\npackage trautonen.coveralls-maven-plugin;\n\npublic class HttpClientFactory {\npublic HttpClient create ( ) {\nreturn hcb . setDefaultRequestConfig ( rcb . build ( ) ) . build ( ) ;\n}\n}\n\npackage trautonen.coveralls-maven-plugin;\n\npublic class HttpClientFactoryTest {\n@Test\npublic void testNonProxiedHostRequest ( ) throws Exception {\ntargetServer . stubFor ( get ( urlMatching ( \"STR\" ) ) . willReturn ( aResponse ( ) . withBody ( \"STR\" ) ) ) ;\nproxyServer . stubFor ( get ( urlMatching ( \"STR\" ) ) . willReturn ( aResponse ( ) . withBody ( \"STR\" ) ) ) ;\nProxy proxy = new Proxy ( ) ;\nproxy . setHost ( \"STR\" ) ;\nproxy . setPort ( PROXY_PORT ) ;\nproxy . setProtocol ( \"STR\" ) ;\nproxy . setNonProxyHosts ( \"STR\" ) ;\nHttpClient client = new HttpClientFactory ( TARGET_URL ) . proxy ( proxy ) . create ( ) ;\nString body = EntityUtils . toString ( client . execute ( new HttpGet ( TARGET_URL ) ) . getEntity ( ) ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nassertNotNull(body);\nassertEquals(\"STR\", body);\nassertEquals(\"application/json\", response.getContentType());\nassertTrue(body.contains(\"STR\"));\nassertFalse(body.isEmpty());\nassertEquals(200, response.getStatusLine().getStatusCode());\nassertTrue(EntityUtils.toString(response.getEntity()).length() > 0);\nassertThat(body, containsString(\"expectedString\"));\nassertThat(response.getAllHeaders(), hasItem(new Header(\"Content-Type\", \"application/json\")));\nassertThat(response.getStatusLine().getStatusCode(), is(equalTo(200)));\nassertNotNull(response.getEntity());\nassertTrue(response.getEntity().getContentLength() > 0);\nassertEquals(\"STR\", EntityUtils.toString(response.getEntity()).trim());\nassertTrue(response.getEntity().getContentType().getValue().contains(\"application/json\"));\nassertThat(response.getStatusLine().getReasonPhrase(), is(equalTo(\"OK\")));\nassertNotNull(client);\nassertTrue(client instanceof HttpClient);\nassertThat(proxy.getHost(), is(equalTo(\"STR\")));\nassertThat(proxy.getPort(), is(equalTo(PROXY_PORT)));\nassertTrue(proxy.getNonProxyHosts().contains(\"STR\"));\nassertFalse(client.isAborted());\n```\n====================\n\n",
    "scores": [
        1.0,
        0.588,
        0.571,
        0.549,
        0.509,
        0.486,
        0.473,
        0.463,
        0.444,
        0.421,
        0.415,
        0.356,
        0.347,
        0.323,
        0.305,
        0.292,
        0.292,
        0.281,
        0.26,
        0.258,
        0.248,
        0.0
    ],
    "ground_truth": "Assert.assertEquals(\"STR\",body);"
}