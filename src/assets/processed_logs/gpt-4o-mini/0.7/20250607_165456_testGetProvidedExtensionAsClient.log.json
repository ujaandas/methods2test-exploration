{
    "prompt": "Below is the focal class and test class for reference:\n\npackage TooTallNate.Java-WebSocket;\n\npublic class DefaultExtension {\n@Override\npublic String getProvidedExtensionAsClient ( ) {\nreturn \"STR\" ;\n}\n}\n\npackage TooTallNate.Java-WebSocket;\n\npublic class DefaultExtensionTest {\n@Test\npublic void testGetProvidedExtensionAsClient ( ) throws Exception {\nDefaultExtension defaultExtension = new DefaultExtension ( ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nassertNotNull(defaultExtension);\nassertEquals(\"STR\", defaultExtension.getProvidedExtensionAsClient());\nassertTrue(defaultExtension.getProvidedExtensionAsClient() instanceof String);\nassertFalse(defaultExtension.getProvidedExtensionAsClient().isEmpty());\nassertEquals(3, defaultExtension.getProvidedExtensionAsClient().length());\nassertEquals(\"STR\", defaultExtension.getProvidedExtensionAsClient().toUpperCase());\nassertNotEquals(\"str\", defaultExtension.getProvidedExtensionAsClient());\nassertNotEquals(\"SRT\", defaultExtension.getProvidedExtensionAsClient());\nassertEquals(\"S\", defaultExtension.getProvidedExtensionAsClient().substring(0, 1));\nassertEquals(\"R\", defaultExtension.getProvidedExtensionAsClient().substring(1, 2));\nassertEquals(\"T\", defaultExtension.getProvidedExtensionAsClient().substring(2, 3));\nassertTrue(defaultExtension.getProvidedExtensionAsClient().contains(\"S\"));\nassertTrue(defaultExtension.getProvidedExtensionAsClient().contains(\"R\"));\nassertTrue(defaultExtension.getProvidedExtensionAsClient().contains(\"T\"));\nassertSame(\"STR\", defaultExtension.getProvidedExtensionAsClient());\nassertNotSame(\"\", defaultExtension.getProvidedExtensionAsClient());\nassertNotSame(null, defaultExtension.getProvidedExtensionAsClient());\nassertEquals(\"STR\", String.valueOf(defaultExtension.getProvidedExtensionAsClient()));\nassertTrue(defaultExtension.getProvidedExtensionAsClient().matches(\"[A-Z]{3}\"));\nassertEquals(defaultExtension.getProvidedExtensionAsClient().toLowerCase(), \"str\".toLowerCase());\nassertEquals(\"STR\".length(), defaultExtension.getProvidedExtensionAsClient().length());\n```\n====================\n\n",
    "scores": [
        1.0,
        0.964,
        0.939,
        0.934,
        0.905,
        0.894,
        0.893,
        0.892,
        0.884,
        0.884,
        0.884,
        0.882,
        0.851,
        0.847,
        0.8,
        0.8,
        0.8,
        0.789,
        0.767,
        0.753,
        0.491,
        0.0
    ],
    "ground_truth": "assertEquals(\"STR\",defaultExtension.getProvidedExtensionAsClient());"
}