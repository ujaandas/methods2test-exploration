{
    "prompt": "Below is the focal class and test class for reference:\n\npackage adlnet.jxapi;\n\npublic class Attachment {\npublic URI getUsageType ( ) {\nreturn usageType ;\n}\n}\n\npackage adlnet.jxapi;\n\npublic class AttachmentTest {\n@Test\npublic void testGetUsageType ( ) throws URISyntaxException {\nURI expected = new URI ( \"STR\" ) ;\nattachment . setUsageType ( expected ) ;\nURI actual = attachment . getUsageType ( ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nassertNotNull(actual);\nassertEquals(expected, actual);\nassertTrue(actual instanceof URI);\nassertEquals(\"STR\", actual.toString());\nassertNotSame(new URI(\"DIFF\"), actual);\nassertSame(expected, actual);\nassertThat(actual, is(expected));\nassertThat(actual, equalTo(expected));\nassertThat(actual, notNullValue());\nassertThat(actual.toString(), is(\"STR\"));\nassertThat(actual, isA(URI.class));\nassertTrue(actual.equals(expected));\nassertFalse(actual.equals(new URI(\"DIFF\")));\nassertThat(actual.toString(), containsString(\"STR\"));\nassertThat(actual.hashCode(), is(expected.hashCode()));\nassertThat(actual.toString(), startsWith(\"STR\"));\nassertThat(actual.toString(), endsWith(\"STR\"));\nassertThat(actual.toString(), matches(\".*STR.*\"));\nassertThat(actual, allOf(notNullValue(), is(expected)));\nassertThat(actual, anyOf(is(expected), is(new URI(\"ANOTHER\"))));\nassertTrue(expected.equals(actual));\n```\n====================\n\n",
    "scores": [
        0.84,
        0.607,
        0.596,
        0.583,
        0.577,
        0.577,
        0.56,
        0.556,
        0.556,
        0.552,
        0.536,
        0.526,
        0.5,
        0.476,
        0.455,
        0.441,
        0.435,
        0.417,
        0.405,
        0.405,
        0.37,
        0.0
    ],
    "ground_truth": "assertNotNull(actual);"
}