{
    "prompt": "Below is the focal class and test class for reference:\n\npackage trautonen.coveralls-maven-plugin;\n\npublic class UrlUtils {\npublic static URL create ( final String url ) {\ntry {\nreturn new URL ( url ) ;\n} catch ( MalformedURLException ex ) {\nthrow new IllegalArgumentException ( ex ) ;\n} }\n}\n\npackage trautonen.coveralls-maven-plugin;\n\npublic class UrlUtilsTest {\n@Test\npublic void testCreateValidUrl ( ) throws Exception {\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nURL validUrl1 = UrlUtils.create(\"http://www.example.com\");\nassertEquals(\"http://www.example.com\", validUrl1.toString());\n\nURL validUrl2 = UrlUtils.create(\"https://www.example.com\");\nassertEquals(\"https://www.example.com\", validUrl2.toString());\n\nURL validUrl3 = UrlUtils.create(\"ftp://ftp.example.com\");\nassertEquals(\"ftp://ftp.example.com\", validUrl3.toString());\n\nURL validUrl4 = UrlUtils.create(\"http://localhost:8080\");\nassertEquals(\"http://localhost:8080\", validUrl4.toString());\n\nURL validUrl5 = UrlUtils.create(\"https://example.com/path/to/resource\");\nassertEquals(\"https://example.com/path/to/resource\", validUrl5.toString());\n\nURL validUrl6 = UrlUtils.create(\"http://www.example.com:80\");\nassertEquals(\"http://www.example.com:80\", validUrl6.toString());\n\nURL validUrl7 = UrlUtils.create(\"mailto:test@example.com\");\nassertEquals(\"mailto:test@example.com\", validUrl7.toString());\n\nURL validUrl8 = UrlUtils.create(\"file:///path/to/file.txt\");\nassertEquals(\"file:///path/to/file.txt\", validUrl8.toString());\n\nURL validUrl9 = UrlUtils.create(\"http://example.com?query=parameter\");\nassertEquals(\"http://example.com?query=parameter\", validUrl9.toString());\n\nURL validUrl10 = UrlUtils.create(\"http://example.com#fragment\");\nassertEquals(\"http://example.com#fragment\", validUrl10.toString());\n\nURL validUrl11 = UrlUtils.create(\"https://subdomain.example.com\");\nassertEquals(\"https://subdomain.example.com\", validUrl11.toString());\n\nURL validUrl12 = UrlUtils.create(\"http://example.com:8080/path\");\nassertEquals(\"http://example.com:8080/path\", validUrl12.toString());\n\nURL validUrl13 = UrlUtils.create(\"https://example.com/path?query=value\");\nassertEquals(\"https://example.com/path?query=value\", validUrl13.toString());\n\nURL validUrl14 = UrlUtils.create(\"http://192.168.1.1\");\nassertEquals(\"http://192.168.1.1\", validUrl14.toString());\n\nURL validUrl15 = UrlUtils.create(\"http://[::1]\");\nassertEquals(\"http://[::1]\", validUrl15.toString());\n\nURL validUrl16 = UrlUtils\n====================\n\n",
    "scores": [
        0.534,
        0.508,
        0.5,
        0.5,
        0.496,
        0.492,
        0.492,
        0.488,
        0.484,
        0.473,
        0.47,
        0.466,
        0.453,
        0.446,
        0.443,
        0.378,
        0.359,
        0.353,
        0.353,
        0.347,
        0.347,
        0.344,
        0.344,
        0.341,
        0.333,
        0.331,
        0.328,
        0.318,
        0.313,
        0.311,
        0.227
    ],
    "ground_truth": "assertEquals(\"STR\",UrlUtils.create(\"STR\").toURI().toASCIIString());"
}