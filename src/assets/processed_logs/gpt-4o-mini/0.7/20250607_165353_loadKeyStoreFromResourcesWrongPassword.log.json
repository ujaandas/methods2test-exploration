{
    "prompt": "Below is the focal class and test class for reference:\n\npackage NanoHttpd.nanohttpd.core;\n\npublic class LoadKeyStore {\npublic static SSLServerSocketFactory makeSSLSocketFactory ( String keyAndTrustStoreClasspathPath , char [ ] passphrase ) throws IOException {\ntry {\nKeyStore keystore = KeyStore . getInstance ( KeyStore . getDefaultType ( ) ) ;\nInputStream keystoreStream = NanoHTTPD . class . getResourceAsStream ( keyAndTrustStoreClasspathPath ) ;\nif ( keystoreStream == null ) {\nthrow new IOException ( \"STR\" + keyAndTrustStoreClasspathPath ) ;\n} keystore . load ( keystoreStream , passphrase ) ;\nKeyManagerFactory keyManagerFactory = KeyManagerFactory . getInstance ( KeyManagerFactory . getDefaultAlgorithm ( ) ) ;\nkeyManagerFactory . init ( keystore , passphrase ) ;\nreturn makeSSLSocketFactory ( keystore , keyManagerFactory ) ;\n} catch ( Exception e ) {\nthrow new IOException ( e . getMessage ( ) ) ;\n} }\n}\n\npackage NanoHttpd.nanohttpd.core;\n\npublic class LoadKeyStoreTest {\n@Test\npublic void loadKeyStoreFromResourcesWrongPassword ( ) throws Exception {\nString keyStorePath = \"STR\" ;\nInputStream resourceAsStream = this . getClass ( ) . getResourceAsStream ( keyStorePath ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nassertNotNull(resourceAsStream);\nassertThrows(IOException.class, () -> LoadKeyStore.makeSSLSocketFactory(keyStorePath, \"wrongPassword\".toCharArray()));\nassertThrows(IOException.class, () -> LoadKeyStore.makeSSLSocketFactory(keyStorePath, new char[]{}));\nassertThrows(IOException.class, () -> LoadKeyStore.makeSSLSocketFactory(null, \"wrongPassword\".toCharArray()));\nassertThrows(IOException.class, () -> LoadKeyStore.makeSSLSocketFactory(keyStorePath, null));\nassertThrows(IOException.class, () -> LoadKeyStore.makeSSLSocketFactory(\"invalidPath\", \"wrongPassword\".toCharArray()));\nassertThrows(IOException.class, () -> LoadKeyStore.makeSSLSocketFactory(\"nonExistingPath\", \"wrongPassword\".toCharArray()));\n\nassertTrue(resourceAsStream.available() > 0);\nassertTrue(keyStorePath.endsWith(\"STR\"));\nassertNotEquals(\"validPassword\", \"wrongPassword\");\n\nassertDoesNotThrow(() -> LoadKeyStore.makeSSLSocketFactory(\"STR\", \"validPassword\".toCharArray()));\nassertTrue(LoadKeyStore.class.getDeclaredMethods().length > 0);\nassertFalse(LoadKeyStore.class.getDeclaredFields().length == 0);\nassertTrue(LoadKeyStore.class.getDeclaredConstructors().length == 0);\nassertEquals(\"STR\", keyStorePath);\nassertNotEquals(\"wrongPassword\", \"validPassword\");\n\nassertFalse(resourceAsStream.markSupported());\nassertTrue(LoadKeyStore.class.isAnnotationPresent(Deprecated.class));\nassertFalse(LoadKeyStore.class.isAnnotationPresent(Override.class));\nassertTrue(LoadKeyStore.makeSSLSocketFactory(\"STR\", \"validPassword\".toCharArray()) instanceof SSLServerSocketFactory);\n```\n====================\n\n",
    "scores": [
        0.886,
        0.685,
        0.658,
        0.43,
        0.354,
        0.351,
        0.349,
        0.343,
        0.338,
        0.333,
        0.33,
        0.326,
        0.306,
        0.304,
        0.292,
        0.262,
        0.262,
        0.255,
        0.202,
        0.191,
        0.0
    ],
    "ground_truth": "assertNotNull(resourceAsStream);"
}