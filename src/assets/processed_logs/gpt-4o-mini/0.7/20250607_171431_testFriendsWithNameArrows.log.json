{
    "prompt": "Below is the focal class and test class for reference:\n\npackage orientechnologies.orientdb.graphdb;\n\npublic class OMatchStatementExecution {\n< RET > RET execute ( Object ... iArgs ) ;\n}\n\npackage orientechnologies.orientdb.graphdb;\n\npublic class OMatchStatementExecutionTest {\n@Test\npublic void testFriendsWithNameArrows ( ) throws Exception {\nList < ODocument > qResult = db . command ( new OCommandSQL ( \"STR\" ) ) . execute ( ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nassertNotNull(qResult);\nassertFalse(qResult.isEmpty());\nassertEquals(expectedSize, qResult.size());\nassertEquals(expectedName, qResult.get(0).field(\"name\"));\nassertEquals(expectedAge, qResult.get(0).field(\"age\"));\nassertTrue(qResult.stream().allMatch(doc -> doc.field(\"relationship\").equals(\"friend\")));\nassertTrue(qResult.stream().anyMatch(doc -> doc.field(\"name\").equals(\"Alice\")));\nassertTrue(qResult.stream().anyMatch(doc -> doc.field(\"name\").equals(\"Bob\")));\nassertEquals(expectedCity, qResult.get(0).field(\"city\"));\nassertEquals(expectedCountry, qResult.get(0).field(\"country\"));\nassertNotNull(qResult.get(0).field(\"friends\"));\nassertTrue(qResult.get(0).field(\"friends\").size() > 0);\nassertTrue(qResult.get(0).field(\"friends\").contains(expectedFriendName));\nassertFalse(qResult.get(0).field(\"friends\").contains(unexpectedFriendName));\nassertEquals(expectedCount, qResult.stream().filter(doc -> doc.field(\"active\").equals(true)).count());\nassertEquals(expectedJobTitle, qResult.get(0).field(\"jobTitle\"));\nassertTrue(qResult.stream().allMatch(doc -> doc.field(\"status\").equals(\"active\")));\nassertTrue(qResult.stream().anyMatch(doc -> doc.field(\"name\").startsWith(\"J\")));\nassertTrue(qResult.stream().anyMatch(doc -> doc.field(\"id\") != null));\nassertEquals(expectedEmail, qResult.get(0).field(\"email\"));\nassertTrue(qResult.stream().noneMatch(doc -> doc.field(\"deleted\").equals(true)));\n```\n====================\n\n",
    "scores": [
        0.817,
        0.733,
        0.651,
        0.635,
        0.635,
        0.621,
        0.593,
        0.581,
        0.567,
        0.561,
        0.526,
        0.442,
        0.438,
        0.438,
        0.412,
        0.4,
        0.393,
        0.393,
        0.389,
        0.382,
        0.362,
        0.0
    ],
    "ground_truth": "assertEquals(1,qResult.size());"
}