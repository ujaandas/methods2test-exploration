{
    "prompt": "Below is the focal class and test class for reference:\n\npackage adlnet.jxapi;\n\npublic class ActivityState {\npublic Agent getAgent ( ) {\nreturn this . agent ;\n}\n}\n\npackage adlnet.jxapi;\n\npublic class ActivityStateTest {\n@Test\npublic void testSetAgent ( ) {\nAgent expected = new Agent ( ) ;\nexpected . setMbox ( \"STR\" ) ;\nactivityState . setAgent ( expected ) ;\nAgent actual = activityState . getAgent ( ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nassertNotNull(actual);\nassertEquals(expected.getMbox(), actual.getMbox());\nassertTrue(actual instanceof Agent);\nassertEquals(expected, actual);\nassertNotSame(expected, actual);\nassertEquals(\"STR\", actual.getMbox());\nassertNotNull(activityState.getAgent());\nassertSame(expected, actual);\nassertFalse(actual.equals(new Agent()));\nassertTrue(expected.equals(actual));\nassertEquals(expected.hashCode(), actual.hashCode());\nassertNotEquals(new Agent(), actual);\nassertEquals(expected.toString(), actual.toString());\nassertArrayEquals(new String[] { \"STR\" }, new String[] { actual.getMbox() });\nassertTrue(expected.getMbox().length() > 0);\nassertFalse(expected.getMbox().isEmpty());\nassertEquals(3, expected.getMbox().length());\nassertTrue(actual.getMbox().startsWith(\"S\"));\nassertFalse(actual.getMbox().endsWith(\"X\"));\nassertSame(activityState.getAgent(), actual);\nassertThrows(NullPointerException.class, () -> activityState.setAgent(null));\n```\n====================\n\n",
    "scores": [
        0.84,
        0.691,
        0.667,
        0.633,
        0.607,
        0.583,
        0.561,
        0.56,
        0.556,
        0.508,
        0.469,
        0.469,
        0.462,
        0.444,
        0.429,
        0.417,
        0.387,
        0.383,
        0.355,
        0.318,
        0.312,
        0.0
    ],
    "ground_truth": "assertNotNull(actual);"
}