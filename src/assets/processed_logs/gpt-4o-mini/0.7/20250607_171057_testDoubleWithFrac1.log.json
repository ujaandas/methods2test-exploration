{
    "prompt": "Below is the focal class and test class for reference:\n\npackage arnohaase.a-foundation.a-foundation;\n\npublic class AJsonSerHelper {\npublic void writeNumberLiteral ( double value , int numFracDigits ) throws IOException {\ncheckAcceptsValueAndPrefixComma ( ) ;\nout . write ( new DecimalFormat ( PATTERNS [ numFracDigits ] , DECIMAL_FORMAT_SYMBOLS ) . format ( value ) ) ;\nafterValueWritten ( ) ;\n}\n}\n\npackage arnohaase.a-foundation.a-foundation;\n\npublic class AJsonSerHelperTest {\n@Test\npublic void testDoubleWithFrac1 ( ) throws IOException {\nfinal ByteArrayOutputStream baos = new ByteArrayOutputStream ( ) ;\nfinal AJsonSerHelper ser = new AJsonSerHelper ( baos ) ;\nser . writeNumberLiteral ( 1.23 , 1 ) ;\nfinal String result = new String ( baos . toByteArray ( ) , \"STR\" ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nassertEquals(\"1.2\", result);\nassertNotNull(result);\nassertTrue(result instanceof String);\nassertFalse(result.isEmpty());\nassertEquals(3, result.length());\nassertTrue(result.contains(\".\"));\nassertFalse(result.contains(\",\"));\nassertTrue(result.startsWith(\"1\"));\nassertTrue(result.endsWith(\"2\"));\nassertEquals(\"1.2\", result.trim());\nassertNotEquals(\"1.23\", result);\nassertTrue(result.matches(\"\\\\d\\\\.\\\\d\"));\nassertFalse(result.matches(\"\\\\d{1,2}\\\\.\\\\d{2}\"));\nassertTrue(result.indexOf('.') == 1);\nassertTrue(result.indexOf('2') == 2);\nassertTrue(result.contains(\"1.2\") && result.length() == 3);\nassertEquals(\"1.2\", new DecimalFormat(\"#.#\").format(1.23));\nassertFalse(result.equals(\"1.20\"));\nassertTrue(result.equals(new String(new char[]{ '1', '.', '2' })));\nassertEquals(result, result.trim());\nassertEquals(\"1.2\", result.replace(\" \", \"\"));\n```\n====================\n\n",
    "scores": [
        0.821,
        0.78,
        0.767,
        0.737,
        0.7,
        0.687,
        0.681,
        0.618,
        0.576,
        0.517,
        0.517,
        0.5,
        0.5,
        0.5,
        0.5,
        0.5,
        0.463,
        0.462,
        0.459,
        0.375,
        0.349,
        0.0
    ],
    "ground_truth": "assertEquals(\"STR\",result);"
}