{
    "prompt": "Below is the focal class and test class for reference:\n\npackage DigitalPebble.storm-crawler.core;\n\npublic class StackOverflow {\npublic Metadata ( ) {\nmd = new HashMap < > ( ) ;\n}\n}\n\npackage DigitalPebble.storm-crawler.core;\n\npublic class StackOverflowTest {\n@Test\npublic void testNamespaceExtraction ( ) throws IOException {\nprepareParserBolt ( \"STR\" ) ;\nMetadata metadata = new Metadata ( ) ;\nparse ( \"STR\" , \"STR\" , metadata ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nassertNotNull(metadata);\nassertTrue(metadata.get(\"key1\").isEmpty());\nassertEquals(0, metadata.size());\nassertFalse(metadata.containsKey(\"unrelatedKey\"));\nassertNull(metadata.get(\"nonExistentKey\"));\nassertTrue(metadata.get(\"key2\").isEmpty());\nassertEquals(\"defaultValue\", metadata.getOrDefault(\"key3\", \"defaultValue\"));\nassertTrue(metadata.get(\"key4\").isEmpty());\nassertFalse(metadata.containsKey(\"key5\"));\nassertEquals(0, metadata.entrySet().size());\nassertTrue(metadata.keySet().isEmpty());\nassertTrue(metadata.values().isEmpty());\nassertNotEquals(\"unexpectedValue\", metadata.get(\"key6\"));\nassertTrue(metadata.get(\"key7\").isEmpty());\nassertNull(metadata.get(\"key8\"));\nassertFalse(metadata.containsValue(\"wrongValue\"));\nassertEquals(\"expectedValue\", metadata.getOrDefault(\"key9\", \"expectedValue\"));\nassertNotNull(metadata.get(\"key10\"));\nassertTrue(metadata.get(\"key11\").isEmpty());\nassertEquals(0, metadata.values().size());\nassertTrue(metadata.isEmpty());\nassertEquals(0, metadata.size());\n```\n====================\n\n",
    "scores": [
        0.69,
        0.685,
        0.685,
        0.683,
        0.476,
        0.474,
        0.469,
        0.462,
        0.452,
        0.452,
        0.452,
        0.452,
        0.447,
        0.444,
        0.435,
        0.434,
        0.432,
        0.42,
        0.418,
        0.41,
        0.396,
        0.356,
        0.0
    ],
    "ground_truth": "Assert.assertEquals(1,output.getEmitted().size());"
}