{
    "prompt": "Below is the focal class and test class for reference:\n\npackage hazelcast.hazelcast-simulator.simulator;\n\npublic class SimulatorAddress {\n@Override\npublic String toString ( ) {\nif ( addressLevel == COORDINATOR ) {\nreturn COORDINATOR_STRING ;\n} else if ( addressLevel == AGENT ) {\nreturn \"STR\" + agentIndex ;\n} else {\nreturn \"STR\" + agentIndex + \"STR\" + workerIndex ;\n} }\n}\n\npackage hazelcast.hazelcast-simulator.simulator;\n\npublic class SimulatorAddressTest {\n@Test\npublic void testToString_whenCoordinator ( ) {\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "```java\nSimulatorAddress address = new SimulatorAddress();\naddress.setAddressLevel(SimulatorAddress.COORDINATOR);\nassertEquals(\"COORDINATOR_STRING\", address.toString());\n\naddress.setAddressLevel(SimulatorAddress.AGENT);\naddress.setAgentIndex(1);\nassertEquals(\"STR1\", address.toString());\n\naddress.setAgentIndex(2);\nassertEquals(\"STR2\", address.toString());\n\naddress.setAddressLevel(SimulatorAddress.WORKER);\naddress.setAgentIndex(1);\naddress.setWorkerIndex(1);\nassertEquals(\"STR1STR1\", address.toString());\n\naddress.setWorkerIndex(2);\nassertEquals(\"STR1STR2\", address.toString());\n\naddress.setAgentIndex(2);\naddress.setWorkerIndex(1);\nassertEquals(\"STR2STR1\", address.toString());\n\naddress.setWorkerIndex(2);\nassertEquals(\"STR2STR2\", address.toString());\n\naddress.setAddressLevel(SimulatorAddress.COORDINATOR);\nassertEquals(\"COORDINATOR_STRING\", address.toString());\n\naddress.setAddressLevel(SimulatorAddress.AGENT);\naddress.setAgentIndex(3);\nassertEquals(\"STR3\", address.toString());\n\naddress.setAgentIndex(4);\nassertEquals(\"STR4\", address.toString());\n\naddress.setAddressLevel(SimulatorAddress.WORKER);\naddress.setAgentIndex(3);\naddress.setWorkerIndex(3);\nassertEquals(\"STR3STR3\", address.toString());\n\naddress.setWorkerIndex(4);\nassertEquals(\"STR3STR4\", address.toString());\n\naddress.setAgentIndex(4);\naddress.setWorkerIndex(3);\nassertEquals(\"STR4STR3\", address.toString());\n\naddress.setWorkerIndex(4);\nassertEquals(\"STR4STR4\", address.toString());\n\naddress.setAddressLevel(SimulatorAddress.COORDINATOR);\nassertEquals(\"COORDINATOR_STRING\", address.toString());\n\naddress.setAddressLevel(SimulatorAddress.AGENT);\naddress.setAgentIndex(5);\nassertEquals(\"STR5\", address.toString());\n\naddress.setAddressLevel(SimulatorAddress.WORKER);\naddress.setAgentIndex(5);\naddress.setWorkerIndex(5);\nassertEquals(\"STR5STR5\", address.toString());\n\naddress.setWorkerIndex(6);\nassertEquals(\"STR5STR6\", address.toString());\n\naddress.setAgentIndex(6);\naddress.setWorkerIndex(5);\nassertEquals(\"STR6STR5\", address.toString());\n\naddress.setWorkerIndex(6);\nassertEquals(\"STR6STR6\",\n====================\n\n",
    "scores": [
        0.844,
        0.844,
        0.844,
        0.844,
        0.844,
        0.809,
        0.809,
        0.809,
        0.809,
        0.809,
        0.809,
        0.809,
        0.809,
        0.809,
        0.809,
        0.809,
        0.731,
        0.731,
        0.731,
        0.507,
        0.388,
        0.388,
        0.388,
        0.384,
        0.384,
        0.384,
        0.365,
        0.365,
        0.365,
        0.365,
        0.24,
        0.24,
        0.24,
        0.24,
        0.24,
        0.24,
        0.24,
        0.24,
        0.24,
        0.24,
        0.24,
        0.237,
        0.237,
        0.237,
        0.237,
        0.237,
        0.237,
        0.237,
        0.237,
        0.237,
        0.237,
        0.237,
        0.237
    ],
    "ground_truth": "assertEquals(\"STR\",coordinatorAddress().toString());"
}