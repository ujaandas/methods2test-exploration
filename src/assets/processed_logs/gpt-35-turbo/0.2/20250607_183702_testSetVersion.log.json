{
    "prompt": "Below is the focal class and test class for reference:\n\npackage adlnet.jxapi;\n\npublic class Statement {\npublic String getVersion ( ) {\nreturn version ;\n}\n}\n\npackage adlnet.jxapi;\n\npublic class StatementTest {\n@Test\npublic void testSetVersion ( ) {\nString expected = \"STR\" ;\nstatement . setVersion ( expected ) ;\nString actual = statement . getVersion ( ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "Assert.assertEquals(expected, actual);\nAssert.assertNotNull(actual);\nAssert.assertNotEquals(\"Different version\", expected, actual);\nAssert.assertTrue(actual.contains(\"S\"));\nAssert.assertFalse(actual.isEmpty());\nAssert.assertNotSame(expected, actual);\nAssert.assertSame(expected, expected);\nAssert.assertTrue(actual.startsWith(\"S\"));\nAssert.assertTrue(actual.endsWith(\"R\"));\nAssert.assertEqualsIgnoreCase(expected, actual);\nAssert.assertTrue(actual.matches(\"[A-Z]+\"));\nAssert.assertNotEquals(\"Lowercase version\", expected.toLowerCase(), actual);\nAssert.assertTrue(actual.length() > 0);\nAssert.assertTrue(actual.equals(expected));\nAssert.assertNotEquals(\"Different length\", expected.length(), actual.length());\nAssert.assertTrue(actual.compareTo(expected) == 0);\nAssert.assertTrue(actual.compareToIgnoreCase(expected) == 0);\nAssert.assertTrue(actual.equalsIgnoreCase(expected));\nAssert.assertTrue(actual.toUpperCase().equals(expected));\nAssert.assertTrue(actual.trim().equals(expected));\n====================\n\n",
    "scores": [
        1.0,
        0.667,
        0.6,
        0.6,
        0.566,
        0.566,
        0.56,
        0.545,
        0.536,
        0.528,
        0.526,
        0.5,
        0.484,
        0.476,
        0.455,
        0.449,
        0.442,
        0.429,
        0.417,
        0.4
    ],
    "ground_truth": "assertNotNull(actual);"
}