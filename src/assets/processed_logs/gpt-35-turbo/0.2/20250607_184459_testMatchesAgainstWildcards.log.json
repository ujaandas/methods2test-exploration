{
    "prompt": "Below is the focal class and test class for reference:\n\npackage trautonen.coveralls-maven-plugin;\n\npublic class Wildcards {\npublic static boolean matches ( final String text , final String wildcard ) {\nString pattern = wildcard . replace ( \"STR\" , \"STR\" ) . replace ( \"STR\" , \"STR\" ) ;\nreturn ( text != null && text . matches ( pattern ) ) ;\n}\n}\n\npackage trautonen.coveralls-maven-plugin;\n\npublic class WildcardsTest {\n@Test\npublic void testMatchesAgainstWildcards ( ) throws Exception {\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertEquals(true, Wildcards.matches(\"hello\", \"h*o\"));\nassertEquals(true, Wildcards.matches(\"world\", \"w?rld\"));\nassertEquals(true, Wildcards.matches(\"12345\", \"*\"));\nassertEquals(true, Wildcards.matches(\"abc\", \"a??\"));\nassertEquals(true, Wildcards.matches(\"apple\", \"a*le\"));\nassertEquals(true, Wildcards.matches(\"banana\", \"b*n*\"));\nassertEquals(true, Wildcards.matches(\"carrot\", \"c*r?t\"));\nassertEquals(true, Wildcards.matches(\"dog\", \"d?g\"));\nassertEquals(true, Wildcards.matches(\"elephant\", \"e*e*t\"));\nassertEquals(true, Wildcards.matches(\"frog\", \"fro?\"));\nassertEquals(true, Wildcards.matches(\"grape\", \"g*p*\"));\nassertEquals(true, Wildcards.matches(\"house\", \"h?u?e\"));\nassertEquals(true, Wildcards.matches(\"ice cream\", \"i*e c*m\"));\nassertEquals(true, Wildcards.matches(\"jellyfish\", \"j*llyf?sh\"));\nassertEquals(true, Wildcards.matches(\"kiwi\", \"k*w*\"));\nassertEquals(true, Wildcards.matches(\"lemon\", \"l*mon\"));\nassertEquals(true, Wildcards.matches(\"mango\", \"m*n*o\"));\nassertEquals(true, Wildcards.matches(\"nut\", \"n*t\"));\nassertEquals(true, Wildcards.matches(\"orange\", \"o*ng*\"));\nassertEquals(true, Wildcards.matches(\"pear\", \"p??r\"));\n====================\n\n",
    "scores": [
        0.747,
        0.747,
        0.747,
        0.747,
        0.731,
        0.731,
        0.731,
        0.731,
        0.723,
        0.723,
        0.716,
        0.716,
        0.716,
        0.716,
        0.716,
        0.708,
        0.708,
        0.694,
        0.687,
        0.66
    ],
    "ground_truth": "assertTrue(Wildcards.matches(\"STR\",\"STR\"));"
}