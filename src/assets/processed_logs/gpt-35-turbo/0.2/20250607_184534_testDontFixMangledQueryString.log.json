{
    "prompt": "Below is the focal class and test class for reference:\n\npackage DigitalPebble.storm-crawler.core;\n\npublic class BasicURLNormalizer {\npublic String filter ( URL sourceUrl , Metadata sourceMetadata , String urlToFilter ) ;\n}\n\npackage DigitalPebble.storm-crawler.core;\n\npublic class BasicURLNormalizerTest {\n@Test\npublic void testDontFixMangledQueryString ( ) throws MalformedURLException {\nURLFilter urlFilter = createFilter ( true , false , queryParamsToFilter ) ;\nURL testSourceUrl = new URL ( \"STR\" ) ;\nString testUrl = \"STR\" ;\nString expectedResult = \"STR\" ;\nString normalizedUrl = urlFilter . filter ( testSourceUrl , new Metadata ( ) , testUrl ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertEquals(expectedResult, normalizedUrl);\nassertNotNull(normalizedUrl);\nassertTrue(normalizedUrl.startsWith(\"http://\"));\nassertFalse(normalizedUrl.endsWith(\"/\"));\nassertEquals(testUrl.length(), normalizedUrl.length());\nassertTrue(normalizedUrl.contains(\"example.com\"));\nassertFalse(normalizedUrl.contains(\"localhost\"));\nassertTrue(normalizedUrl.matches(\".*[0-9].*\"));\nassertFalse(normalizedUrl.isEmpty());\nassertTrue(normalizedUrl.equals(expectedResult));\nassertNotEquals(testUrl, normalizedUrl);\nassertTrue(normalizedUrl.matches(\".*[a-zA-Z].*\"));\nassertFalse(normalizedUrl.contains(\" \"));\nassertTrue(normalizedUrl.contains(\"http://\"));\nassertTrue(normalizedUrl.contains(\"www.\"));\nassertTrue(normalizedUrl.matches(\".*[a-z].*\"));\nassertFalse(normalizedUrl.endsWith(\".html\"));\nassertTrue(normalizedUrl.startsWith(\"http://www.\"));\nassertFalse(normalizedUrl.contains(\"https://\"));\nassertTrue(normalizedUrl.matches(\".*[A-Z].*\"));\nassertFalse(normalizedUrl.endsWith(\".pdf\"));\n====================\n\n",
    "scores": [
        0.933,
        0.744,
        0.634,
        0.605,
        0.571,
        0.562,
        0.552,
        0.545,
        0.527,
        0.522,
        0.505,
        0.5,
        0.489,
        0.473,
        0.468,
        0.468,
        0.468,
        0.463,
        0.454,
        0.454,
        0.444
    ],
    "ground_truth": "assertEquals(\"STR\",expectedResult,normalizedUrl);"
}