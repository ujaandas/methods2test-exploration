{
    "prompt": "Below is the focal class and test class for reference:\n\npackage fabric8io.fabric8-maven-plugin.core;\n\npublic class SpringBootUtil {\nprotected static Properties getPropertiesResource ( URL resource ) {\nProperties answer = new Properties ( ) ;\nif ( resource != null ) {\ntry ( InputStream stream = resource . openStream ( ) ) {\nanswer . load ( stream ) ;\n} catch ( IOException e ) {\nthrow new IllegalStateException ( \"STR\" + resource , e ) ;\n} } return answer ;\n}\n}\n\npackage fabric8io.fabric8-maven-plugin.core;\n\npublic class SpringBootUtilTest {\n@Test\npublic void testPropertiesParsing ( ) {\nProperties props = SpringBootUtil . getPropertiesResource ( SpringBootUtilTest . class . getResource ( \"STR\" ) ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertNotNull(props);\nassertTrue(props.containsKey(\"key1\"));\nassertEquals(\"value1\", props.getProperty(\"key1\"));\nassertTrue(props.containsKey(\"key2\"));\nassertEquals(\"value2\", props.getProperty(\"key2\"));\nassertFalse(props.containsKey(\"key3\"));\nassertNull(props.getProperty(\"key3\"));\nassertTrue(props.containsKey(\"key4\"));\nassertEquals(\"value4\", props.getProperty(\"key4\"));\nassertFalse(props.containsKey(\"key5\"));\nassertNull(props.getProperty(\"key5\"));\nassertTrue(props.containsKey(\"key6\"));\nassertEquals(\"value6\", props.getProperty(\"key6\"));\nassertFalse(props.containsKey(\"key7\"));\nassertNull(props.getProperty(\"key7\"));\nassertTrue(props.containsKey(\"key8\"));\nassertEquals(\"value8\", props.getProperty(\"key8\"));\nassertFalse(props.containsKey(\"key9\"));\nassertNull(props.getProperty(\"key9\"));\nassertTrue(props.containsKey(\"key10\"));\nassertEquals(\"value10\", props.getProperty(\"key10\"));\n====================\n\n",
    "scores": [
        0.706,
        0.617,
        0.609,
        0.609,
        0.609,
        0.609,
        0.608,
        0.608,
        0.608,
        0.608,
        0.608,
        0.588,
        0.588,
        0.588,
        0.588,
        0.559,
        0.559,
        0.559,
        0.559,
        0.559,
        0.551
    ],
    "ground_truth": "assertNotEquals(0,props.size());"
}