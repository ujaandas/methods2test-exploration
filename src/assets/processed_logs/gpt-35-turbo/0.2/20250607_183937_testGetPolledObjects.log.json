{
    "prompt": "Below is the focal class and test class for reference:\n\npackage amlinv.stat-collection-utils;\n\npublic class JmxAttributePoller {\npublic List < Object > getPolledObjects ( ) {\nreturn Collections . unmodifiableList ( polledObjects ) ;\n}\n}\n\npackage amlinv.stat-collection-utils;\n\npublic class JmxAttributePollerTest {\n@Test\npublic void testGetPolledObjects ( ) throws Exception {\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertNotNull(jmxAttributePoller.getPolledObjects());\nassertEquals(0, jmxAttributePoller.getPolledObjects().size());\njmxAttributePoller.addPolledObject(new Object());\nassertEquals(1, jmxAttributePoller.getPolledObjects().size());\nassertTrue(jmxAttributePoller.getPolledObjects().contains(new Object()));\nassertFalse(jmxAttributePoller.getPolledObjects().isEmpty());\njmxAttributePoller.removePolledObject(new Object());\nassertEquals(0, jmxAttributePoller.getPolledObjects().size());\nassertTrue(jmxAttributePoller.getPolledObjects().isEmpty());\nList<Object> polledObjects = jmxAttributePoller.getPolledObjects();\nassertNotNull(polledObjects);\nassertEquals(0, polledObjects.size());\nassertFalse(polledObjects.contains(new Object()));\nassertTrue(polledObjects.isEmpty());\njmxAttributePoller.addPolledObject(new Object());\nassertEquals(1, polledObjects.size());\nassertTrue(polledObjects.contains(new Object()));\nassertFalse(polledObjects.isEmpty());\njmxAttributePoller.removePolledObject(new Object());\nassertEquals(0, polledObjects.size());\nassertTrue(polledObjects.isEmpty());\nassertNotSame(jmxAttributePoller.getPolledObjects(), polledObjects);\nassertSame(jmxAttributePoller.getPolledObjects(), jmxAttributePoller.getPolledObjects());\nassertNotEquals(jmxAttributePoller.getPolledObjects(), polledObjects);\n====================\n\n",
    "scores": [
        0.667,
        0.667,
        0.667,
        0.653,
        0.651,
        0.649,
        0.626,
        0.626,
        0.626,
        0.626,
        0.618,
        0.618,
        0.609,
        0.606,
        0.59,
        0.571,
        0.571,
        0.537,
        0.527,
        0.505,
        0.407,
        0.407,
        0.4,
        0.4
    ],
    "ground_truth": "assertEquals(this.polledObjects,this.poller.getPolledObjects());"
}