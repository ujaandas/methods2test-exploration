{
    "prompt": "Below is the focal class and test class for reference:\n\npackage orientechnologies.orientdb.graphdb;\n\npublic class OMatchStatementExecutionNew {\n@Override\nboolean hasNext ( ) ;\n}\n\npackage orientechnologies.orientdb.graphdb;\n\npublic class OMatchStatementExecutionNewTest {\n@Test\npublic void testFriendsOfFriendsArrows ( ) throws Exception {\nOResultSet qResult = db . query ( \"STR\" ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertEquals(10, qResult.getInt(\"count\"));\nassertTrue(qResult.next());\nassertEquals(\"John\", qResult.getString(\"name\"));\nassertEquals(25, qResult.getInt(\"age\"));\nassertFalse(qResult.next());\nassertNotNull(qResult.getString(\"city\"));\nassertEquals(3, qResult.getInt(\"numFriends\"));\nassertTrue(qResult.next());\nassertEquals(\"Alice\", qResult.getString(\"name\"));\nassertEquals(28, qResult.getInt(\"age\"));\nassertFalse(qResult.next());\nassertNotNull(qResult.getString(\"city\"));\nassertEquals(2, qResult.getInt(\"numFriends\"));\nassertTrue(qResult.next());\nassertEquals(\"Bob\", qResult.getString(\"name\"));\nassertEquals(30, qResult.getInt(\"age\"));\nassertFalse(qResult.next());\nassertNotNull(qResult.getString(\"city\"));\nassertEquals(1, qResult.getInt(\"numFriends\"));\nassertFalse(qResult.next());\nassertNull(qResult.getString(\"name\"));\nassertNull(qResult.getString(\"age\"));\nassertNull(qResult.getString(\"city\"));\nassertNull(qResult.getString(\"numFriends\"));\n====================\n\n",
    "scores": [
        0.909,
        0.909,
        0.909,
        0.786,
        0.786,
        0.786,
        0.786,
        0.636,
        0.627,
        0.627,
        0.627,
        0.615,
        0.609,
        0.609,
        0.609,
        0.609,
        0.606,
        0.575,
        0.575,
        0.575,
        0.541,
        0.533,
        0.528,
        0.526
    ],
    "ground_truth": "Assert.assertTrue(qResult.hasNext());"
}