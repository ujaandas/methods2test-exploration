{
    "prompt": "Below is the focal class and test class for reference:\n\npackage amlinv.stat-collection-utils;\n\npublic class MBeanAnnotationUtil {\npublic static Map < String , Method > getAttributes ( Object mbeanLocation ) {\nMap < String , Method > result = new TreeMap < String , Method > ( ) ;\nMethod [ ] methods = mbeanLocation . getClass ( ) . getMethods ( ) ;\nfor ( Method oneMethod : methods ) {\nMBeanAttribute attribute = oneMethod . getAnnotation ( MBeanAttribute . class ) ;\nif ( attribute != null ) {\nresult . put ( attribute . name ( ) , oneMethod ) ;\n} } return result ;\n}\n}\n\npackage amlinv.stat-collection-utils;\n\npublic class MBeanAnnotationUtilTest {\n@Test\npublic void testGetAttributes ( ) throws Exception {\nMap < String , Method > atts = MBeanAnnotationUtil . getAttributes ( this . testAnnotation1 ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertNotNull(atts);\nassertEquals(3, atts.size());\nassertTrue(atts.containsKey(\"attribute1\"));\nassertTrue(atts.containsKey(\"attribute2\"));\nassertTrue(atts.containsKey(\"attribute3\"));\nassertFalse(atts.containsKey(\"attribute4\"));\nassertTrue(atts.containsValue(method1));\nassertTrue(atts.containsValue(method2));\nassertTrue(atts.containsValue(method3));\nassertFalse(atts.containsValue(method4));\nassertEquals(method1, atts.get(\"attribute1\"));\nassertEquals(method2, atts.get(\"attribute2\"));\nassertEquals(method3, atts.get(\"attribute3\"));\nassertNull(atts.get(\"attribute4\"));\nassertNotEquals(method4, atts.get(\"attribute4\"));\nassertTrue(atts.keySet().containsAll(Arrays.asList(\"attribute1\", \"attribute2\", \"attribute3\")));\nassertTrue(atts.values().containsAll(Arrays.asList(method1, method2, method3)));\nassertFalse(atts.keySet().contains(\"attribute4\"));\nassertFalse(atts.values().contains(method4));\n====================\n\n",
    "scores": [
        0.963,
        0.676,
        0.648,
        0.648,
        0.622,
        0.609,
        0.597,
        0.59,
        0.571,
        0.545,
        0.545,
        0.545,
        0.535,
        0.522,
        0.522,
        0.522,
        0.5,
        0.327,
        0.286
    ],
    "ground_truth": "assertEquals(2,atts.size());"
}