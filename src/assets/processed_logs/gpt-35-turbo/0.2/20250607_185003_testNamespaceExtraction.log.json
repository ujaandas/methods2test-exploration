{
    "prompt": "Below is the focal class and test class for reference:\n\npackage DigitalPebble.storm-crawler.core;\n\npublic class StackOverflow {\npublic Metadata ( ) {\nmd = new HashMap < > ( ) ;\n}\n}\n\npackage DigitalPebble.storm-crawler.core;\n\npublic class StackOverflowTest {\n@Test\npublic void testNamespaceExtraction ( ) throws IOException {\nprepareParserBolt ( \"STR\" ) ;\nMetadata metadata = new Metadata ( ) ;\nparse ( \"STR\" , \"STR\" , metadata ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertEquals(\"value1\", metadata.get(\"key1\"));\nassertEquals(\"value2\", metadata.get(\"key2\"));\nassertEquals(\"value3\", metadata.get(\"key3\"));\nassertEquals(\"value4\", metadata.get(\"key4\"));\nassertEquals(\"value5\", metadata.get(\"key5\"));\nassertEquals(\"value6\", metadata.get(\"key6\"));\nassertEquals(\"value7\", metadata.get(\"key7\"));\nassertEquals(\"value8\", metadata.get(\"key8\"));\nassertEquals(\"value9\", metadata.get(\"key9\"));\nassertEquals(\"value10\", metadata.get(\"key10\"));\nassertEquals(\"value11\", metadata.get(\"key11\"));\nassertEquals(\"value12\", metadata.get(\"key12\"));\nassertEquals(\"value13\", metadata.get(\"key13\"));\nassertEquals(\"value14\", metadata.get(\"key14\"));\nassertEquals(\"value15\", metadata.get(\"key15\"));\nassertEquals(\"value16\", metadata.get(\"key16\"));\nassertEquals(\"value17\", metadata.get(\"key17\"));\nassertEquals(\"value18\", metadata.get(\"key18\"));\nassertEquals(\"value19\", metadata.get(\"key19\"));\nassertEquals(\"value20\", metadata.get(\"key20\"));\n====================\n\n",
    "scores": [
        0.565,
        0.552,
        0.552,
        0.552,
        0.552,
        0.552,
        0.552,
        0.552,
        0.552,
        0.552,
        0.552,
        0.541,
        0.541,
        0.541,
        0.541,
        0.541,
        0.541,
        0.541,
        0.541,
        0.529
    ],
    "ground_truth": "Assert.assertEquals(1,output.getEmitted().size());"
}