{
    "prompt": "Below is the focal class and test class for reference:\n\npackage javadev.moneytostr-russian;\n\npublic class MoneyToStr {\npublic String convert ( Double theMoney ) {\nif ( theMoney == null ) {\nthrow new IllegalArgumentException ( \"STR\" ) ;\n} Long intPart = theMoney . longValue ( ) ;\nLong fractPart = Math . round ( ( theMoney - intPart ) * NUM100 ) ;\nif ( currency == Currency . PER1000 ) {\nfractPart = Math . round ( ( theMoney - intPart ) * NUM1000 ) ;\n} return convert ( intPart , fractPart ) ;\n}\n}\n\npackage javadev.moneytostr-russian;\n\npublic class MoneyToStrTest {\n@Test\npublic void checkEURRUSCustom ( ) {\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertEquals(\"\u0434\u0432\u0430\u0434\u0446\u0430\u0442\u044c \u043e\u0434\u0438\u043d \u0440\u0443\u0431\u043b\u044c 50 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(21.50));\nassertEquals(\"\u0434\u0432\u0430\u0434\u0446\u0430\u0442\u044c \u043e\u0434\u0438\u043d \u0440\u0443\u0431\u043b\u044c 51 \u043a\u043e\u043f\u0435\u0439\u043a\u0430\", moneyToStr.convert(21.51));\nassertEquals(\"\u0434\u0432\u0430\u0434\u0446\u0430\u0442\u044c \u043e\u0434\u0438\u043d \u0440\u0443\u0431\u043b\u044c 52 \u043a\u043e\u043f\u0435\u0439\u043a\u0438\", moneyToStr.convert(21.52));\nassertEquals(\"\u0434\u0432\u0430\u0434\u0446\u0430\u0442\u044c \u043e\u0434\u0438\u043d \u0440\u0443\u0431\u043b\u044c 53 \u043a\u043e\u043f\u0435\u0439\u043a\u0438\", moneyToStr.convert(21.53));\nassertEquals(\"\u0434\u0432\u0430\u0434\u0446\u0430\u0442\u044c \u043e\u0434\u0438\u043d \u0440\u0443\u0431\u043b\u044c 54 \u043a\u043e\u043f\u0435\u0439\u043a\u0438\", moneyToStr.convert(21.54));\nassertEquals(\"\u0434\u0432\u0430\u0434\u0446\u0430\u0442\u044c \u043e\u0434\u0438\u043d \u0440\u0443\u0431\u043b\u044c 55 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(21.55));\nassertEquals(\"\u0434\u0432\u0430\u0434\u0446\u0430\u0442\u044c \u043e\u0434\u0438\u043d \u0440\u0443\u0431\u043b\u044c 56 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(21.56));\nassertEquals(\"\u0434\u0432\u0430\u0434\u0446\u0430\u0442\u044c \u043e\u0434\u0438\u043d \u0440\u0443\u0431\u043b\u044c 57 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(21.57));\nassertEquals(\"\u0434\u0432\u0430\u0434\u0446\u0430\u0442\u044c \u043e\u0434\u0438\u043d \u0440\u0443\u0431\u043b\u044c 58 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(21.58));\nassertEquals(\"\u0434\u0432\u0430\u0434\u0446\u0430\u0442\u044c \u043e\u0434\u0438\u043d \u0440\u0443\u0431\u043b\u044c 59 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(21.59));\nassertEquals(\"\u0434\u0432\u0430\u0434\u0446\u0430\u0442\u044c \u043e\u0434\u0438\u043d \u0440\u0443\u0431\u043b\u044c 60 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(21.60));\nassertEquals(\"\u0434\u0432\u0430\u0434\u0446\u0430\u0442\u044c \u043e\u0434\u0438\u043d \u0440\u0443\u0431\u043b\u044c 61 \u043a\u043e\u043f\u0435\u0439\u043a\u0430\", moneyToStr.convert(21.61));\nassertEquals(\"\u0434\u0432\u0430\u0434\u0446\u0430\u0442\u044c \u043e\u0434\u0438\u043d \u0440\u0443\u0431\u043b\u044c 62 \u043a\u043e\u043f\u0435\u0439\u043a\u0438\", moneyToStr.convert(21.62));\nassertEquals(\"\u0434\u0432\u0430\u0434\u0446\u0430\u0442\u044c \u043e\u0434\u0438\u043d \u0440\u0443\u0431\u043b\u044c 63 \u043a\u043e\u043f\u0435\u0439\u043a\u0438\", moneyToStr.convert(21.63));\nassertEquals(\"\u0434\u0432\u0430\u0434\u0446\u0430\u0442\u044c \u043e\u0434\u0438\u043d \u0440\u0443\u0431\u043b\u044c 64 \u043a\u043e\u043f\u0435\u0439\u043a\u0438\", moneyToStr.convert(21.64));\nassertEquals(\"\u0434\u0432\u0430\u0434\u0446\u0430\u0442\u044c \u043e\u0434\u0438\u043d \u0440\u0443\u0431\u043b\u044c 65 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(21.65));\nassertEquals(\"\u0434\u0432\u0430\u0434\u0446\u0430\u0442\u044c \u043e\u0434\u0438\u043d \u0440\u0443\u0431\u043b\u044c 66 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(21.66));\nassertEquals(\"\u0434\u0432\u0430\u0434\u0446\u0430\u0442\u044c \u043e\u0434\u0438\u043d \u0440\u0443\u0431\u043b\u044c 67 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(21.67));\nassertEquals(\"\u0434\u0432\u0430\u0434\u0446\u0430\u0442\u044c \u043e\u0434\u0438\u043d \u0440\u0443\u0431\u043b\u044c 68\n====================\n\n",
    "scores": [
        0.639,
        0.639,
        0.633,
        0.633,
        0.622,
        0.622,
        0.622,
        0.622,
        0.622,
        0.622,
        0.622,
        0.622,
        0.617,
        0.617,
        0.617,
        0.617,
        0.617,
        0.617,
        0.329
    ],
    "ground_truth": "assertEquals(\"STR\",moneyToStrCustom.convert(V_300D));"
}