{
    "prompt": "Below is the focal class and test class for reference:\n\npackage AlejandroRivera.embedded-rabbitmq;\n\npublic class ExtractorFactory {\npublic Extractor getNewInstance ( ) {\nExtractor extractor = new BasicExtractor ( config ) ;\nif ( config . shouldCachedDownload ( ) ) {\nextractor = new CachedExtractor ( extractor , config ) ;\n} return extractor ;\n}\n}\n\npackage AlejandroRivera.embedded-rabbitmq;\n\npublic class ExtractorFactoryTest {\n@Test\npublic void withCaching ( ) throws Exception {\nbuilder . useCachedDownload ( true ) ;\nExtractor extractor = new ExtractorFactory ( builder . build ( ) ) . getNewInstance ( ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertEquals(true, extractor instanceof CachedExtractor);\nassertEquals(true, extractor instanceof BasicExtractor);\nassertEquals(true, extractor.isCached());\nassertEquals(true, extractor.getConfig().shouldCachedDownload());\nassertEquals(true, extractor.getConfig().shouldUseCachedDownload());\nassertEquals(true, extractor.getConfig().shouldUseCachedDownload());\nassertEquals(true, extractor.getConfig().shouldUseCachedDownload());\nassertEquals(true, extractor.getConfig().shouldUseCachedDownload());\nassertEquals(true, extractor.getConfig().shouldUseCachedDownload());\nassertEquals(true, extractor.getConfig().shouldUseCachedDownload());\nassertEquals(true, extractor.getConfig().shouldUseCachedDownload());\nassertEquals(true, extractor.getConfig().shouldUseCachedDownload());\nassertEquals(true, extractor.getConfig().shouldUseCachedDownload());\nassertEquals(true, extractor.getConfig().shouldUseCachedDownload());\nassertEquals(true, extractor.getConfig().shouldUseCachedDownload());\nassertEquals(true, extractor.getConfig().shouldUseCachedDownload());\nassertEquals(true, extractor.getConfig().shouldUseCachedDownload());\nassertEquals(true, extractor.getConfig().shouldUseCachedDownload());\nassertEquals(true, extractor.getConfig().shouldUseCachedDownload());\nassertEquals(true, extractor.getConfig().shouldUseCachedDownload());\n====================\n\n",
    "scores": [
        0.609,
        0.592,
        0.562,
        0.562,
        0.562,
        0.562,
        0.562,
        0.562,
        0.562,
        0.562,
        0.562,
        0.562,
        0.562,
        0.562,
        0.562,
        0.562,
        0.562,
        0.562,
        0.561,
        0.554
    ],
    "ground_truth": "assertTrue(extractor.getClass().equals(CachedExtractor.class));"
}