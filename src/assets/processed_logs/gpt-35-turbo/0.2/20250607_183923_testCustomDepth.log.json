{
    "prompt": "Below is the focal class and test class for reference:\n\npackage DigitalPebble.storm-crawler.core;\n\npublic class MaxDepthFilter {\npublic String filter ( URL sourceUrl , Metadata sourceMetadata , String urlToFilter ) ;\n}\n\npackage DigitalPebble.storm-crawler.core;\n\npublic class MaxDepthFilterTest {\n@Test\npublic void testCustomDepth ( ) throws MalformedURLException {\nURLFilter filter = createFilter ( \"STR\" , 1 ) ;\nURL url = new URL ( \"STR\" ) ;\nMetadata metadata = new Metadata ( ) ;\nmetadata . setValue ( MetadataTransfer . maxDepthKeyName , \"STR\" ) ;\nmetadata . setValue ( MetadataTransfer . depthKeyName , \"STR\" ) ;\nString filterResult = filter . filter ( url , metadata , url . toExternalForm ( ) ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertEquals(\"Expected result\", filterResult);\nassertNotNull(filterResult);\nassertTrue(filterResult.contains(\"expected\"));\nassertFalse(filterResult.isEmpty());\nassertNotEquals(\"Not expected result\", filterResult);\nassertEquals(\"Expected result\", filterResult.trim());\nassertTrue(filterResult.startsWith(\"http\"));\nassertFalse(filterResult.endsWith(\"pdf\"));\nassertTrue(filterResult.matches(\"regex pattern\"));\nassertEquals(10, filterResult.length());\nassertTrue(filterResult.equalsIgnoreCase(\"expected result\"));\nassertNotNull(filterResult.substring(0, 5));\nassertTrue(filterResult.contains(\"substring\"));\nassertFalse(filterResult.equals(\"different result\"));\nassertTrue(filterResult.startsWith(\"https://\"));\nassertEquals(\"Expected result\", filterResult.toUpperCase());\nassertFalse(filterResult.endsWith(\".png\"));\nassertTrue(filterResult.matches(\"[a-zA-Z0-9]+\"));\nassertEquals(\"Expected result\", filterResult.toLowerCase());\nassertTrue(filterResult.contains(\"www.example.com\"));\n====================\n\n",
    "scores": [
        0.733,
        0.68,
        0.667,
        0.635,
        0.635,
        0.635,
        0.595,
        0.561,
        0.523,
        0.517,
        0.494,
        0.469,
        0.467,
        0.457,
        0.452,
        0.447,
        0.442,
        0.442,
        0.424,
        0.396
    ],
    "ground_truth": "Assert.assertEquals(url.toExternalForm(),filterResult);"
}