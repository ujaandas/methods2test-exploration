{
    "prompt": "Below is the focal class and test class for reference:\n\npackage amlinv.stat-collection-utils;\n\npublic class ObjectQueryInfo {\npublic Object getTarget ( ) {\nreturn target ;\n}\n}\n\npackage amlinv.stat-collection-utils;\n\npublic class ObjectQueryInfoTest {\n@Test\npublic void testImmutableQueryInfo ( ) throws Exception {\nMap < String , Method > setters = new HashMap < > ( ) ;\nsetters . put ( \"STR\" , null ) ;\nsetters . put ( \"STR\" , null ) ;\nObject target = new Object ( ) ;\nObjectName oname = new ObjectName ( \"STR\" ) ;\nObjectQueryInfo objectQueryInfo = new ObjectQueryInfo ( target , oname , setters ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "Assert.assertEquals(target, objectQueryInfo.getTarget());\nAssert.assertEquals(oname, objectQueryInfo.getObjectName());\nAssert.assertEquals(setters, objectQueryInfo.getSetters());\nAssert.assertNotNull(objectQueryInfo.toString());\nAssert.assertNotEquals(null, objectQueryInfo.hashCode());\nAssert.assertTrue(objectQueryInfo.equals(objectQueryInfo));\nAssert.assertFalse(objectQueryInfo.equals(null));\nAssert.assertTrue(objectQueryInfo instanceof ObjectQueryInfo);\nAssert.assertTrue(objectQueryInfo.getClass().equals(ObjectQueryInfo.class));\nAssert.assertTrue(objectQueryInfo.hashCode() == objectQueryInfo.hashCode());\nAssert.assertTrue(objectQueryInfo.equals(new ObjectQueryInfo(target, oname, setters)));\nAssert.assertTrue(objectQueryInfo.equals(objectQueryInfo));\nAssert.assertTrue(objectQueryInfo.equals(objectQueryInfo.clone()));\nAssert.assertTrue(objectQueryInfo.equals(objectQueryInfo));\nAssert.assertTrue(objectQueryInfo.equals(objectQueryInfo));\nAssert.assertTrue(objectQueryInfo.equals(objectQueryInfo));\nAssert.assertTrue(objectQueryInfo.equals(objectQueryInfo));\nAssert.assertTrue(objectQueryInfo.equals(objectQueryInfo));\nAssert.assertTrue(objectQueryInfo.equals(objectQueryInfo));\n====================\n\n",
    "scores": [
        0.915,
        0.729,
        0.701,
        0.69,
        0.621,
        0.617,
        0.598,
        0.598,
        0.598,
        0.598,
        0.598,
        0.598,
        0.598,
        0.598,
        0.59,
        0.554,
        0.551,
        0.544,
        0.541
    ],
    "ground_truth": "assertSame(target,objectQueryInfo.getTarget());"
}