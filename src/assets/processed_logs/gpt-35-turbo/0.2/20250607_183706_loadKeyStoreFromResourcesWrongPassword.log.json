{
    "prompt": "Below is the focal class and test class for reference:\n\npackage NanoHttpd.nanohttpd.core;\n\npublic class LoadKeyStore {\npublic static SSLServerSocketFactory makeSSLSocketFactory ( String keyAndTrustStoreClasspathPath , char [ ] passphrase ) throws IOException {\ntry {\nKeyStore keystore = KeyStore . getInstance ( KeyStore . getDefaultType ( ) ) ;\nInputStream keystoreStream = NanoHTTPD . class . getResourceAsStream ( keyAndTrustStoreClasspathPath ) ;\nif ( keystoreStream == null ) {\nthrow new IOException ( \"STR\" + keyAndTrustStoreClasspathPath ) ;\n} keystore . load ( keystoreStream , passphrase ) ;\nKeyManagerFactory keyManagerFactory = KeyManagerFactory . getInstance ( KeyManagerFactory . getDefaultAlgorithm ( ) ) ;\nkeyManagerFactory . init ( keystore , passphrase ) ;\nreturn makeSSLSocketFactory ( keystore , keyManagerFactory ) ;\n} catch ( Exception e ) {\nthrow new IOException ( e . getMessage ( ) ) ;\n} }\n}\n\npackage NanoHttpd.nanohttpd.core;\n\npublic class LoadKeyStoreTest {\n@Test\npublic void loadKeyStoreFromResourcesWrongPassword ( ) throws Exception {\nString keyStorePath = \"STR\" ;\nInputStream resourceAsStream = this . getClass ( ) . getResourceAsStream ( keyStorePath ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "Assert.assertNotNull(resourceAsStream);\nAssert.assertNotEquals(-1, resourceAsStream.available());\nAssert.assertTrue(resourceAsStream.markSupported());\nAssert.assertTrue(resourceAsStream.read() != -1);\nAssert.assertTrue(resourceAsStream.read(new byte[1024]) != -1);\nAssert.assertTrue(resourceAsStream.skip(10) > 0);\nAssert.assertTrue(resourceAsStream.mark(0) == 0);\nAssert.assertTrue(resourceAsStream.reset() == 0);\nAssert.assertTrue(resourceAsStream.read(new byte[1024], 0, 10) != -1);\nAssert.assertTrue(resourceAsStream.readAllBytes().length > 0);\nAssert.assertTrue(resourceAsStream.transferTo(System.out) > 0);\nAssert.assertTrue(resourceAsStream.skipNBytes(10) > 0);\nAssert.assertTrue(resourceAsStream.readNBytes(10).length > 0);\nAssert.assertTrue(resourceAsStream.transferTo(System.out) > 0);\nAssert.assertTrue(resourceAsStream.transferTo(System.out, 10) > 0);\nAssert.assertTrue(resourceAsStream.transferTo(System.out, 0, 10) > 0);\nAssert.assertTrue(resourceAsStream.transferTo(System.out, 0, 10) > 0);\nAssert.assertTrue(resourceAsStream.transferTo(System.out, 0, 10) > 0);\nAssert.assertTrue(resourceAsStream.transferTo(System.out, 0, 10) > 0);\n====================\n\n",
    "scores": [
        1.0,
        0.734,
        0.714,
        0.714,
        0.714,
        0.714,
        0.667,
        0.658,
        0.602,
        0.602,
        0.602,
        0.595,
        0.595,
        0.575,
        0.568,
        0.562,
        0.562,
        0.562,
        0.562
    ],
    "ground_truth": "assertNotNull(resourceAsStream);"
}