{
    "prompt": "Below is the focal class and test class for reference:\n\npackage DigitalPebble.storm-crawler.core;\n\npublic class MaxDepthFilter {\npublic String filter ( URL sourceUrl , Metadata sourceMetadata , String urlToFilter ) ;\n}\n\npackage DigitalPebble.storm-crawler.core;\n\npublic class MaxDepthFilterTest {\n@Test\npublic void testCustomDepthZero ( ) throws MalformedURLException {\nURLFilter filter = createFilter ( \"STR\" , 3 ) ;\nURL url = new URL ( \"STR\" ) ;\nMetadata metadata = new Metadata ( ) ;\nmetadata . setValue ( MetadataTransfer . maxDepthKeyName , \"STR\" ) ;\nString filterResult = filter . filter ( url , metadata , url . toExternalForm ( ) ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertEquals(\"Expected result\", filterResult);\nassertNotNull(filterResult);\nassertTrue(filterResult.contains(\"expectedSubstring\"));\nassertFalse(filterResult.isEmpty());\nassertNotEquals(\"Unexpected result\", filterResult);\nassertEquals(\"Expected result\", filterResult);\nassertTrue(filterResult.startsWith(\"http://\"));\nassertFalse(filterResult.endsWith(\".pdf\"));\nassertEquals(\"Expected result\", filterResult);\nassertNotNull(filterResult);\nassertTrue(filterResult.contains(\"expectedSubstring\"));\nassertFalse(filterResult.isEmpty());\nassertNotEquals(\"Unexpected result\", filterResult);\nassertEquals(\"Expected result\", filterResult);\nassertTrue(filterResult.startsWith(\"http://\"));\nassertFalse(filterResult.endsWith(\".pdf\"));\nassertEquals(\"Expected result\", filterResult);\nassertNotNull(filterResult);\nassertTrue(filterResult.contains(\"expectedSubstring\"));\nassertFalse(filterResult.isEmpty());\nassertNotEquals(\"Unexpected result\", filterResult);\n====================\n\n",
    "scores": [
        0.784,
        0.784,
        0.784,
        0.784,
        0.784,
        0.759,
        0.759,
        0.759,
        0.759,
        0.759,
        0.759,
        0.697,
        0.697,
        0.697,
        0.63,
        0.63,
        0.545,
        0.545,
        0.494,
        0.494,
        0.494
    ],
    "ground_truth": "Assert.assertEquals(null,filterResult);"
}