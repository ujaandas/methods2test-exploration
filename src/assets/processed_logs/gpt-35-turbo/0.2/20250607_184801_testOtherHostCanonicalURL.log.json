{
    "prompt": "Below is the focal class and test class for reference:\n\npackage DigitalPebble.storm-crawler.core;\n\npublic class BasicIndexing {\npublic void setValue ( String key , String value ) {\ncheckLockException ( ) ;\nmd . put ( key , new String [ ] {\nvalue } ) ;\n}\n}\n\npackage DigitalPebble.storm-crawler.core;\n\npublic class BasicIndexingTest {\n@Test\npublic void testOtherHostCanonicalURL ( ) throws Exception {\nMap config = new HashMap ( ) ;\nconfig . put ( AbstractIndexerBolt . urlFieldParamName , \"STR\" ) ;\nconfig . put ( AbstractIndexerBolt . canonicalMetadataParamName , \"STR\" ) ;\nMetadata metadata = new Metadata ( ) ;\nmetadata . setValue ( \"STR\" , \"STR\" ) ;\nprepareIndexerBolt ( config ) ;\nindex ( URL , metadata ) ;\nMap < String , String > fields = ( ( DummyIndexer ) bolt ) . returnFields ( ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertEquals(\"STR\", fields.get(\"key1\"));\nassertEquals(\"STR\", fields.get(\"key2\"));\nassertEquals(\"STR\", fields.get(\"key3\"));\nassertEquals(\"STR\", fields.get(\"key4\"));\nassertEquals(\"STR\", fields.get(\"key5\"));\nassertEquals(\"STR\", fields.get(\"key6\"));\nassertEquals(\"STR\", fields.get(\"key7\"));\nassertEquals(\"STR\", fields.get(\"key8\"));\nassertEquals(\"STR\", fields.get(\"key9\"));\nassertEquals(\"STR\", fields.get(\"key10\"));\nassertEquals(\"STR\", fields.get(\"key11\"));\nassertEquals(\"STR\", fields.get(\"key12\"));\nassertEquals(\"STR\", fields.get(\"key13\"));\nassertEquals(\"STR\", fields.get(\"key14\"));\nassertEquals(\"STR\", fields.get(\"key15\"));\nassertEquals(\"STR\", fields.get(\"key16\"));\nassertEquals(\"STR\", fields.get(\"key17\"));\nassertEquals(\"STR\", fields.get(\"key18\"));\nassertEquals(\"STR\", fields.get(\"key19\"));\nassertEquals(\"STR\", fields.get(\"key20\"));\n====================\n\n",
    "scores": [
        0.84,
        0.84,
        0.84,
        0.84,
        0.84,
        0.84,
        0.84,
        0.84,
        0.84,
        0.829,
        0.829,
        0.829,
        0.829,
        0.829,
        0.829,
        0.829,
        0.829,
        0.829,
        0.829,
        0.829
    ],
    "ground_truth": "Assert.assertEquals(\"STR\",\"STR\",fields.get(\"STR\"));"
}