{
    "prompt": "Below is the focal class and test class for reference:\n\npackage orientechnologies.orientdb.graphdb;\n\npublic class OMatchStatementExecution {\n< RET > RET execute ( Object ... iArgs ) ;\n}\n\npackage orientechnologies.orientdb.graphdb;\n\npublic class OMatchStatementExecutionTest {\n@Test\npublic void testFriendsWithNameArrows ( ) throws Exception {\nList < ODocument > qResult = db . command ( new OCommandSQL ( \"STR\" ) ) . execute ( ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertEquals(2, qResult.size());\nassertTrue(qResult.get(0).field(\"name\").equals(\"Alice\"));\nassertTrue(qResult.get(1).field(\"name\").equals(\"Bob\"));\nassertTrue(qResult.get(0).field(\"age\") < 30);\nassertTrue(qResult.get(1).field(\"age\") >= 25);\nassertTrue(qResult.get(0).field(\"friends\").equals(\"Charlie\"));\nassertTrue(qResult.get(1).field(\"friends\").equals(\"Alice\"));\nassertTrue(qResult.get(0).field(\"city\").equals(\"New York\"));\nassertTrue(qResult.get(1).field(\"city\").equals(\"Los Angeles\"));\nassertTrue(qResult.get(0).field(\"isFriend\").equals(true));\nassertTrue(qResult.get(1).field(\"isFriend\").equals(true));\nassertTrue(qResult.get(0).field(\"hasMet\").equals(false));\nassertTrue(qResult.get(1).field(\"hasMet\").equals(true));\nassertTrue(qResult.get(0).field(\"isColleague\").equals(false));\nassertTrue(qResult.get(1).field(\"isColleague\").equals(true));\nassertTrue(qResult.get(0).field(\"isFamily\").equals(false));\nassertTrue(qResult.get(1).field(\"isFamily\").equals(false));\nassertTrue(qResult.get(0).field(\"isNeighbor\").equals(true));\nassertTrue(qResult.get(1).field(\"isNeighbor\").equals(false));\nassertTrue(qResult.get(0).field(\"hasPets\").equals(true));\nassertTrue(qResult.get(1).field(\"hasPets\").equals(false));\n====================\n\n",
    "scores": [
        0.967,
        0.583,
        0.575,
        0.506,
        0.506,
        0.5,
        0.5,
        0.494,
        0.494,
        0.489,
        0.488,
        0.488,
        0.488,
        0.483,
        0.476,
        0.472,
        0.467,
        0.462,
        0.462,
        0.455,
        0.44
    ],
    "ground_truth": "assertEquals(1,qResult.size());"
}