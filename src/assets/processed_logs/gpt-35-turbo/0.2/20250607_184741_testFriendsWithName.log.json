{
    "prompt": "Below is the focal class and test class for reference:\n\npackage orientechnologies.orientdb.graphdb;\n\npublic class OMatchStatementExecution {\n< RET > RET execute ( Object ... iArgs ) ;\n}\n\npackage orientechnologies.orientdb.graphdb;\n\npublic class OMatchStatementExecutionTest {\n@Test\npublic void testFriendsWithName ( ) throws Exception {\nList < ODocument > qResult = db . command ( new OCommandSQL ( \"STR\" ) ) . execute ( ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertEquals(2, qResult.size());\nassertNotNull(qResult.get(0));\nassertNotNull(qResult.get(1));\nassertTrue(qResult.get(0).field(\"name\").equals(\"John\"));\nassertTrue(qResult.get(1).field(\"name\").equals(\"Jane\"));\nassertFalse(qResult.get(0).field(\"age\").equals(qResult.get(1).field(\"age\")));\nassertTrue(qResult.get(0).field(\"city\").equals(\"New York\"));\nassertTrue(qResult.get(1).field(\"city\").equals(\"Los Angeles\"));\nassertTrue(qResult.get(0).field(\"gender\").equals(\"Male\"));\nassertTrue(qResult.get(1).field(\"gender\").equals(\"Female\"));\nassertTrue(qResult.get(0).field(\"isFriend\").equals(true));\nassertTrue(qResult.get(1).field(\"isFriend\").equals(true));\nassertTrue(qResult.get(0).field(\"isFamily\").equals(false));\nassertTrue(qResult.get(1).field(\"isFamily\").equals(false));\nassertTrue(qResult.get(0).field(\"isColleague\").equals(false));\nassertTrue(qResult.get(1).field(\"isColleague\").equals(false));\nassertTrue(qResult.get(0).field(\"isNeighbor\").equals(true));\nassertTrue(qResult.get(1).field(\"isNeighbor\").equals(true));\nassertTrue(qResult.get(0).field(\"hasPet\").equals(true));\nassertTrue(qResult.get(1).field(\"hasPet\").equals(false));\n====================\n\n",
    "scores": [
        0.967,
        0.712,
        0.712,
        0.506,
        0.506,
        0.5,
        0.5,
        0.494,
        0.494,
        0.494,
        0.488,
        0.471,
        0.471,
        0.462,
        0.462,
        0.46,
        0.455,
        0.453,
        0.449,
        0.44
    ],
    "ground_truth": "assertEquals(1,qResult.size());"
}