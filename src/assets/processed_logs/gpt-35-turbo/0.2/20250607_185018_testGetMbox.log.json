{
    "prompt": "Below is the focal class and test class for reference:\n\npackage adlnet.jxapi;\n\npublic class Actor {\npublic String getMbox ( ) {\nreturn mbox ;\n}\n}\n\npackage adlnet.jxapi;\n\npublic class ActorTest {\n@Test\npublic void testGetMbox ( ) {\nString expected = MBOX ;\nString actual = agent . getMbox ( ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertEquals(expected, actual);\nassertNotNull(actual);\nassertTrue(actual.contains(\"@\"));\nassertFalse(actual.isEmpty());\nassertNotEquals(\"test@example.com\", actual);\nassertSame(expected, actual);\nassertNotSame(expected, actual);\nassertTrue(actual.startsWith(\"mailto:\"));\nassertFalse(actual.endsWith(\".com\"));\nassertTrue(actual.matches(\".*@.*\"));\nassertTrue(actual.length() > 0);\nassertTrue(actual.equals(expected));\nassertFalse(actual.equalsIgnoreCase(\"MBOX\"));\nassertTrue(actual.contains(\"example\"));\nassertFalse(actual.contains(\"test\"));\nassertTrue(actual.matches(\"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}\"));\nassertTrue(actual.indexOf(\"@\") > 0);\nassertFalse(actual.startsWith(\"test\"));\nassertTrue(actual.endsWith(\".com\"));\nassertFalse(actual.matches(\"[0-9]+\"));\nassertTrue(actual.matches(\"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}\"));\n====================\n\n",
    "scores": [
        1.0,
        0.667,
        0.603,
        0.6,
        0.6,
        0.583,
        0.566,
        0.56,
        0.556,
        0.536,
        0.536,
        0.536,
        0.526,
        0.526,
        0.517,
        0.508,
        0.508,
        0.492,
        0.462,
        0.306,
        0.306
    ],
    "ground_truth": "assertNotNull(actual);"
}