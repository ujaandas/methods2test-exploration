{
    "prompt": "Below is the focal class and test class for reference:\n\npackage orientechnologies.orientdb.graphdb;\n\npublic class OMatchStatementExecution {\n< RET > RET execute ( Object ... iArgs ) ;\n}\n\npackage orientechnologies.orientdb.graphdb;\n\npublic class OMatchStatementExecutionTest {\n@Test\npublic void testFriendsOfFriends ( ) throws Exception {\nList < ODocument > qResult = db . command ( new OCommandSQL ( \"STR\" ) ) . execute ( ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertNotNull(qResult);\nassertEquals(5, qResult.size());\nassertTrue(qResult.get(0).containsField(\"name\"));\nassertTrue(qResult.get(0).containsField(\"age\"));\nassertTrue(qResult.get(0).containsField(\"location\"));\nassertTrue(qResult.get(1).containsField(\"name\"));\nassertTrue(qResult.get(1).containsField(\"age\"));\nassertTrue(qResult.get(1).containsField(\"location\"));\nassertTrue(qResult.get(2).containsField(\"name\"));\nassertTrue(qResult.get(2).containsField(\"age\"));\nassertTrue(qResult.get(2).containsField(\"location\"));\nassertTrue(qResult.get(3).containsField(\"name\"));\nassertTrue(qResult.get(3).containsField(\"age\"));\nassertTrue(qResult.get(3).containsField(\"location\"));\nassertTrue(qResult.get(4).containsField(\"name\"));\nassertTrue(qResult.get(4).containsField(\"age\"));\nassertTrue(qResult.get(4).containsField(\"location\"));\nassertNotNull(qResult.get(0).field(\"name\"));\nassertNotNull(qResult.get(0).field(\"age\"));\nassertNotNull(qResult.get(0).field(\"location\"));\nassertNotNull(qResult.get(1).field(\"name\"));\nassertNotNull(qResult.get(1).field(\"age\"));\nassertNotNull(qResult.get(1).field(\"location\"));\n====================\n\n",
    "scores": [
        0.967,
        0.654,
        0.611,
        0.611,
        0.603,
        0.603,
        0.571,
        0.571,
        0.571,
        0.571,
        0.571,
        0.571,
        0.571,
        0.564,
        0.564,
        0.564,
        0.564,
        0.564,
        0.537,
        0.537,
        0.537,
        0.537,
        0.537
    ],
    "ground_truth": "assertEquals(1,qResult.size());"
}