{
    "prompt": "Below is the focal class and test class for reference:\n\npackage adlnet.jxapi;\n\npublic class ActivityProfile {\npublic String getActivityId ( ) {\nreturn activityId ;\n}\n}\n\npackage adlnet.jxapi;\n\npublic class ActivityProfileTest {\n@Test\npublic void testGetActivityId ( ) {\nString expected = \"STR\" ;\nString actual = activityProfile . getActivityId ( ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "Assert.assertEquals(expected, actual);\nAssert.assertNotNull(actual);\nAssert.assertTrue(actual.contains(\"S\"));\nAssert.assertFalse(actual.isEmpty());\nAssert.assertNotEquals(\"ABC\", actual);\nAssert.assertNotSame(expected, actual);\nAssert.assertSame(expected, \"STR\");\nAssert.assertTrue(actual.length() > 0);\nAssert.assertTrue(actual.startsWith(\"S\"));\nAssert.assertTrue(actual.endsWith(\"R\"));\nAssert.assertTrue(actual.matches(\"[A-Z]+\"));\nAssert.assertNotEquals(\"str\", actual);\nAssert.assertTrue(actual.equalsIgnoreCase(\"str\"));\nAssert.assertTrue(actual.compareTo(\"STR\") == 0);\nAssert.assertTrue(actual.compareToIgnoreCase(\"str\") == 0);\nAssert.assertTrue(actual.toUpperCase().equals(\"STR\"));\nAssert.assertTrue(actual.toLowerCase().equals(\"str\"));\nAssert.assertTrue(actual.trim().equals(\"STR\"));\nAssert.assertTrue(actual.replace(\"T\", \"X\").equals(\"SRX\"));\nAssert.assertTrue(actual.substring(1).equals(\"TR\"));\n====================\n\n",
    "scores": [
        1.0,
        0.76,
        0.76,
        0.667,
        0.6,
        0.6,
        0.566,
        0.566,
        0.56,
        0.545,
        0.526,
        0.508,
        0.5,
        0.476,
        0.462,
        0.448,
        0.448,
        0.435,
        0.429,
        0.426
    ],
    "ground_truth": "assertNotNull(actual);"
}