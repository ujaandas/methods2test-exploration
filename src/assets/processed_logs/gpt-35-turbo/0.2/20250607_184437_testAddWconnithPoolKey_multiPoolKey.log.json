{
    "prompt": "Below is the focal class and test class for reference:\n\npackage sofastack.sofa-bolt;\n\npublic class RpcConnectionManager {\n@Override\npublic int count ( String poolKey ) {\nif ( StringUtils . isBlank ( poolKey ) ) {\nreturn 0 ;\n} ConnectionPool pool = this . getConnectionPool ( this . connTasks . get ( poolKey ) ) ;\nif ( null != pool ) {\nreturn pool . size ( ) ;\n} else {\nreturn 0 ;\n} }\n}\n\npackage sofastack.sofa-bolt;\n\npublic class RpcConnectionManagerTest {\n@Test\npublic void testAddWconnithPoolKey_multiPoolKey ( ) throws InterruptedException {\nConnection conn = getAConn ( ) ;\ncm . add ( conn , poolKey ) ;\ncm . add ( conn , \"STR\" ) ;\ncm . add ( conn , \"STR\" ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertEquals(1, cm.count(poolKey));\nassertEquals(1, cm.count(\"STR\"));\nassertEquals(1, cm.count(\"STR\"));\nassertEquals(0, cm.count(\"INVALID_KEY\"));\nassertEquals(0, cm.count(\"\"));\nassertEquals(0, cm.count(null));\nassertEquals(0, cm.count(\"ANOTHER_INVALID_KEY\"));\nassertEquals(1, cm.count(poolKey));\nassertEquals(2, cm.count(\"STR\"));\nassertEquals(0, cm.count(\"ANOTHER_INVALID_KEY\"));\nassertEquals(1, cm.count(poolKey));\nassertEquals(2, cm.count(\"STR\"));\nassertEquals(0, cm.count(\"ANOTHER_INVALID_KEY\"));\nassertEquals(1, cm.count(poolKey));\nassertEquals(2, cm.count(\"STR\"));\nassertEquals(0, cm.count(\"ANOTHER_INVALID_KEY\"));\nassertEquals(1, cm.count(poolKey));\nassertEquals(2, cm.count(\"STR\"));\nassertEquals(0, cm.count(\"ANOTHER_INVALID_KEY\"));\nassertEquals(1, cm.count(poolKey));\n====================\n\n",
    "scores": [
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        0.825,
        0.82,
        0.812,
        0.812,
        0.781,
        0.781,
        0.781,
        0.781,
        0.722,
        0.65,
        0.65,
        0.65,
        0.65,
        0.65
    ],
    "ground_truth": "Assert.assertEquals(1,cm.count(poolKey));"
}