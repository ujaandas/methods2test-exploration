{
    "prompt": "Below is the focal class and test class for reference:\n\npackage arnohaase.a-foundation.a-foundation;\n\npublic class AJsonSerHelper {\npublic void writeNumberLiteral ( double value , int numFracDigits ) throws IOException {\ncheckAcceptsValueAndPrefixComma ( ) ;\nout . write ( new DecimalFormat ( PATTERNS [ numFracDigits ] , DECIMAL_FORMAT_SYMBOLS ) . format ( value ) ) ;\nafterValueWritten ( ) ;\n}\n}\n\npackage arnohaase.a-foundation.a-foundation;\n\npublic class AJsonSerHelperTest {\n@Test\npublic void testDoubleWithFrac1 ( ) throws IOException {\nfinal ByteArrayOutputStream baos = new ByteArrayOutputStream ( ) ;\nfinal AJsonSerHelper ser = new AJsonSerHelper ( baos ) ;\nser . writeNumberLiteral ( 1.23 , 1 ) ;\nfinal String result = new String ( baos . toByteArray ( ) , \"STR\" ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertEquals(\"1.2\", result);\nassertFalse(result.contains(\".\"));\nassertTrue(result.contains(\"1.2\"));\nassertTrue(result.contains(\"1.20\"));\nassertTrue(result.contains(\"1.230\"));\nassertTrue(result.contains(\"1.2300\"));\nassertTrue(result.contains(\"1.23000\"));\nassertTrue(result.contains(\"1.230000\"));\nassertTrue(result.contains(\"1.2300000\"));\nassertTrue(result.contains(\"1.23000000\"));\nassertTrue(result.contains(\"1.230000000\"));\nassertTrue(result.contains(\"1.2300000000\"));\nassertTrue(result.contains(\"1.23000000000\"));\nassertTrue(result.contains(\"1.230000000000\"));\nassertTrue(result.contains(\"1.2300000000000\"));\nassertTrue(result.contains(\"1.23000000000000\"));\nassertTrue(result.contains(\"1.230000000000000\"));\nassertTrue(result.contains(\"1.2300000000000000\"));\nassertTrue(result.contains(\"1.23000000000000000\"));\nassertTrue(result.contains(\"1.230000000000000000\"));\n====================\n\n",
    "scores": [
        0.885,
        0.576,
        0.5,
        0.492,
        0.484,
        0.476,
        0.469,
        0.462,
        0.455,
        0.448,
        0.441,
        0.435,
        0.429,
        0.423,
        0.417,
        0.411,
        0.405,
        0.4,
        0.395,
        0.39
    ],
    "ground_truth": "assertEquals(\"STR\",result);"
}