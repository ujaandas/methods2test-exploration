{
    "prompt": "Below is the focal class and test class for reference:\n\npackage orientechnologies.orientdb.graphdb;\n\npublic class OMatchStatementExecution {\n< RET > RET execute ( Object ... iArgs ) ;\n}\n\npackage orientechnologies.orientdb.graphdb;\n\npublic class OMatchStatementExecutionTest {\n@Test\npublic void testFriendsWithNameArrows ( ) throws Exception {\nList < ODocument > qResult = db . command ( new OCommandSQL ( \"STR\" ) ) . execute ( ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "Assert.assertNotNull(qResult);\nAssert.assertEquals(2, qResult.size());\nAssert.assertEquals(\"John Doe\", qResult.get(0).field(\"name\"));\nAssert.assertEquals(\"Jane Smith\", qResult.get(1).field(\"name\"));\nAssert.assertTrue(qResult.get(0).field(\"friends\").contains(\"Alice\"));\nAssert.assertTrue(qResult.get(0).field(\"friends\").contains(\"Bob\"));\nAssert.assertTrue(qResult.get(1).field(\"friends\").contains(\"Alice\"));\nAssert.assertTrue(qResult.get(1).field(\"friends\").contains(\"Bob\"));\nAssert.assertEquals(\"arrow\", qResult.get(0).field(\"relationship\"));\nAssert.assertEquals(\"arrow\", qResult.get(1).field(\"relationship\"));\nAssert.assertTrue(qResult.get(0).field(\"age\") > 25);\nAssert.assertTrue(qResult.get(1).field(\"age\") > 25);\nAssert.assertTrue(qResult.get(0).field(\"address\").contains(\"123 Main St\"));\nAssert.assertTrue(qResult.get(1).field(\"address\").contains(\"456 Elm St\"));\nAssert.assertTrue(qResult.get(0).field(\"city\").equals(\"New York\"));\nAssert.assertTrue(qResult.get(1).field(\"city\").equals(\"Los Angeles\"));\nAssert.assertTrue(qResult.get(0).field(\"state\").equals(\"NY\"));\nAssert.assertTrue(qResult.get(1).field(\"state\").equals(\"CA\"));\nAssert.assertTrue(qResult.get(0).field(\"country\").equals(\"USA\"));\nAssert.assertTrue(qResult.get(1).field(\"country\").equals(\"USA\"));\n====================\n\n",
    "scores": [
        0.967,
        0.659,
        0.654,
        0.643,
        0.591,
        0.591,
        0.583,
        0.583,
        0.5,
        0.5,
        0.472,
        0.472,
        0.462,
        0.462,
        0.46,
        0.46,
        0.455,
        0.447,
        0.442,
        0.44
    ],
    "ground_truth": "assertEquals(1,qResult.size());"
}