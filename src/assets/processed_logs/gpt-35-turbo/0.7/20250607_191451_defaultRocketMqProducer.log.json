{
    "prompt": "Below is the focal class and test class for reference:\n\npackage rhwayfun.spring-boot-rocketmq-starter;\n\npublic class RocketMqAutoConfiguration {\npublic DefaultMQProducer getProducer ( ) {\nreturn producer ;\n}\n}\n\npackage rhwayfun.spring-boot-rocketmq-starter;\n\npublic class RocketMqAutoConfigurationTest {\n@Test\npublic void defaultRocketMqProducer ( ) {\nload ( \"STR\" + TEST_NAME_SERVER , \"STR\" + TEST_PRODUCER_GROUP ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "1. assertNotNull(producer);\n2. assertEquals(TEST_NAME_SERVER, producer.getNameServerAddress());\n3. assertEquals(TEST_PRODUCER_GROUP, producer.getProducerGroup());\n4. assertTrue(producer.isRetryAnotherBrokerWhenNotStoreOK());\n5. assertFalse(producer.isRetryTimesWhenSendFailed());\n6. assertTrue(producer.isRetryNextServer());\n7. assertEquals(3000, producer.getSendMsgTimeout());\n8. assertEquals(10000, producer.getCompressMsgBodyOverHowmuch());\n9. assertEquals(4, producer.getDefaultTopicQueueNums());\n10. assertEquals(32768, producer.getMaxMessageSize());\n11. assertEquals(1000, producer.getSendLatencyFaultEnableTime());\n12. assertEquals(500, producer.getCompressMsgBodyOverHowmuch());\n13. assertEquals(5, producer.getMaxRetryTimes());\n14. assertEquals(1000, producer.getRetryTimesWhenSendFailed());\n15. assertEquals(1000, producer.getRetryTimes());\n16. assertEquals(1000, producer.getCompressMsgBodyOverHowmuch());\n17. assertTrue(producer.isUnitMode());\n18. assertEquals(1000, producer.getPullTimeDelayMillsWhenException());\n19. assertEquals(3000, producer.getBrokerSuspendMaxTimeMillis());\n20. assertTrue(producer.isCompressMsgBodyOverHowmuch());\n====================\n\n",
    "scores": [
        0.488,
        0.45,
        0.396,
        0.388,
        0.347,
        0.346,
        0.29,
        0.27,
        0.253,
        0.247,
        0.245,
        0.244,
        0.244,
        0.237,
        0.229,
        0.226,
        0.226,
        0.224,
        0.222,
        0.208
    ],
    "ground_truth": "Assert.assertTrue(this.context.containsBean(\"STR\"));"
}