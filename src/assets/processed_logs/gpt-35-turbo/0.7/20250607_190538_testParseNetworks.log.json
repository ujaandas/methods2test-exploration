{
    "prompt": "Below is the focal class and test class for reference:\n\npackage OpenLiberty.ci.common;\n\npublic class DevUtil {\nprotected static String [ ] parseNetworks ( String dockerResult ) {\nif ( ! dockerResult . matches ( \"STR\" ) ) {\nreturn null ;\n} String networkMap = dockerResult . substring ( dockerResult . indexOf ( \"STR\" ) + 1 , dockerResult . indexOf ( \"STR\" ) ) ;\nString [ ] networkHex = networkMap . split ( \"STR\" ) ;\nString [ ] networks = new String [ networkHex . length ] ;\nfor ( int i = 0 ;\ni < networkHex . length ;\ni ++ ) {\nnetworks [ i ] = networkHex [ i ] . split ( \"STR\" ) [ 0 ] ;\n} return networks ;\n}\n}\n\npackage OpenLiberty.ci.common;\n\npublic class DevUtilTest {\n@Test\npublic void testParseNetworks ( ) {\nString [ ] networkArray = new String [ ] {\n\"STR\" } ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "Assert.assertNull(DevUtil.parseNetworks(null));\nAssert.assertNull(DevUtil.parseNetworks(\"\"));\nAssert.assertNull(DevUtil.parseNetworks(\"ABC\"));\nAssert.assertNull(DevUtil.parseNetworks(\"STR123STR\"));\nAssert.assertArrayEquals(new String[]{}, DevUtil.parseNetworks(\"STR\"));\nAssert.assertArrayEquals(new String[]{\"123\"}, DevUtil.parseNetworks(\"STR123STR\"));\nAssert.assertArrayEquals(new String[]{\"123\", \"456\"}, DevUtil.parseNetworks(\"STR123STR456STR\"));\nAssert.assertArrayEquals(new String[]{\"abc\", \"def\", \"ghi\"}, DevUtil.parseNetworks(\"STRabcSTRdefSTRghiSTR\"));\nAssert.assertEquals(1, DevUtil.parseNetworks(\"STR\").length);\nAssert.assertEquals(2, DevUtil.parseNetworks(\"STR123STR456STR\").length);\nAssert.assertEquals(3, DevUtil.parseNetworks(\"STRabcSTRdefSTRghiSTR\").length);\nAssert.assertNotEquals(null, DevUtil.parseNetworks(\"STR\"));\nAssert.assertNotEquals(new String[]{}, DevUtil.parseNetworks(\"STR123STR\"));\nAssert.assertNotEquals(new String[]{\"123\"}, DevUtil.parseNetworks(\"STR123STR456STR\"));\nAssert.assertNotEquals(new String[]{\"abc\", \"def\"}, DevUtil.parseNetworks(\"STRabcSTRdefSTRghiSTR\"));\nAssert.assertNotEquals(0, DevUtil.parseNetworks(\"STR\").length);\nAssert.assertNotEquals(1, DevUtil.parseNetworks(\"STR123STR456STR\").length);\nAssert.assertNotEquals(2, DevUtil.parseNetworks(\"STRabcSTRdefSTRghiSTR\").length);\n====================\n\n",
    "scores": [
        0.86,
        0.8,
        0.788,
        0.775,
        0.754,
        0.752,
        0.722,
        0.722,
        0.717,
        0.7,
        0.699,
        0.691,
        0.683,
        0.679,
        0.667,
        0.667,
        0.652,
        0.649
    ],
    "ground_truth": "assertArrayEquals(networkArray,DevUtil.parseNetworks(\"STR\"));"
}