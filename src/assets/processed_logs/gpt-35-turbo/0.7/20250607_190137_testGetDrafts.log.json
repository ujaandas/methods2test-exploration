{
    "prompt": "Below is the focal class and test class for reference:\n\npackage TooTallNate.Java-WebSocket;\n\npublic class WebSocketServer {\npublic Draft_6455 ( ) {\nthis ( Collections . < IExtension > emptyList ( ) ) ;\n}\n}\n\npackage TooTallNate.Java-WebSocket;\n\npublic class WebSocketServerTest {\n@Test\npublic void testGetDrafts ( ) {\nList < Draft > draftCollection = Collections . < Draft > singletonList ( new Draft_6455 ( ) ) ;\nCollection < WebSocket > webSocketCollection = new HashSet < WebSocket > ( ) ;\nInetSocketAddress inetAddress = new InetSocketAddress ( 1337 ) ;\nMyWebSocketServer server = new MyWebSocketServer ( inetAddress , 1 , draftCollection , webSocketCollection ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "Assert.assertEquals(server.getPort(), 1337);\nAssert.assertEquals(server.getConnectionLostTimeout(), 1);\nAssert.assertTrue(server.getDrafts().contains(new Draft_6455()));\nAssert.assertTrue(server.getWebSockets().isEmpty());\nAssert.assertTrue(server.getRemoteSocketAddress().equals(inetAddress));\nAssert.assertEquals(server.getDrafts().size(), 1);\nAssert.assertEquals(server.getWebSockets().size(), 0);\nAssert.assertTrue(server.getDrafts().containsAll(draftCollection));\nAssert.assertTrue(server.getWebSockets().containsAll(webSocketCollection));\nAssert.assertTrue(server.getDrafts().contains(new Draft_6455()));\nAssert.assertTrue(server.getWebSockets().isEmpty());\nAssert.assertTrue(server.getRemoteSocketAddress().equals(inetAddress));\nAssert.assertEquals(server.getDrafts().size(), 1);\nAssert.assertEquals(server.getWebSockets().size(), 0);\nAssert.assertTrue(server.getDrafts().containsAll(draftCollection));\nAssert.assertTrue(server.getWebSockets().containsAll(webSocketCollection));\nAssert.assertTrue(server.getDrafts().contains(new Draft_6455()));\nAssert.assertTrue(server.getWebSockets().isEmpty());\nAssert.assertTrue(server.getRemoteSocketAddress().equals(inetAddress));\n====================\n\n",
    "scores": [
        0.938,
        0.938,
        0.8,
        0.8,
        0.747,
        0.646,
        0.646,
        0.646,
        0.619,
        0.619,
        0.619,
        0.607,
        0.606,
        0.606,
        0.524,
        0.524,
        0.524,
        0.486,
        0.486
    ],
    "ground_truth": "assertEquals(1,server.getDraft().size());"
}