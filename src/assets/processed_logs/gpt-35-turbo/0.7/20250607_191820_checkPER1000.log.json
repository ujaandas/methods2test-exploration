{
    "prompt": "Below is the focal class and test class for reference:\n\npackage javadev.moneytostr-russian;\n\npublic class MoneyToStr {\npublic String convert ( Double theMoney ) {\nif ( theMoney == null ) {\nthrow new IllegalArgumentException ( \"STR\" ) ;\n} Long intPart = theMoney . longValue ( ) ;\nLong fractPart = Math . round ( ( theMoney - intPart ) * NUM100 ) ;\nif ( currency == Currency . PER1000 ) {\nfractPart = Math . round ( ( theMoney - intPart ) * NUM1000 ) ;\n} return convert ( intPart , fractPart ) ;\n}\n}\n\npackage javadev.moneytostr-russian;\n\npublic class MoneyToStrTest {\n@Test\npublic void checkPER1000 ( ) {\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertEquals(\"\u0434\u0432\u0430\u0434\u0446\u0430\u0442\u044c \u043e\u0434\u0438\u043d \u0440\u0443\u0431\u043b\u044c 50 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(21.50));\nassertEquals(\"\u0442\u0440\u0438\u0434\u0446\u0430\u0442\u044c \u0442\u0440\u0438 \u0440\u0443\u0431\u043b\u044f 33 \u043a\u043e\u043f\u0435\u0439\u043a\u0438\", moneyToStr.convert(33.33));\nassertEquals(\"\u0441\u043e\u0440\u043e\u043a \u0447\u0435\u0442\u044b\u0440\u0435 \u0440\u0443\u0431\u043b\u044f 44 \u043a\u043e\u043f\u0435\u0439\u043a\u0438\", moneyToStr.convert(44.44));\nassertEquals(\"\u043f\u044f\u0442\u044c\u0434\u0435\u0441\u044f\u0442 \u043f\u044f\u0442\u044c \u0440\u0443\u0431\u043b\u0435\u0439 55 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(55.55));\nassertEquals(\"\u0448\u0435\u0441\u0442\u044c\u0434\u0435\u0441\u044f\u0442 \u0448\u0435\u0441\u0442\u044c \u0440\u0443\u0431\u043b\u0435\u0439 66 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(66.66));\nassertEquals(\"\u0441\u0435\u043c\u044c\u0434\u0435\u0441\u044f\u0442 \u0441\u0435\u043c\u044c \u0440\u0443\u0431\u043b\u0435\u0439 77 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(77.77));\nassertEquals(\"\u0432\u043e\u0441\u0435\u043c\u044c\u0434\u0435\u0441\u044f\u0442 \u0432\u043e\u0441\u0435\u043c\u044c \u0440\u0443\u0431\u043b\u0435\u0439 88 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(88.88));\nassertEquals(\"\u0434\u0435\u0432\u044f\u043d\u043e\u0441\u0442\u043e \u0434\u0435\u0432\u044f\u0442\u044c \u0440\u0443\u0431\u043b\u0435\u0439 99 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(99.99));\nassertEquals(\"\u0441\u0442\u043e \u0440\u0443\u0431\u043b\u0435\u0439 00 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(100.00));\nassertEquals(\"\u0441\u0442\u043e \u043e\u0434\u0438\u043d \u0440\u0443\u0431\u043b\u044c 10 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(101.10));\nassertEquals(\"\u0434\u0432\u0435\u0441\u0442\u0438 \u0434\u0432\u0430 \u0440\u0443\u0431\u043b\u044f 20 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(202.20));\nassertEquals(\"\u0442\u0440\u0438\u0441\u0442\u0430 \u0442\u0440\u0438 \u0440\u0443\u0431\u043b\u044f 30 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(303.30));\nassertEquals(\"\u0447\u0435\u0442\u044b\u0440\u0435\u0441\u0442\u0430 \u0447\u0435\u0442\u044b\u0440\u0435 \u0440\u0443\u0431\u043b\u044f 40 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(404.40));\nassertEquals(\"\u043f\u044f\u0442\u044c\u0441\u043e\u0442 \u043f\u044f\u0442\u044c \u0440\u0443\u0431\u043b\u0435\u0439 50 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(505.50));\nassertEquals(\"\u0448\u0435\u0441\u0442\u044c\u0441\u043e\u0442 \u0448\u0435\u0441\u0442\u044c \u0440\u0443\u0431\u043b\u0435\u0439 60 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(606.60));\nassertEquals(\"\u0441\u0435\u043c\u044c\u0441\u043e\u0442 \u0441\u0435\u043c\u044c \u0440\u0443\u0431\u043b\u0435\u0439 70 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(707.70));\nassertEquals(\"\u0432\u043e\u0441\u0435\u043c\u044c\u0441\u043e\u0442 \u0432\u043e\u0441\u0435\u043c\u044c \u0440\u0443\u0431\u043b\u0435\u0439 80 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(808.80));\nassertEquals(\"\u0434\u0435\u0432\u044f\u0442\u044c\u0441\u043e\u0442 \u0434\u0435\u0432\u044f\u0442\u044c \u0440\u0443\u0431\u043b\u0435\u0439 90 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(909\n====================\n\n",
    "scores": [
        0.69,
        0.672,
        0.661,
        0.661,
        0.65,
        0.65,
        0.65,
        0.634,
        0.629,
        0.629,
        0.628,
        0.628,
        0.623,
        0.623,
        0.613,
        0.608,
        0.603,
        0.583
    ],
    "ground_truth": "assertEquals(\"STR\",moneyToStrPER1000.convert(12.346));"
}