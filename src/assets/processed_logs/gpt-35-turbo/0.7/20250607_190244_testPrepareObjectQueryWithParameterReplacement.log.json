{
    "prompt": "Below is the focal class and test class for reference:\n\npackage amlinv.stat-collection-utils;\n\npublic class ObjectQueryPreparer {\npublic Object getTarget ( ) {\nreturn target ;\n}\n}\n\npackage amlinv.stat-collection-utils;\n\npublic class ObjectQueryPreparerTest {\n@Test\npublic void testPrepareObjectQueryWithParameterReplacement ( ) throws Exception {\nObjectQueryInfo result ;\nthis . initPreparer ( ) ;\nMockito . when ( this . mockParameterReplacer . replaceObjectNameParameters ( TEST_ONAME_STR002 , this . testTarget002 ) ) . thenReturn ( TEST_ONAME_STR002B ) ;\nresult = this . preparer . prepareObjectQuery ( this . testTarget002 ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "Assert.assertNotNull(result);\nAssert.assertEquals(TEST_ONAME_STR002B, result.getObjectName());\nAssert.assertEquals(TEST_ONAME_STR002, result.getOriginalObjectName());\nAssert.assertEquals(TEST_TARGET_TYPE, result.getTargetType());\nAssert.assertEquals(TEST_TARGET_ID, result.getTargetId());\nAssert.assertEquals(TEST_TARGET_NAME, result.getTargetName());\nAssert.assertEquals(TEST_TARGET_DESCRIPTION, result.getTargetDescription());\nAssert.assertEquals(TEST_TARGET_VALUE, result.getTargetValue());\nAssert.assertEquals(TEST_TARGET_CATEGORY, result.getTargetCategory());\nAssert.assertEquals(TEST_TARGET_STATUS, result.getTargetStatus());\nAssert.assertEquals(TEST_TARGET_DATE, result.getTargetDate());\nAssert.assertEquals(TEST_TARGET_OWNER, result.getTargetOwner());\nAssert.assertEquals(TEST_TARGET_VERSION, result.getTargetVersion());\nAssert.assertEquals(TEST_TARGET_MODIFIED_DATE, result.getTargetModifiedDate());\nAssert.assertEquals(TEST_TARGET_CREATED_DATE, result.getTargetCreatedDate());\nAssert.assertEquals(TEST_TARGET_SIZE, result.getTargetSize());\nAssert.assertEquals(TEST_TARGET_LOCATION, result.getTargetLocation());\nAssert.assertEquals(TEST_TARGET_PARENT, result.getTargetParent());\nAssert.assertEquals(TEST_TARGET_CHILDREN, result.getTargetChildren());\nAssert.assertTrue(result.isActive());\n====================\n\n",
    "scores": [
        0.571,
        0.549,
        0.549,
        0.549,
        0.549,
        0.538,
        0.538,
        0.528,
        0.528,
        0.519,
        0.519,
        0.509,
        0.509,
        0.509,
        0.505,
        0.487,
        0.483,
        0.479,
        0.471,
        0.4
    ],
    "ground_truth": "assertSame(this.testTarget002,result.getTarget());"
}