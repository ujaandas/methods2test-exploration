{
    "prompt": "Below is the focal class and test class for reference:\n\npackage arnohaase.a-foundation.a-foundation;\n\npublic class AJsonSerHelper {\npublic void writeNumberLiteral ( double value , int numFracDigits ) throws IOException {\ncheckAcceptsValueAndPrefixComma ( ) ;\nout . write ( new DecimalFormat ( PATTERNS [ numFracDigits ] , DECIMAL_FORMAT_SYMBOLS ) . format ( value ) ) ;\nafterValueWritten ( ) ;\n}\n}\n\npackage arnohaase.a-foundation.a-foundation;\n\npublic class AJsonSerHelperTest {\n@Test\npublic void testDoubleWithFrac0 ( ) throws IOException {\nfinal ByteArrayOutputStream baos = new ByteArrayOutputStream ( ) ;\nfinal AJsonSerHelper ser = new AJsonSerHelper ( baos ) ;\nser . writeNumberLiteral ( 1.23 , 0 ) ;\nfinal String result = new String ( baos . toByteArray ( ) , \"STR\" ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertEquals(\"1\", result);\nassertNotEquals(\"1.23\", result);\nassertNotEquals(\"1.230\", result);\nassertTrue(result.startsWith(\"1\"));\nassertFalse(result.endsWith(\".\"));\nassertTrue(result.contains(\"1\"));\nassertFalse(result.contains(\"23\"));\nassertTrue(result.matches(\"\\\\d+\"));\nassertFalse(result.isEmpty());\nassertTrue(result.length() > 0);\nassertFalse(result.equals(\"1.23\"));\nassertFalse(result.equals(\"1.230\"));\nassertTrue(result.contains(\"1.2\"));\nassertFalse(result.contains(\"1.23\"));\nassertTrue(result.matches(\"\\\\d+\\\\.\\\\d+\"));\nassertFalse(result.matches(\"\\\\d+\\\\.\\\\d+\\\\d\"));\nassertTrue(result.matches(\"\\\\d+\\\\.\\\\d\"));\nassertFalse(result.matches(\"\\\\d+\\\\.\\\\d\\\\d\"));\nassertTrue(result.matches(\"\\\\d+\\\\.\\\\d{2}\"));\nassertFalse(result.matches(\"\\\\d+\\\\.\\\\d{3}\"));\n====================\n\n",
    "scores": [
        0.92,
        0.821,
        0.807,
        0.618,
        0.576,
        0.567,
        0.548,
        0.545,
        0.517,
        0.5,
        0.5,
        0.5,
        0.5,
        0.492,
        0.486,
        0.486,
        0.479,
        0.455,
        0.448,
        0.435
    ],
    "ground_truth": "assertEquals(\"STR\",result);"
}