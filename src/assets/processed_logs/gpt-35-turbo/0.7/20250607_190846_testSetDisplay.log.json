{
    "prompt": "Below is the focal class and test class for reference:\n\npackage adlnet.jxapi;\n\npublic class Verb {\npublic HashMap < String , String > getDisplay ( ) {\nreturn display ;\n}\n}\n\npackage adlnet.jxapi;\n\npublic class VerbTest {\n@Test\npublic void testSetDisplay ( ) {\nHashMap < String , String > expected = new HashMap < String , String > ( ) ;\nexpected . put ( \"STR\" , \"STR\" ) ;\nverb . setDisplay ( expected ) ;\nHashMap < String , String > actual = verb . getDisplay ( ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertEquals(expected.size(), actual.size());\nassertTrue(expected.containsKey(\"STR\"));\nassertTrue(expected.containsValue(\"STR\"));\nassertTrue(actual.containsKey(\"STR\"));\nassertTrue(actual.containsValue(\"STR\"));\nassertEquals(expected.get(\"STR\"), actual.get(\"STR\"));\nassertTrue(actual.keySet().containsAll(expected.keySet()));\nassertTrue(actual.values().containsAll(expected.values()));\nassertEquals(expected, actual);\nassertNotNull(actual);\nassertNotNull(verb);\nassertSame(expected, verb.getDisplay());\nassertNotSame(expected, actual);\nassertNotEquals(expected, actual);\nassertFalse(actual.isEmpty());\nassertTrue(actual.size() > 0);\nassertFalse(expected.isEmpty());\nassertTrue(expected.size() > 0);\nassertTrue(actual.keySet().size() == expected.keySet().size());\nassertTrue(actual.values().size() == expected.values().size());\n====================\n\n",
    "scores": [
        1.0,
        0.75,
        0.717,
        0.667,
        0.625,
        0.6,
        0.56,
        0.517,
        0.5,
        0.469,
        0.44,
        0.423,
        0.419,
        0.417,
        0.4,
        0.38,
        0.38,
        0.373,
        0.37,
        0.37
    ],
    "ground_truth": "assertNotNull(actual);"
}