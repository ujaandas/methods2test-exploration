{
    "prompt": "Below is the focal class and test class for reference:\n\npackage adlnet.jxapi;\n\npublic class Statement {\npublic String getVersion ( ) {\nreturn version ;\n}\n}\n\npackage adlnet.jxapi;\n\npublic class StatementTest {\n@Test\npublic void testSetVersion ( ) {\nString expected = \"STR\" ;\nstatement . setVersion ( expected ) ;\nString actual = statement . getVersion ( ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertEquals(expected, actual);\nassertNotNull(actual);\nassertSame(expected, actual);\nassertTrue(actual.equals(expected));\nassertFalse(actual.isEmpty());\nassertNotSame(expected, \"ABC\");\nassertThat(actual, is(expected));\nassertArrayEquals(expected.toCharArray(), actual.toCharArray());\nassertThat(actual, containsString(expected));\nassertThat(actual, startsWith(expected));\nassertThat(actual, endsWith(expected));\nassertThat(actual, instanceOf(String.class));\nassertThat(actual, notNullValue());\nassertThat(actual, equalToIgnoringCase(expected));\nassertThat(actual, not(equalToIgnoringWhiteSpace(expected)));\nassertThat(actual, hasLength(expected.length()));\nassertThat(actual, not(hasSize(0)));\nassertThat(actual, containsInAnyOrder(expected.split(\"\")));\nassertThat(actual, equalToIgnoringCase(expected));\n====================\n\n",
    "scores": [
        1.0,
        0.6,
        0.583,
        0.577,
        0.56,
        0.556,
        0.545,
        0.536,
        0.52,
        0.517,
        0.5,
        0.469,
        0.469,
        0.441,
        0.435,
        0.435,
        0.385,
        0.375,
        0.361
    ],
    "ground_truth": "assertNotNull(actual);"
}