{
    "prompt": "Below is the focal class and test class for reference:\n\npackage DigitalPebble.storm-crawler.core;\n\npublic class StackOverflow {\npublic Metadata ( ) {\nmd = new HashMap < > ( ) ;\n}\n}\n\npackage DigitalPebble.storm-crawler.core;\n\npublic class StackOverflowTest {\n@Test\npublic void testNamespaceExtraction ( ) throws IOException {\nprepareParserBolt ( \"STR\" ) ;\nMetadata metadata = new Metadata ( ) ;\nparse ( \"STR\" , \"STR\" , metadata ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "Assert.assertEquals(\"Expected value\", actualValue, metadata.get(\"key\"));\nAssert.assertTrue(metadata.containsKey(\"key\"));\nAssert.assertFalse(metadata.isEmpty());\nAssert.assertNull(metadata.get(\"nonExistentKey\"));\nAssert.assertNotNull(metadata.get(\"key\"));\nAssert.assertNotEquals(\"Unexpected value\", unexpectedValue, metadata.get(\"key\"));\nAssert.assertTrue(metadata.size() > 0);\nAssert.assertEquals(\"Expected size\", expectedSize, metadata.size());\nAssert.assertNotSame(\"Objects should not be the same\", object1, object2);\nAssert.assertSame(\"Objects should be the same\", object1, object1Copy);\nAssert.assertTrue(metadata.containsValue(\"value\"));\nAssert.assertTrue(metadata.keySet().contains(\"key\"));\nAssert.assertTrue(metadata.values().contains(\"value\"));\nAssert.assertTrue(metadata.entrySet().contains(new AbstractMap.SimpleEntry<>(\"key\", \"value\")));\nAssert.assertArrayEquals(expectedArray, metadata.keySet().toArray());\nAssert.assertEquals(\"Expected hash code\", expectedHashCode, metadata.hashCode());\nAssert.assertTrue(metadata.equals(metadataCopy));\nAssert.assertTrue(metadata.toString().contains(\"key\"));\nAssert.assertNotEquals(\"Unexpected hash code\", unexpectedHashCode, metadata.hashCode());\n====================\n\n",
    "scores": [
        0.535,
        0.525,
        0.493,
        0.476,
        0.471,
        0.466,
        0.446,
        0.437,
        0.432,
        0.421,
        0.41,
        0.407,
        0.404,
        0.395,
        0.382,
        0.346,
        0.329,
        0.286,
        0.26
    ],
    "ground_truth": "Assert.assertEquals(1,output.getEmitted().size());"
}