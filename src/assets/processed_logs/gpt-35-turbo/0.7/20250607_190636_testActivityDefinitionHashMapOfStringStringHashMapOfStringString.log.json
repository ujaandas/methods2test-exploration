{
    "prompt": "Below is the focal class and test class for reference:\n\npackage adlnet.jxapi;\n\npublic class ActivityDefinition {\npublic ActivityDefinition ( HashMap < String , String > name , HashMap < String , String > description ) {\nthis . name = name ;\nthis . description = description ;\n}\n}\n\npackage adlnet.jxapi;\n\npublic class ActivityDefinitionTest {\n@Test\npublic void testActivityDefinitionHashMapOfStringStringHashMapOfStringString ( ) {\nHashMap < String , String > name = new HashMap < String , String > ( ) ;\nHashMap < String , String > description = new HashMap < String , String > ( ) ;\nname . put ( \"STR\" , \"STR\" ) ;\ndescription . put ( \"STR\" , \"STR\" ) ;\nActivityDefinition ad = new ActivityDefinition ( name , description ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "Assert.assertEquals(\"STR\", ad.getName().get(\"STR\"));\nAssert.assertEquals(\"STR\", ad.getDescription().get(\"STR\"));\nAssert.assertNotNull(ad.getName());\nAssert.assertNotNull(ad.getDescription());\nAssert.assertTrue(ad.getName().containsKey(\"STR\"));\nAssert.assertTrue(ad.getDescription().containsKey(\"STR\"));\nAssert.assertTrue(ad.getName().containsValue(\"STR\"));\nAssert.assertTrue(ad.getDescription().containsValue(\"STR\"));\nAssert.assertEquals(1, ad.getName().size());\nAssert.assertEquals(1, ad.getDescription().size());\nAssert.assertNotEquals(ad.getName(), ad.getDescription());\nAssert.assertNotSame(ad.getName(), ad.getDescription());\nAssert.assertTrue(ad.getName().equals(ad.getName()));\nAssert.assertTrue(ad.getDescription().equals(ad.getDescription()));\nAssert.assertSame(name, ad.getName());\nAssert.assertSame(description, ad.getDescription());\nAssert.assertNotSame(name, ad.getDescription());\nAssert.assertNotSame(description, ad.getName());\nAssert.assertTrue(ad.getName() instanceof HashMap);\nAssert.assertTrue(ad.getDescription() instanceof HashMap);\n====================\n\n",
    "scores": [
        0.773,
        0.667,
        0.464,
        0.464,
        0.455,
        0.435,
        0.407,
        0.406,
        0.385,
        0.379,
        0.367,
        0.358,
        0.355,
        0.355,
        0.338,
        0.333,
        0.333,
        0.328,
        0.319,
        0.289
    ],
    "ground_truth": "assertNotNull(ad);"
}