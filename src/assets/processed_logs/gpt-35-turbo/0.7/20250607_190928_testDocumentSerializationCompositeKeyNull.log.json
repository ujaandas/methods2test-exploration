{
    "prompt": "Below is the focal class and test class for reference:\n\npackage orientechnologies.orientdb.core;\n\npublic class OCompositeKey {\n@Override\npublic void fromDocument ( ODocument document ) {\ndocument . setLazyLoad ( false ) ;\nfinal String [ ] fieldNames = document . fieldNames ( ) ;\nfinal SortedMap < Integer , Object > keyMap = new TreeMap < Integer , Object > ( ) ;\nfor ( String fieldName : fieldNames ) {\nif ( fieldName . startsWith ( \"STR\" ) ) {\nfinal String keyIndex = fieldName . substring ( 3 ) ;\nkeyMap . put ( Integer . valueOf ( keyIndex ) , document . field ( fieldName ) ) ;\n} } keys . clear ( ) ;\nfor ( Object value : keyMap . values ( ) ) keys . add ( value ) ;\n}\n}\n\npackage orientechnologies.orientdb.core;\n\npublic class OCompositeKeyTest {\n@Test\npublic void testDocumentSerializationCompositeKeyNull ( ) {\nfinal OCompositeKey compositeKeyOne = new OCompositeKey ( ) ;\ncompositeKeyOne . addKey ( 1 ) ;\ncompositeKeyOne . addKey ( null ) ;\ncompositeKeyOne . addKey ( 2 ) ;\nODocument document = compositeKeyOne . toDocument ( ) ;\nfinal OCompositeKey compositeKeyTwo = new OCompositeKey ( ) ;\ncompositeKeyTwo . fromDocument ( document ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "Assert.assertEquals(1, compositeKeyTwo.getKeys().get(0));\nAssert.assertNull(compositeKeyTwo.getKeys().get(1));\nAssert.assertEquals(2, compositeKeyTwo.getKeys().get(2));\nAssert.assertEquals(3, compositeKeyTwo.getKeys().size());\nAssert.assertFalse(document.isLazyLoad());\nAssert.assertEquals(3, document.fieldNames().length);\nAssert.assertEquals(1, document.field(\"STR1\"));\nAssert.assertNull(document.field(\"STR2\"));\nAssert.assertEquals(2, document.field(\"STR3\"));\nAssert.assertTrue(compositeKeyOne.equals(compositeKeyTwo));\nAssert.assertEquals(compositeKeyOne.hashCode(), compositeKeyTwo.hashCode());\nAssert.assertEquals(compositeKeyOne.toString(), compositeKeyTwo.toString());\nAssert.assertNotNull(compositeKeyTwo.toDocument());\nAssert.assertTrue(compositeKeyTwo.toDocument() instanceof ODocument);\nAssert.assertNotNull(compositeKeyTwo.getKeys());\nAssert.assertTrue(compositeKeyTwo.getKeys() instanceof List);\nAssert.assertTrue(compositeKeyTwo.getKeys().contains(null));\nAssert.assertTrue(compositeKeyTwo.getKeys().containsAll(compositeKeyOne.getKeys()));\nAssert.assertTrue(compositeKeyTwo.getKeys().containsAll(Arrays.asList(1, null, 2)));\n====================\n\n",
    "scores": [
        0.804,
        0.804,
        0.645,
        0.645,
        0.645,
        0.588,
        0.583,
        0.568,
        0.562,
        0.5,
        0.496,
        0.495,
        0.462,
        0.458,
        0.458,
        0.404,
        0.403,
        0.38,
        0.329
    ],
    "ground_truth": "assertEquals(compositeKeyOne,compositeKeyTwo);"
}