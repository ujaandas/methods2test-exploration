{
    "prompt": "Below is the focal class and test class for reference:\n\npackage DigitalPebble.storm-crawler.core;\n\npublic class BasicURLNormalizer {\npublic String filter ( URL sourceUrl , Metadata sourceMetadata , String urlToFilter ) ;\n}\n\npackage DigitalPebble.storm-crawler.core;\n\npublic class BasicURLNormalizerTest {\n@Test\npublic void testAnchorFilterFalse ( ) throws MalformedURLException {\nURLFilter allAllowed = createFilter ( false , false ) ;\nURL url = new URL ( \"STR\" ) ;\nMetadata metadata = new Metadata ( ) ;\nString filterResult = allAllowed . filter ( url , metadata , url . toExternalForm ( ) ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "Assertions:\n\n1. assertNotNull(filterResult)\n2. assertEquals(\"STR\", filterResult)\n3. assertTrue(filterResult.startsWith(\"http://\"))\n4. assertFalse(filterResult.endsWith(\"/\"))\n5. assertTrue(filterResult.contains(\"example.com\"))\n6. assertFalse(filterResult.contains(\" \"))\n7. assertFalse(filterResult.contains(\"#\"))\n8. assertTrue(filterResult.matches(\"^(http|https)://.*$\"))\n9. assertFalse(filterResult.isEmpty())\n10. assertTrue(filterResult.length() > 0)\n11. assertTrue(filterResult.charAt(0) == 'h')\n12. assertFalse(filterResult.equals(\"google.com\"))\n13. assertTrue(filterResult.contains(\".com\"))\n14. assertTrue(filterResult.startsWith(\"http://\") || filterResult.startsWith(\"https://\"))\n15. assertFalse(filterResult.contains(\"ftp://\"))\n16. assertTrue(filterResult.endsWith(\".com\"))\n17. assertFalse(filterResult.contains(\"localhost\"))\n18. assertTrue(filterResult.matches(\"^https?://.*$\"))\n19. assertFalse(filterResult.endsWith(\"index.html\"))\n20. assertTrue(filterResult.matches(\"^(http|https)://(www\\\\.)?example\\\\.com(.*)$\"))\n====================\n\n",
    "scores": [
        0.029
    ],
    "ground_truth": "Assert.assertEquals(url.toExternalForm(),filterResult);"
}