{
    "prompt": "Below is the focal class and test class for reference:\n\npackage javadev.moneytostr-russian;\n\npublic class MoneyToStr {\npublic String convert ( Double theMoney ) {\nif ( theMoney == null ) {\nthrow new IllegalArgumentException ( \"STR\" ) ;\n} Long intPart = theMoney . longValue ( ) ;\nLong fractPart = Math . round ( ( theMoney - intPart ) * NUM100 ) ;\nif ( currency == Currency . PER1000 ) {\nfractPart = Math . round ( ( theMoney - intPart ) * NUM1000 ) ;\n} return convert ( intPart , fractPart ) ;\n}\n}\n\npackage javadev.moneytostr-russian;\n\npublic class MoneyToStrTest {\n@Test\npublic void checkRURUKR ( ) {\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertEquals(\"\u0441\u0442\u043e \u0434\u0432\u0430\u0434\u0446\u0430\u0442\u044c \u0442\u0440\u0438 \u0440\u0443\u0431\u043b\u044f 45 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(123.45));\nassertEquals(\"\u0434\u0432\u0435 \u0442\u044b\u0441\u044f\u0447\u0438 \u0440\u0443\u0431\u043b\u0435\u0439 0 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(2000.0));\nassertEquals(\"\u043f\u044f\u0442\u044c \u0440\u0443\u0431\u043b\u0435\u0439 60 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(5.6));\nassertEquals(\"\u0434\u0432\u0430\u0434\u0446\u0430\u0442\u044c \u043e\u0434\u0438\u043d \u0440\u0443\u0431\u043b\u044c 0 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(21.0));\nassertEquals(\"\u043f\u044f\u0442\u044c\u0441\u043e\u0442 \u0440\u0443\u0431\u043b\u0435\u0439 99 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(500.99));\nassertEquals(\"\u0434\u0432\u0430\u0434\u0446\u0430\u0442\u044c \u0440\u0443\u0431\u043b\u0435\u0439 50 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(20.5));\nassertEquals(\"\u0442\u0440\u0438\u0441\u0442\u0430 \u0440\u0443\u0431\u043b\u0435\u0439 75 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(300.75));\nassertEquals(\"\u0447\u0435\u0442\u044b\u0440\u0435\u0441\u0442\u0430 \u0440\u0443\u0431\u043b\u0435\u0439 0 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(400.0));\nassertEquals(\"\u0448\u0435\u0441\u0442\u044c \u0440\u0443\u0431\u043b\u0435\u0439 2 \u043a\u043e\u043f\u0435\u0439\u043a\u0438\", moneyToStr.convert(6.02));\nassertEquals(\"\u0442\u044b\u0441\u044f\u0447\u0430 \u0440\u0443\u0431\u043b\u0435\u0439 0 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(1000.0));\nassertEquals(\"\u043f\u044f\u0442\u044c\u0434\u0435\u0441\u044f\u0442 \u0440\u0443\u0431\u043b\u0435\u0439 0 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(50.0));\nassertEquals(\"\u043f\u044f\u0442\u044c\u0441\u043e\u0442 \u0440\u0443\u0431\u043b\u0435\u0439 0 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(500.0));\nassertEquals(\"\u0434\u0432\u0435\u0441\u0442\u0438 \u0440\u0443\u0431\u043b\u0435\u0439 99 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(200.99));\nassertEquals(\"\u043f\u044f\u0442\u044c\u0434\u0435\u0441\u044f\u0442 \u043f\u044f\u0442\u044c \u0440\u0443\u0431\u043b\u0435\u0439 45 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(55.45));\nassertEquals(\"\u0442\u0440\u0438 \u0440\u0443\u0431\u043b\u044f 33 \u043a\u043e\u043f\u0435\u0439\u043a\u0438\", moneyToStr.convert(3.33));\nassertEquals(\"\u0441\u0435\u043c\u044c\u0441\u043e\u0442 \u0440\u0443\u0431\u043b\u0435\u0439 0 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(700.0));\nassertEquals(\"\u0434\u0432\u0435\u0441\u0442\u0438 \u0440\u0443\u0431\u043b\u0435\u0439 50 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(200.5));\nassertEquals(\"\u0448\u0435\u0441\u0442\u044c\u0434\u0435\u0441\u044f\u0442 \u0440\u0443\u0431\u043b\u0435\u0439 1 \u043a\u043e\u043f\u0435\u0439\u043a\u0430\", moneyToStr.convert(60.01));\nassertEquals(\"\u0434\u0432\u0430\u0434\u0446\u0430\u0442\u044c \u0440\u0443\u0431\u043b\u0435\u0439 0 \u043a\u043e\u043f\u0435\u0435\u043a\", moneyToStr.convert(20.0));\n====================\n\n",
    "scores": [
        0.714,
        0.71,
        0.703,
        0.703,
        0.703,
        0.703,
        0.703,
        0.697,
        0.696,
        0.696,
        0.692,
        0.69,
        0.69,
        0.684,
        0.679,
        0.678,
        0.667,
        0.639,
        0.627
    ],
    "ground_truth": "assertEquals(\"STR\",moneyToStrRUR.convert(V_300D));"
}