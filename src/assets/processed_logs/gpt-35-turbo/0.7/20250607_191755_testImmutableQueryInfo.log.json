{
    "prompt": "Below is the focal class and test class for reference:\n\npackage amlinv.stat-collection-utils;\n\npublic class ObjectQueryInfo {\npublic Object getTarget ( ) {\nreturn target ;\n}\n}\n\npackage amlinv.stat-collection-utils;\n\npublic class ObjectQueryInfoTest {\n@Test\npublic void testImmutableQueryInfo ( ) throws Exception {\nMap < String , Method > setters = new HashMap < > ( ) ;\nsetters . put ( \"STR\" , null ) ;\nsetters . put ( \"STR\" , null ) ;\nObject target = new Object ( ) ;\nObjectName oname = new ObjectName ( \"STR\" ) ;\nObjectQueryInfo objectQueryInfo = new ObjectQueryInfo ( target , oname , setters ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "\nAssert.assertEquals(target, objectQueryInfo.getTarget());\nAssert.assertNotNull(objectQueryInfo.getObjectName());\nAssert.assertEquals(\"STR\", objectQueryInfo.getObjectName().toString());\nAssert.assertEquals(2, objectQueryInfo.getSetters().size());\nAssert.assertTrue(objectQueryInfo.getSetters().containsKey(\"STR\"));\nAssert.assertNull(objectQueryInfo.getSetters().get(\"STR\"));\nAssert.assertNotEquals(target, new Object());\nAssert.assertNotSame(target, new Object());\nAssert.assertTrue(objectQueryInfo instanceof ObjectQueryInfo);\nAssert.assertFalse(objectQueryInfo.getObjectName().isEmpty());\nAssert.assertTrue(objectQueryInfo.getSetters().containsValue(null));\nAssert.assertTrue(objectQueryInfo.getSetters().keySet().containsAll(setters.keySet()));\nAssert.assertTrue(objectQueryInfo.getSetters().values().containsAll(setters.values()));\nAssert.assertTrue(objectQueryInfo.getObjectName().equals(new ObjectName(\"STR\")));\nAssert.assertTrue(objectQueryInfo.getSetters().equals(setters));\nAssert.assertTrue(objectQueryInfo.hashCode() == objectQueryInfo.hashCode());\nAssert.assertArrayEquals(new Object[]{target, oname, setters}, new Object[]{objectQueryInfo.getTarget(), objectQueryInfo.getObjectName(), objectQueryInfo.getSetters()});\nAssert.assertSame(target, objectQueryInfo.getTarget());\nAssert.assertEquals(target.toString(), objectQueryInfo.toString());\nAssert.assertTrue(objectQueryInfo.getObjectName().equals(oname));\n====================\n\n",
    "scores": [
        1.0,
        0.915,
        0.68,
        0.68,
        0.68,
        0.674,
        0.673,
        0.658,
        0.627,
        0.621,
        0.611,
        0.61,
        0.604,
        0.568,
        0.554,
        0.551,
        0.544,
        0.542,
        0.512,
        0.43
    ],
    "ground_truth": "assertSame(target,objectQueryInfo.getTarget());"
}