{
    "prompt": "Below is the focal class and test class for reference:\n\npackage orientechnologies.orientdb.graphdb;\n\npublic class OMatchStatementExecution {\n< RET > RET execute ( Object ... iArgs ) ;\n}\n\npackage orientechnologies.orientdb.graphdb;\n\npublic class OMatchStatementExecutionTest {\n@Test\npublic void testFriendsWithName ( ) throws Exception {\nList < ODocument > qResult = db . command ( new OCommandSQL ( \"STR\" ) ) . execute ( ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertNotNull(qResult);\nassertEquals(5, qResult.size());\nassertTrue(qResult.get(0).containsField(\"name\"));\nassertEquals(\"John\", qResult.get(0).field(\"name\"));\nassertFalse(qResult.isEmpty());\nassertNotEquals(0, qResult.size());\nassertTrue(qResult.get(0).field(\"age\") instanceof Integer);\nassertTrue(qResult.get(0).field(\"isFriend\") instanceof Boolean);\nassertNull(qResult.get(0).field(\"address\"));\nassertTrue(qResult.get(0).containsField(\"city\"));\nassertEquals(\"New York\", qResult.get(0).field(\"city\"));\nassertTrue(qResult.get(0).containsField(\"country\"));\nassertEquals(\"USA\", qResult.get(0).field(\"country\"));\nassertFalse(qResult.get(0).containsField(\"email\"));\nassertTrue(qResult.get(0).containsField(\"phoneNumber\"));\nassertEquals(\"555-1234\", qResult.get(0).field(\"phoneNumber\"));\nassertEquals(\"Jane\", qResult.get(1).field(\"name\"));\nassertEquals(\"Alice\", qResult.get(2).field(\"name\"));\nassertEquals(\"Bob\", qResult.get(3).field(\"name\"));\nassertTrue(qResult.get(4).containsField(\"name\"));\nassertEquals(\"Mike\", qResult.get(4).field(\"name\"));\n====================\n\n",
    "scores": [
        0.967,
        0.921,
        0.733,
        0.692,
        0.684,
        0.684,
        0.684,
        0.675,
        0.667,
        0.659,
        0.654,
        0.622,
        0.6,
        0.564,
        0.564,
        0.564,
        0.548,
        0.543,
        0.518,
        0.462,
        0.442
    ],
    "ground_truth": "assertEquals(1,qResult.size());"
}