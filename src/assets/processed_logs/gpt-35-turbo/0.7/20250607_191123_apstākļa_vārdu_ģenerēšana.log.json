{
    "prompt": "Below is the focal class and test class for reference:\n\npackage PeterisP.morphology;\n\npublic class Morphology {\npublic ArrayList < Wordform > generateInflections ( String lemma ) {\nreturn generateInflections ( lemma , false ) ;\n}\n}\n\npackage PeterisP.morphology;\n\npublic class MorphologyTest {\n@Test\npublic void apst\u0101k\u013ca_v\u0101rdu_\u0123ener\u0113\u0161ana ( ) {\nList < Wordform > formas = loc\u012bt\u0101js . generateInflections ( \"STR\" ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertEquals(3, formas.size());\nassertEquals(\"STR\", formas.get(0).getLemma());\nassertEquals(\"STR\", formas.get(1).getLemma());\nassertEquals(\"STR\", formas.get(2).getLemma());\nassertEquals(\"STR\", formas.get(0).getForm());\nassertEquals(\"STR\", formas.get(1).getForm());\nassertEquals(\"STR\", formas.get(2).getForm());\nassertEquals(Wordform.POSITIVE, formas.get(0).getDegree());\nassertEquals(Wordform.COMPARATIVE, formas.get(1).getDegree());\nassertEquals(Wordform.SUPERLATIVE, formas.get(2).getDegree());\nassertEquals(Wordform.NOMINATIVE, formas.get(0).getCase());\nassertEquals(Wordform.GENITIVE, formas.get(1).getCase());\nassertEquals(Wordform.DATIVE, formas.get(2).getCase());\nassertEquals(Wordform.SINGULAR, formas.get(0).getNumber());\nassertEquals(Wordform.PLURAL, formas.get(1).getNumber());\nassertEquals(Wordform.DUAL, formas.get(2).getNumber());\nassertEquals(\"masculine\", formas.get(0).getGender());\nassertEquals(\"feminine\", formas.get(1).getGender());\nassertEquals(\"neuter\", formas.get(2).getGender());\nassertEquals(\"first\", formas.get(0).getPerson());\nassertEquals(\"second\", formas.get(1).getPerson());\nassertEquals(\"third\", formas.get(2).getPerson());\n====================\n\n",
    "scores": [
        0.966,
        0.694,
        0.694,
        0.694,
        0.685,
        0.685,
        0.685,
        0.658,
        0.658,
        0.649,
        0.649,
        0.634,
        0.633,
        0.625,
        0.619,
        0.61,
        0.605,
        0.595,
        0.581,
        0.581,
        0.562,
        0.562
    ],
    "ground_truth": "assertEquals(1,formas.size());"
}