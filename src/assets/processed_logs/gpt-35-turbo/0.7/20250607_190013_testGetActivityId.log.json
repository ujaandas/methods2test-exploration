{
    "prompt": "Below is the focal class and test class for reference:\n\npackage adlnet.jxapi;\n\npublic class ActivityProfile {\npublic String getActivityId ( ) {\nreturn activityId ;\n}\n}\n\npackage adlnet.jxapi;\n\npublic class ActivityProfileTest {\n@Test\npublic void testGetActivityId ( ) {\nString expected = \"STR\" ;\nString actual = activityProfile . getActivityId ( ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertEquals(expected, actual);\nassertNotNull(actual);\nassertNotEquals(\"ABC\", actual);\nassertTrue(actual.contains(\"S\"));\nassertFalse(actual.isEmpty());\nassertEquals(3, actual.length());\nassertThat(actual, is(equalToIgnoringCase(\"str\")));\nassertThat(actual, startsWith(\"S\"));\nassertThat(actual, endsWith(\"R\"));\nassertTrue(actual.matches(\"[A-Z]+\"));\nassertThat(actual, instanceOf(String.class));\nassertThat(actual, is(notNullValue()));\nassertThat(actual, is(not(equalTo(\"XYZ\"))));\nassertThat(actual, is(not(emptyString())));\nassertThat(actual, containsString(\"T\"));\nassertThat(actual, equalToIgnoringCase(\"str\"));\nassertThat(actual, is(not(equalToIgnoringCase(\"abc\"))));\nassertThat(actual, matchesPattern(\"[A-Z]+\"));\nassertThat(actual, isA(String.class));\nassertThat(actual, is(not(emptyOrNullString()));\n====================\n\n",
    "scores": [
        1.0,
        0.76,
        0.615,
        0.6,
        0.566,
        0.566,
        0.56,
        0.545,
        0.526,
        0.526,
        0.517,
        0.508,
        0.484,
        0.476,
        0.469,
        0.469,
        0.455,
        0.448,
        0.429,
        0.4
    ],
    "ground_truth": "assertNotNull(actual);"
}