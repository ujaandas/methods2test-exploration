{
    "prompt": "Below is the focal class and test class for reference:\n\npackage adlnet.jxapi;\n\npublic class Result {\npublic String getDuration ( ) {\nreturn duration ;\n}\n}\n\npackage adlnet.jxapi;\n\npublic class ResultTest {\n@Test\npublic void testGetDuration ( ) {\nString expected = DURATION ;\nString actual = result . getDuration ( ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "Assert.assertEquals(expected, actual);\nAssert.assertNotNull(actual);\nAssert.assertNotEquals(expected, actual);\nAssert.assertTrue(actual.contains(\"expectedSubstring\"));\nAssert.assertFalse(actual.isEmpty());\nAssert.assertNull(null);\nAssert.assertSame(expected, actual);\nAssert.assertNotSame(expected, actual);\nAssert.assertTrue(actual.startsWith(\"expectedPrefix\"));\nAssert.assertFalse(actual.endsWith(\"expectedSuffix\"));\nAssert.assertTrue(actual.matches(\"expectedRegex\"));\nAssert.assertEqualsIgnoringCase(expected, actual);\nAssert.assertArrayEquals(expectedArray, actualArray);\nAssert.assertNotEquals(expectedList, actualList);\nAssert.assertThrows(Exception.class, () -> result.getDuration());\nAssert.assertTrue(actual.length() > 0);\nAssert.assertTrue(actual.contains(expected));\nAssert.assertTrue(actual.matches(\"\\\\d+\"));\nAssert.assertTrue(actual.matches(\"[a-zA-Z]+\"));\nAssert.assertTrue(actual.containsIgnoreCase(\"expectedSubstring\"));\n====================\n\n",
    "scores": [
        1.0,
        0.757,
        0.717,
        0.667,
        0.623,
        0.6,
        0.6,
        0.583,
        0.56,
        0.545,
        0.517,
        0.5,
        0.484,
        0.469,
        0.448,
        0.441,
        0.435,
        0.431,
        0.38,
        0.32
    ],
    "ground_truth": "assertNotNull(actual);"
}