{
    "prompt": "Below is the focal class and test class for reference:\n\npackage sofastack.sofa-bolt;\n\npublic class RpcConnectionManager {\n@Override\npublic List < Connection > getAll ( String poolKey ) {\nConnectionPool pool = this . getConnectionPool ( this . connTasks . get ( poolKey ) ) ;\nreturn null == pool ? new ArrayList < Connection > ( ) : pool . getAll ( ) ;\n}\n}\n\npackage sofastack.sofa-bolt;\n\npublic class RpcConnectionManagerTest {\n@Test\npublic void testGetAllWithPoolKey ( ) {\ncm . add ( getAConn ( ) ) ;\ncm . add ( getAConn ( ) ) ;\ncm . add ( getAConn ( ) ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "Assert.assertEquals(3, cm.getAll(\"poolKey\").size());\nAssert.assertTrue(cm.getAll(\"poolKey\").contains(conn1));\nAssert.assertTrue(cm.getAll(\"poolKey\").contains(conn2));\nAssert.assertTrue(cm.getAll(\"poolKey\").contains(conn3));\nAssert.assertFalse(cm.getAll(\"poolKey\").isEmpty());\nAssert.assertNotNull(cm.getAll(\"poolKey\"));\nAssert.assertNotEquals(0, cm.getAll(\"poolKey\").size());\nAssert.assertNotEquals(2, cm.getAll(\"poolKey\").size());\nAssert.assertNotEquals(4, cm.getAll(\"poolKey\").size());\nAssert.assertNotEquals(5, cm.getAll(\"poolKey\").size());\nAssert.assertNotEquals(1, cm.getAll(\"poolKey\").size());\nAssert.assertNotEquals(6, cm.getAll(\"poolKey\").size());\nAssert.assertNotEquals(7, cm.getAll(\"poolKey\").size());\nAssert.assertNotEquals(8, cm.getAll(\"poolKey\").size());\nAssert.assertNotEquals(9, cm.getAll(\"poolKey\").size());\nAssert.assertNotEquals(10, cm.getAll(\"poolKey\").size());\nAssert.assertNotEquals(11, cm.getAll(\"poolKey\").size());\nAssert.assertNotEquals(12, cm.getAll(\"poolKey\").size());\nAssert.assertNotEquals(13, cm.getAll(\"poolKey\").size());\nAssert.assertNotEquals(14, cm.getAll(\"poolKey\").size());\nAssert.assertNotEquals(15, cm.getAll(\"poolKey\").size());\n====================\n\n",
    "scores": [
        0.976,
        0.932,
        0.92,
        0.92,
        0.92,
        0.92,
        0.92,
        0.92,
        0.92,
        0.92,
        0.92,
        0.909,
        0.909,
        0.909,
        0.909,
        0.909,
        0.786,
        0.737,
        0.697,
        0.697,
        0.697
    ],
    "ground_truth": "Assert.assertEquals(3,cm.getAll(poolKey).size());"
}