{
    "prompt": "Below is the focal class and test class for reference:\n\npackage rhwayfun.spring-boot-rocketmq-starter;\n\npublic class RocketMqAutoConfiguration {\npublic DefaultMQProducer getProducer ( ) {\nreturn producer ;\n}\n}\n\npackage rhwayfun.spring-boot-rocketmq-starter;\n\npublic class RocketMqAutoConfigurationTest {\n@Test\npublic void defaultRocketMqProducer ( ) {\nload ( \"STR\" + TEST_NAME_SERVER , \"STR\" + TEST_PRODUCER_GROUP ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "Assert.assertNotNull(producer);\nAssert.assertEquals(\"TEST_NAME_SERVER\", producer.getNameServerAddress());\nAssert.assertEquals(\"TEST_PRODUCER_GROUP\", producer.getProducerGroup());\nAssert.assertEquals(10000, producer.getSendMsgTimeout());\nAssert.assertEquals(3, producer.getRetryTimesWhenSendFailed());\nAssert.assertEquals(1024, producer.getMaxMessageSize());\nAssert.assertEquals(4, producer.getDefaultTopicQueueNums());\nAssert.assertEquals(5, producer.getCompressMsgBodyOverHowmuch());\nAssert.assertEquals(6, producer.getRetryTimesWhenSendAsyncFailed());\nAssert.assertEquals(7, producer.getRetryAnotherBrokerWhenNotStoreOK());\nAssert.assertEquals(8, producer.getMaxMessageSize());\nAssert.assertEquals(9, producer.getCompressMsgBodyOverHowmuch());\nAssert.assertEquals(10, producer.getRetryTimesWhenSendAsyncFailed());\nAssert.assertEquals(11, producer.getRetryAnotherBrokerWhenNotStoreOK());\nAssert.assertEquals(12, producer.getCompressMsgBodyOverHowmuch());\nAssert.assertEquals(13, producer.getRetryTimesWhenSendAsyncFailed());\nAssert.assertEquals(14, producer.getRetryAnotherBrokerWhenNotStoreOK());\nAssert.assertEquals(15, producer.getMaxMessageSize());\nAssert.assertEquals(16, producer.getCompressMsgBodyOverHowmuch());\nAssert.assertEquals(17, producer.getRetryTimesWhenSendAsyncFailed());\nAssert.assertEquals(18, producer.getRetryAnotherBrokerWhenNotStoreOK());\nAssert.assertEquals(19, producer.getMaxMessageSize());\nAssert.assertEquals(20, producer.getCompressMsgBodyOverHowmuch());\n====================\n\n",
    "scores": [
        0.367,
        0.34,
        0.336,
        0.336,
        0.336,
        0.33,
        0.327,
        0.327,
        0.327,
        0.299,
        0.299,
        0.296,
        0.273,
        0.27,
        0.27,
        0.264,
        0.253,
        0.24,
        0.24,
        0.239,
        0.238,
        0.238,
        0.238
    ],
    "ground_truth": "Assert.assertTrue(this.context.containsBean(\"STR\"));"
}