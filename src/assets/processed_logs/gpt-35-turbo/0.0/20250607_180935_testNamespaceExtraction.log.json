{
    "prompt": "Below is the focal class and test class for reference:\n\npackage DigitalPebble.storm-crawler.core;\n\npublic class StackOverflow {\npublic Metadata ( ) {\nmd = new HashMap < > ( ) ;\n}\n}\n\npackage DigitalPebble.storm-crawler.core;\n\npublic class StackOverflowTest {\n@Test\npublic void testNamespaceExtraction ( ) throws IOException {\nprepareParserBolt ( \"STR\" ) ;\nMetadata metadata = new Metadata ( ) ;\nparse ( \"STR\" , \"STR\" , metadata ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertEquals(\"Expected value\", actualValue);\nassertTrue(condition);\nassertFalse(condition);\nassertNotNull(object);\nassertNull(object);\nassertSame(expectedObject, actualObject);\nassertNotSame(expectedObject, actualObject);\nassertArrayEquals(expectedArray, actualArray);\nassertEquals(expectedDouble, actualDouble, delta);\nassertNotEquals(expectedValue, actualValue);\nassertThrows(Exception.class, () -> methodThatThrowsException());\nassertTimeout(Duration.ofSeconds(5), () -> methodThatShouldFinishIn5Seconds());\nassertAll(() -> assertEquals(\"value1\", actualValue1), () -> assertEquals(\"value2\", actualValue2));\nassertLinesMatch(expectedLines, actualLines);\nassertIterableEquals(expectedList, actualList);\nassertTimeoutPreemptively(Duration.ofSeconds(5), () -> methodThatShouldFinishIn5Seconds());\nassertTimeout(Duration.ofSeconds(5), () -> methodThatShouldFinishIn5Seconds());\nassertTimeoutPreemptively(Duration.ofSeconds(5), () -> methodThatShouldFinishIn5Seconds());\nassertTimeout(Duration.ofSeconds(5), () -> methodThatShouldFinishIn5Seconds());\n====================\n\n",
    "scores": [
        0.458,
        0.452,
        0.442,
        0.438,
        0.437,
        0.427,
        0.4,
        0.381,
        0.381,
        0.364,
        0.359,
        0.359,
        0.359,
        0.341,
        0.341,
        0.311,
        0.272,
        0.262,
        0.259
    ],
    "ground_truth": "Assert.assertEquals(1,output.getEmitted().size());"
}