{
    "prompt": "Below is the focal class and test class for reference:\n\npackage hazelcast.hazelcast-simulator.simulator;\n\npublic class CommonUtils_Sleep {\npublic static void sleepTimeUnit ( TimeUnit timeUnit , long timeout ) {\ntry {\ntimeUnit . sleep ( timeout ) ;\n} catch ( InterruptedException e ) {\nignore ( e ) ;\n} }\n}\n\npackage hazelcast.hazelcast-simulator.simulator;\n\npublic class CommonUtils_SleepTest {\n@Test\npublic void testSleepTimeUnit ( ) {\nlong started = System . nanoTime ( ) ;\nsleepTimeUnit ( MILLISECONDS , 1 ) ;\nlong duration = NANOSECONDS . toMillis ( System . nanoTime ( ) - started ) ;\nlong durationLimit = SECONDS . toMillis ( 3 ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "Assertions:\n\nassertEquals(1, duration);\nassertTrue(duration >= 0);\nassertTrue(duration <= durationLimit);\nassertFalse(duration > durationLimit);\nassertTrue(duration < durationLimit);\nassertNotEquals(0, duration);\nassertNotNull(duration);\nassertNull(null);\nassertSame(duration, duration);\nassertNotSame(started, duration);\nassertTrue(duration > 0);\nassertFalse(duration < 0);\nassertTrue(durationLimit > 0);\nassertFalse(durationLimit < 0);\nassertTrue(durationLimit >= 0);\nassertFalse(durationLimit <= 0);\nassertTrue(durationLimit > duration);\nassertFalse(durationLimit < duration);\nassertTrue(durationLimit >= duration);\nassertFalse(durationLimit <= duration);\n====================\n\n",
    "scores": [
        0.709,
        0.7,
        0.657,
        0.647,
        0.639,
        0.63,
        0.582,
        0.575,
        0.568,
        0.529,
        0.526,
        0.521,
        0.514,
        0.5,
        0.5,
        0.5,
        0.494,
        0.45,
        0.439,
        0.328
    ],
    "ground_truth": "assertTrue(format(\"STR\",duration),duration>0);"
}