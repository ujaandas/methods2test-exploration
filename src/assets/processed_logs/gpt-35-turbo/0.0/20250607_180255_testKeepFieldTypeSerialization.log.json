{
    "prompt": "Below is the focal class and test class for reference:\n\npackage orientechnologies.orientdb.core;\n\npublic class ODocument {\npublic OType fieldType ( final String iFieldName ) {\ncheckForLoading ( ) ;\ncheckForFields ( iFieldName ) ;\nODocumentEntry entry = _fields . get ( iFieldName ) ;\nif ( entry != null ) return entry . type ;\nreturn null ;\n}\n}\n\npackage orientechnologies.orientdb.core;\n\npublic class ODocumentTest {\n@Test\npublic void testKeepFieldTypeSerialization ( ) throws Exception {\nODocument doc = new ODocument ( ) ;\ndoc . field ( \"STR\" , 10 , OType . INTEGER ) ;\ndoc . field ( \"STR\" , new ORecordId ( 1 , 2 ) , OType . LINK ) ;\ndoc . field ( \"STR\" , 20 , OType . STRING ) ;\ndoc . field ( \"STR\" , new byte [ ] {\n30 } , OType . BINARY ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertEquals(OType.INTEGER, doc.fieldType(\"STR\"));\nassertEquals(OType.LINK, doc.fieldType(\"STR\"));\nassertEquals(OType.STRING, doc.fieldType(\"STR\"));\nassertEquals(OType.BINARY, doc.fieldType(\"STR\"));\nassertNull(doc.fieldType(\"NON_EXISTING_FIELD\"));\nassertEquals(OType.INTEGER, doc.fieldType(\"INT_FIELD\"));\nassertEquals(OType.LINK, doc.fieldType(\"LINK_FIELD\"));\nassertEquals(OType.STRING, doc.fieldType(\"STRING_FIELD\"));\nassertEquals(OType.BINARY, doc.fieldType(\"BINARY_FIELD\"));\nassertNull(doc.fieldType(\"NULL_FIELD\"));\nassertEquals(OType.INTEGER, doc.fieldType(\"INT_FIELD\"));\nassertEquals(OType.LINK, doc.fieldType(\"LINK_FIELD\"));\nassertEquals(OType.STRING, doc.fieldType(\"STRING_FIELD\"));\nassertEquals(OType.BINARY, doc.fieldType(\"BINARY_FIELD\"));\nassertNull(doc.fieldType(\"NULL_FIELD\"));\nassertEquals(OType.INTEGER, doc.fieldType(\"INT_FIELD\"));\nassertEquals(OType.LINK, doc.fieldType(\"LINK_FIELD\"));\nassertEquals(OType.STRING, doc.fieldType(\"STRING_FIELD\"));\nassertEquals(OType.BINARY, doc.fieldType(\"BINARY_FIELD\"));\n====================\n\n",
    "scores": [
        0.731,
        0.716,
        0.716,
        0.708,
        0.654,
        0.654,
        0.654,
        0.647,
        0.647,
        0.647,
        0.621,
        0.621,
        0.62,
        0.62,
        0.62,
        0.615,
        0.615,
        0.615,
        0.611
    ],
    "ground_truth": "assertEquals(doc.fieldType(\"STR\"),OType.INTEGER);"
}