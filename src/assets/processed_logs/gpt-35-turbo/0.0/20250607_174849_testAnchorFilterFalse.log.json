{
    "prompt": "Below is the focal class and test class for reference:\n\npackage DigitalPebble.storm-crawler.core;\n\npublic class BasicURLNormalizer {\npublic String filter ( URL sourceUrl , Metadata sourceMetadata , String urlToFilter ) ;\n}\n\npackage DigitalPebble.storm-crawler.core;\n\npublic class BasicURLNormalizerTest {\n@Test\npublic void testAnchorFilterFalse ( ) throws MalformedURLException {\nURLFilter allAllowed = createFilter ( false , false ) ;\nURL url = new URL ( \"STR\" ) ;\nMetadata metadata = new Metadata ( ) ;\nString filterResult = allAllowed . filter ( url , metadata , url . toExternalForm ( ) ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertEquals(\"STR\", filterResult);\nassertNotEquals(\"http://example.com\", filterResult);\nassertTrue(filterResult.contains(\"STR\"));\nassertFalse(filterResult.isEmpty());\nassertNotNull(filterResult);\nassertEquals(\"STR\", filterResult.trim());\nassertTrue(filterResult.startsWith(\"S\"));\nassertFalse(filterResult.endsWith(\"R\"));\nassertEquals(\"STR\", filterResult.toUpperCase());\nassertEquals(\"str\", filterResult.toLowerCase());\nassertTrue(filterResult.matches(\"[A-Z]+\"));\nassertFalse(filterResult.matches(\"[0-9]+\"));\nassertTrue(filterResult.length() > 0);\nassertFalse(filterResult.equals(\"abc\"));\nassertTrue(filterResult.contains(\"T\"));\nassertFalse(filterResult.contains(\"X\"));\nassertTrue(filterResult.contains(\"S\"));\nassertFalse(filterResult.contains(\" \"));\nassertEquals(\"STR\", filterResult.substring(0, 3));\nassertNotEquals(\"str\", filterResult);\nassertTrue(filterResult.matches(\"[A-Z]+\"));\n====================\n\n",
    "scores": [
        0.684,
        0.683,
        0.639,
        0.628,
        0.602,
        0.595,
        0.581,
        0.574,
        0.561,
        0.541,
        0.535,
        0.535,
        0.535,
        0.512,
        0.511,
        0.494,
        0.494,
        0.483,
        0.483,
        0.472,
        0.472
    ],
    "ground_truth": "Assert.assertEquals(url.toExternalForm(),filterResult);"
}