{
    "prompt": "Below is the focal class and test class for reference:\n\npackage orientechnologies.orientdb.core;\n\npublic class OCommandExecutorSQLSelect {\n@Override\npublic < RET extends List < ? > > RET query ( OQuery < ? > iCommand , Object ... iArgs ) {\ncheckOpenness ( ) ;\nreturn internal . query ( iCommand , iArgs ) ;\n}\n}\n\npackage orientechnologies.orientdb.core;\n\npublic class OCommandExecutorSQLSelectTest {\n@Test\npublic void testParamWithMatches ( ) {\nMap < String , Object > params = new HashMap < String , Object > ( ) ;\nparams . put ( \"STR\" , \"STR\" ) ;\nOSQLSynchQuery sql = new OSQLSynchQuery ( \"STR\" ) ;\nList < ODocument > results = db . query ( sql , params ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertEquals(1, results.size());\nassertTrue(results.get(0).field(\"name\").equals(\"John Doe\"));\nassertFalse(results.isEmpty());\nassertNotNull(results.get(0));\nassertEquals(\"STR\", params.get(\"STR\"));\nassertTrue(results.get(0).field(\"age\") > 18);\nassertEquals(0, results.get(0).field(\"status\"));\nassertNotNull(results);\nassertTrue(results.get(0).field(\"city\").equals(\"New York\"));\nassertEquals(1, results.get(0).field(\"id\"));\nassertTrue(results.get(0).field(\"gender\").equals(\"Male\"));\nassertFalse(results.isEmpty());\nassertNotNull(params);\nassertEquals(\"STR\", results.get(0).field(\"name\"));\nassertTrue(results.get(0).field(\"address\").equals(\"123 Main St\"));\nassertEquals(0, results.get(0).field(\"score\"));\nassertTrue(results.get(0).field(\"email\").equals(\"john.doe@example.com\"));\nassertFalse(params.isEmpty());\nassertEquals(\"STR\", results.get(0).field(\"type\"));\nassertTrue(results.get(0).field(\"phone\").equals(\"555-1234\"));\n====================\n\n",
    "scores": [
        0.933,
        0.733,
        0.733,
        0.722,
        0.712,
        0.667,
        0.667,
        0.667,
        0.654,
        0.632,
        0.611,
        0.597,
        0.576,
        0.46,
        0.455,
        0.455,
        0.444,
        0.43,
        0.392,
        0.392
    ],
    "ground_truth": "assertEquals(results.size(),1);"
}