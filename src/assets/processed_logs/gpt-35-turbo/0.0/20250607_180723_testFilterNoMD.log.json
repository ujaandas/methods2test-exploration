{
    "prompt": "Below is the focal class and test class for reference:\n\npackage DigitalPebble.storm-crawler.core;\n\npublic class MetadataFilter {\npublic String filter ( URL sourceUrl , Metadata sourceMetadata , String urlToFilter ) ;\n}\n\npackage DigitalPebble.storm-crawler.core;\n\npublic class MetadataFilterTest {\n@Test\npublic void testFilterNoMD ( ) throws MalformedURLException {\nURLFilter filter = createFilter ( \"STR\" , \"STR\" ) ;\nURL url = new URL ( \"STR\" ) ;\nMetadata metadata = new Metadata ( ) ;\nString filterResult = filter . filter ( url , metadata , url . toExternalForm ( ) ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertEquals(\"\", filterResult);\nassertNotNull(filterResult);\nassertTrue(filterResult.isEmpty());\nassertEquals(url.toExternalForm(), filterResult);\nassertNotEquals(\"example.com\", filterResult);\nassertTrue(filterResult.contains(\"http\"));\nassertFalse(filterResult.endsWith(\"/\"));\nassertTrue(filterResult.startsWith(\"https\"));\nassertEquals(200, filterResult.length());\nassertNotNull(filterResult.trim());\nassertTrue(filterResult.matches(\"[a-zA-Z0-9]+\"));\nassertFalse(filterResult.equals(\"www.example.com\"));\nassertTrue(filterResult.equalsIgnoreCase(url.toExternalForm()));\nassertNotEquals(\"https://www.example.com\", filterResult);\nassertTrue(filterResult.contains(\"example\"));\nassertFalse(filterResult.startsWith(\"ftp\"));\nassertEquals(1, filterResult.split(\"/\").length);\nassertTrue(filterResult.matches(\".*[0-9].*\"));\nassertNotEquals(\"https://www.example.com\", filterResult);\nassertTrue(filterResult.endsWith(\".com\"));\n====================\n\n",
    "scores": [
        1.0,
        0.711,
        0.689,
        0.628,
        0.608,
        0.608,
        0.6,
        0.595,
        0.581,
        0.543,
        0.535,
        0.519,
        0.511,
        0.477,
        0.477,
        0.469,
        0.462,
        0.462,
        0.457,
        0.442
    ],
    "ground_truth": "Assert.assertEquals(url.toExternalForm(),filterResult);"
}