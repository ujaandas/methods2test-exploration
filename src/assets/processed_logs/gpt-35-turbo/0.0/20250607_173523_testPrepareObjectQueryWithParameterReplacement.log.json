{
    "prompt": "Below is the focal class and test class for reference:\n\npackage amlinv.stat-collection-utils;\n\npublic class ObjectQueryPreparer {\npublic Object getTarget ( ) {\nreturn target ;\n}\n}\n\npackage amlinv.stat-collection-utils;\n\npublic class ObjectQueryPreparerTest {\n@Test\npublic void testPrepareObjectQueryWithParameterReplacement ( ) throws Exception {\nObjectQueryInfo result ;\nthis . initPreparer ( ) ;\nMockito . when ( this . mockParameterReplacer . replaceObjectNameParameters ( TEST_ONAME_STR002 , this . testTarget002 ) ) . thenReturn ( TEST_ONAME_STR002B ) ;\nresult = this . preparer . prepareObjectQuery ( this . testTarget002 ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "Assert.assertNotNull(result);\nAssert.assertEquals(TEST_ONAME_STR002B, result.getObjectName());\nAssert.assertEquals(TEST_ONAME_STR002, result.getOriginalObjectName());\nAssert.assertEquals(this.testTarget002, result.getTarget());\nAssert.assertEquals(0, result.getParameters().size());\nAssert.assertEquals(0, result.getConditions().size());\nAssert.assertEquals(0, result.getSorts().size());\nAssert.assertEquals(0, result.getJoins().size());\nAssert.assertEquals(0, result.getGroupBys().size());\nAssert.assertEquals(0, result.getHavingConditions().size());\nAssert.assertEquals(0, result.getSelectColumns().size());\nAssert.assertEquals(0, result.getSelectExpressions().size());\nAssert.assertEquals(0, result.getSelectAliases().size());\nAssert.assertEquals(0, result.getSelectFunctions().size());\nAssert.assertEquals(0, result.getSelectDistincts().size());\nAssert.assertEquals(0, result.getSelectAggregates().size());\nAssert.assertEquals(0, result.getSelectGroupBys().size());\nAssert.assertEquals(0, result.getSelectHavingConditions().size());\nAssert.assertEquals(0, result.getSelectJoins().size());\nAssert.assertEquals(0, result.getSelectSorts().size());\n====================\n\n",
    "scores": [
        0.92,
        0.574,
        0.562,
        0.543,
        0.539,
        0.526,
        0.526,
        0.52,
        0.519,
        0.515,
        0.515,
        0.511,
        0.51,
        0.505,
        0.505,
        0.505,
        0.5,
        0.495,
        0.491,
        0.4
    ],
    "ground_truth": "assertSame(this.testTarget002,result.getTarget());"
}