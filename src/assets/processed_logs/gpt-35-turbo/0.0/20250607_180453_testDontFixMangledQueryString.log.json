{
    "prompt": "Below is the focal class and test class for reference:\n\npackage DigitalPebble.storm-crawler.core;\n\npublic class BasicURLNormalizer {\npublic String filter ( URL sourceUrl , Metadata sourceMetadata , String urlToFilter ) ;\n}\n\npackage DigitalPebble.storm-crawler.core;\n\npublic class BasicURLNormalizerTest {\n@Test\npublic void testDontFixMangledQueryString ( ) throws MalformedURLException {\nURLFilter urlFilter = createFilter ( true , false , queryParamsToFilter ) ;\nURL testSourceUrl = new URL ( \"STR\" ) ;\nString testUrl = \"STR\" ;\nString expectedResult = \"STR\" ;\nString normalizedUrl = urlFilter . filter ( testSourceUrl , new Metadata ( ) , testUrl ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertEquals(expectedResult, normalizedUrl);\nassertNotNull(normalizedUrl);\nassertTrue(normalizedUrl.startsWith(\"http://\"));\nassertFalse(normalizedUrl.contains(\" \"));\nassertNotEquals(\"STR\", normalizedUrl);\nassertTrue(normalizedUrl.length() > 0);\nassertTrue(normalizedUrl.endsWith(\".com\"));\nassertTrue(normalizedUrl.matches(\".*\\\\d+.*\"));\nassertTrue(normalizedUrl.contains(\"example\"));\nassertTrue(normalizedUrl.matches(\"[a-zA-Z0-9]+\"));\nassertTrue(normalizedUrl.matches(\".*[a-zA-Z].*\"));\nassertTrue(normalizedUrl.matches(\".*[0-9].*\"));\nassertTrue(normalizedUrl.matches(\".*[!@#$%^&*()].*\"));\nassertTrue(normalizedUrl.matches(\".*[a-z].*\"));\nassertTrue(normalizedUrl.matches(\".*[A-Z].*\"));\nassertTrue(normalizedUrl.matches(\".*[0-9].*\"));\nassertTrue(normalizedUrl.matches(\".*[a-zA-Z0-9].*\"));\nassertTrue(normalizedUrl.matches(\".*[a-zA-Z0-9]+.*\"));\nassertTrue(normalizedUrl.matches(\".*[a-zA-Z0-9]+.*\"));\nassertTrue(normalizedUrl.matches(\".*[a-zA-Z0-9]+.*\"));\n====================\n\n",
    "scores": [
        0.933,
        0.786,
        0.605,
        0.552,
        0.524,
        0.489,
        0.473,
        0.473,
        0.468,
        0.468,
        0.468,
        0.468,
        0.463,
        0.454,
        0.454,
        0.44,
        0.436,
        0.436,
        0.436,
        0.436
    ],
    "ground_truth": "assertEquals(\"STR\",expectedResult,normalizedUrl);"
}