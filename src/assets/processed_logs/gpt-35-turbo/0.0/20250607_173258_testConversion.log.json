{
    "prompt": "Below is the focal class and test class for reference:\n\npackage fabric8io.fabric8-maven-plugin.enricher/api;\n\npublic class GoTimeUtil {\npublic static Integer durationSeconds ( String duration ) {\nBigDecimal ns = durationNs ( duration ) ;\nif ( ns == null ) {\nreturn null ;\n} BigDecimal sec = ns . divide ( new BigDecimal ( 1_000_000_000 ) ) ;\nif ( sec . compareTo ( new BigDecimal ( Integer . MAX_VALUE ) ) > 0 ) {\nthrow new IllegalArgumentException ( \"STR\" ) ;\n} return sec . intValue ( ) ;\n}\n}\n\npackage fabric8io.fabric8-maven-plugin.enricher/api;\n\npublic class GoTimeUtilTest {\n@Test\npublic void testConversion ( ) {\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertEquals(0, GoTimeUtil.durationSeconds(\"0s\"));\nassertEquals(1, GoTimeUtil.durationSeconds(\"1ns\"));\nassertEquals(1, GoTimeUtil.durationSeconds(\"1000000ns\"));\nassertEquals(1, GoTimeUtil.durationSeconds(\"1us\"));\nassertEquals(1, GoTimeUtil.durationSeconds(\"1000us\"));\nassertEquals(1, GoTimeUtil.durationSeconds(\"1ms\"));\nassertEquals(1, GoTimeUtil.durationSeconds(\"1000ms\"));\nassertEquals(1, GoTimeUtil.durationSeconds(\"1s\"));\nassertEquals(60, GoTimeUtil.durationSeconds(\"1m\"));\nassertEquals(3600, GoTimeUtil.durationSeconds(\"1h\"));\nassertEquals(86400, GoTimeUtil.durationSeconds(\"1d\"));\nassertEquals(604800, GoTimeUtil.durationSeconds(\"1w\"));\nassertEquals(1209600, GoTimeUtil.durationSeconds(\"2w\"));\nassertEquals(2592000, GoTimeUtil.durationSeconds(\"30d\"));\nassertEquals(31536000, GoTimeUtil.durationSeconds(\"1y\"));\nassertEquals(315360000, GoTimeUtil.durationSeconds(\"10y\"));\nassertEquals(3153600000, GoTimeUtil.durationSeconds(\"100y\"));\nassertEquals(31536000000, GoTimeUtil.durationSeconds(\"1000y\"));\nassertEquals(315360000000, GoTimeUtil.durationSeconds(\"10000y\"));\nassertEquals(3153600000000, GoTimeUtil.durationSeconds(\"100000y\"));\n====================\n\n",
    "scores": [
        0.707,
        0.707,
        0.7,
        0.7,
        0.7,
        0.7,
        0.686,
        0.68,
        0.68,
        0.68,
        0.673,
        0.667,
        0.66,
        0.66,
        0.66,
        0.648,
        0.636,
        0.625,
        0.614,
        0.603
    ],
    "ground_truth": "assertEquals(newInteger(23),durationSeconds(\"STR\"));"
}