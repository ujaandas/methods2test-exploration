{
    "prompt": "Below is the focal class and test class for reference:\n\npackage amlinv.stat-collection-utils;\n\npublic class ObjectQueryPreparer {\npublic ObjectQueryInfo prepareObjectQuery ( Object obj ) throws MalformedObjectNameException {\nObjectQueryInfo result ;\nString onamePattern = MBeanAnnotationUtil . getLocationONamePattern ( obj ) ;\nif ( onamePattern != null ) {\nMap < String , Method > attributeSetters = MBeanAnnotationUtil . getAttributes ( obj ) ;\nif ( attributeSetters . size ( ) > 0 ) {\nString onameString ;\nif ( obj instanceof MBeanLocationParameterSource ) {\nonameString = this . parameterReplacer . replaceObjectNameParameters ( onamePattern , ( MBeanLocationParameterSource ) obj ) ;\n} else {\nonameString = onamePattern ;\n} ObjectName oname = new ObjectName ( onameString ) ;\nresult = new ObjectQueryInfo ( obj , oname , attributeSetters ) ;\n} else {\nthis . logNoAttributeThrottle . warn ( log , \"STR\" , onamePattern ) ;\nresult = null ;\n} } else {\nlog . warn ( \"STR\" ) ;\nresult = null ;\n} return result ;\n}\n}\n\npackage amlinv.stat-collection-utils;\n\npublic class ObjectQueryPreparerTest {\n@Test\npublic void testPrepareObjectNoSetters ( ) throws Exception {\nthis . initPreparer ( ) ;\nObjectQueryInfo result = this . preparer . prepareObjectQuery ( this . testTarget003 ) ;\n<ASSERTIONS HERE>\n}\n}\n\nPlease generate 20 assertions to be inserted in place of <ASSERTIONS HERE> in the test method. Only generate code (no comments or explanations).\n========================\n\n",
    "response": "assertNotNull(result);\nassertNull(result.getObjectName());\nassertNull(result.getAttributeSetters());\nassertNull(result.getObject());\nassertEquals(0, result.getAttributeSetters().size());\nassertNull(result.getObjectName());\nassertNull(result.getObject());\nassertNull(result.getAttributeSetters());\nassertNull(result.getObjectName());\nassertNull(result.getObject());\nassertNull(result.getAttributeSetters());\nassertNull(result.getObjectName());\nassertNull(result.getObject());\nassertNull(result.getAttributeSetters());\nassertNull(result.getObjectName());\nassertNull(result.getObject());\nassertNull(result.getAttributeSetters());\nassertNull(result.getObjectName());\nassertNull(result.getObject());\nassertNull(result.getAttributeSetters());\nassertNull(result.getObjectName());\nassertNull(result.getObject());\nassertNull(result.getAttributeSetters());\nassertNull(result.getObjectName());\nassertNull(result.getObject());\nassertNull(result.getAttributeSetters());\n====================\n\n",
    "scores": [
        0.923,
        0.75,
        0.75,
        0.75,
        0.75,
        0.75,
        0.75,
        0.75,
        0.75,
        0.692,
        0.692,
        0.692,
        0.692,
        0.692,
        0.692,
        0.692,
        0.692,
        0.621,
        0.621,
        0.621,
        0.621,
        0.621,
        0.621,
        0.621,
        0.621,
        0.464
    ],
    "ground_truth": "assertNull(result);"
}